ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cyfitter_cfg.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CyClockStartupError,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CyClockStartupError, %function
  24              	CyClockStartupError:
  25              	.LFB187:
  26              		.file 1 "Generated_Source\\PSoC6\\cyfitter_cfg.c"
   1:Generated_Source\PSoC6/cyfitter_cfg.c **** 
   2:Generated_Source\PSoC6/cyfitter_cfg.c **** /*******************************************************************************
   3:Generated_Source\PSoC6/cyfitter_cfg.c **** * File Name: cyfitter_cfg.c
   4:Generated_Source\PSoC6/cyfitter_cfg.c **** * 
   5:Generated_Source\PSoC6/cyfitter_cfg.c **** * PSoC Creator  4.4
   6:Generated_Source\PSoC6/cyfitter_cfg.c **** *
   7:Generated_Source\PSoC6/cyfitter_cfg.c **** * Description:
   8:Generated_Source\PSoC6/cyfitter_cfg.c **** * This file contains device initialization code.
   9:Generated_Source\PSoC6/cyfitter_cfg.c **** * Except for the user defined sections in CyClockStartupError(), this file should not be modified.
  10:Generated_Source\PSoC6/cyfitter_cfg.c **** * This file is automatically generated by PSoC Creator.
  11:Generated_Source\PSoC6/cyfitter_cfg.c **** *
  12:Generated_Source\PSoC6/cyfitter_cfg.c **** ********************************************************************************
  13:Generated_Source\PSoC6/cyfitter_cfg.c **** * Copyright (c) 2007-2020 Cypress Semiconductor.  All rights reserved.
  14:Generated_Source\PSoC6/cyfitter_cfg.c **** * You may use this file only in accordance with the license, terms, conditions, 
  15:Generated_Source\PSoC6/cyfitter_cfg.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  16:Generated_Source\PSoC6/cyfitter_cfg.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC6/cyfitter_cfg.c **** ********************************************************************************/
  18:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  19:Generated_Source\PSoC6/cyfitter_cfg.c **** #include <string.h>
  20:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "cydevice_trm.h"
  21:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "cyfitter.h"
  22:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "gpio/cy_gpio.h"
  23:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "syslib/cy_syslib.h"
  24:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "cyfitter_cfg.h"
  25:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "cyapicallbacks.h"
  26:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "sysclk/cy_sysclk.h"
  27:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "systick/cy_systick.h"
  28:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  29:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CY_NEED_CYCLOCKSTARTUPERROR 1
  30:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "syspm/cy_syspm.h"
  31:Generated_Source\PSoC6/cyfitter_cfg.c **** 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 2


  32:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  33:Generated_Source\PSoC6/cyfitter_cfg.c **** #if defined(__GNUC__) || defined(__ARMCC_VERSION)
  34:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYPACKED 
  35:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYPACKED_ATTR __attribute__ ((packed))
  36:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYALIGNED __attribute__ ((aligned))
  37:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CY_CFG_UNUSED __attribute__ ((unused))
  38:Generated_Source\PSoC6/cyfitter_cfg.c ****     #ifndef CY_CFG_SECTION
  39:Generated_Source\PSoC6/cyfitter_cfg.c ****         #define CY_CFG_SECTION __attribute__ ((section(".psocinit")))
  40:Generated_Source\PSoC6/cyfitter_cfg.c ****     #endif
  41:Generated_Source\PSoC6/cyfitter_cfg.c ****     
  42:Generated_Source\PSoC6/cyfitter_cfg.c ****     #if defined(__ARMCC_VERSION)
  43:Generated_Source\PSoC6/cyfitter_cfg.c ****         #define CY_CFG_MEMORY_BARRIER() __memory_changed()
  44:Generated_Source\PSoC6/cyfitter_cfg.c ****     #else
  45:Generated_Source\PSoC6/cyfitter_cfg.c ****         #define CY_CFG_MEMORY_BARRIER() __sync_synchronize()
  46:Generated_Source\PSoC6/cyfitter_cfg.c ****     #endif
  47:Generated_Source\PSoC6/cyfitter_cfg.c ****     
  48:Generated_Source\PSoC6/cyfitter_cfg.c **** #elif defined(__ICCARM__)
  49:Generated_Source\PSoC6/cyfitter_cfg.c ****     #include <intrinsics.h>
  50:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  51:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYPACKED __packed
  52:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYPACKED_ATTR 
  53:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYALIGNED _Pragma("data_alignment=4")
  54:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CY_CFG_UNUSED _Pragma("diag_suppress=Pe177")
  55:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CY_CFG_SECTION _Pragma("location=\".psocinit\"")
  56:Generated_Source\PSoC6/cyfitter_cfg.c ****     
  57:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CY_CFG_MEMORY_BARRIER() __DMB()
  58:Generated_Source\PSoC6/cyfitter_cfg.c ****     
  59:Generated_Source\PSoC6/cyfitter_cfg.c **** #else
  60:Generated_Source\PSoC6/cyfitter_cfg.c ****     #error Unsupported toolchain
  61:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
  62:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  63:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifndef CYCODE
  64:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYCODE
  65:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
  66:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifndef CYDATA
  67:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYDATA
  68:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
  69:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifndef CYFAR
  70:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYFAR
  71:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
  72:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifndef CYXDATA
  73:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYXDATA
  74:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
  75:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  76:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  77:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  78:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYMEMZERO(void *s, size_t n);
  79:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  80:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYMEMZERO(void *s, size_t n)
  81:Generated_Source\PSoC6/cyfitter_cfg.c **** {
  82:Generated_Source\PSoC6/cyfitter_cfg.c **** 	(void)memset(s, 0, n);
  83:Generated_Source\PSoC6/cyfitter_cfg.c **** }
  84:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  85:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYCONFIGCPY(void *dest, const void *src, size_t n);
  86:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  87:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYCONFIGCPY(void *dest, const void *src, size_t n)
  88:Generated_Source\PSoC6/cyfitter_cfg.c **** {
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 3


  89:Generated_Source\PSoC6/cyfitter_cfg.c **** 	(void)memcpy(dest, src, n);
  90:Generated_Source\PSoC6/cyfitter_cfg.c **** }
  91:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  92:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYCONFIGCPYCODE(void *dest, const void *src, size_t n);
  93:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  94:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYCONFIGCPYCODE(void *dest, const void *src, size_t n)
  95:Generated_Source\PSoC6/cyfitter_cfg.c **** {
  96:Generated_Source\PSoC6/cyfitter_cfg.c **** 	(void)memcpy(dest, src, n);
  97:Generated_Source\PSoC6/cyfitter_cfg.c **** }
  98:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  99:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 100:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 101:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 102:Generated_Source\PSoC6/cyfitter_cfg.c **** /* Clock startup error codes                                                   */
 103:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_NO_ERROR    0u
 104:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_XTAL_ERROR  1u
 105:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_32KHZ_ERROR 2u
 106:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_PLL_ERROR   3u
 107:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_FLL_ERROR   4u
 108:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_WCO_ERROR   5u
 109:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 110:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 111:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifdef CY_NEED_CYCLOCKSTARTUPERROR
 112:Generated_Source\PSoC6/cyfitter_cfg.c **** /*******************************************************************************
 113:Generated_Source\PSoC6/cyfitter_cfg.c **** * Function Name: CyClockStartupError
 114:Generated_Source\PSoC6/cyfitter_cfg.c **** ********************************************************************************
 115:Generated_Source\PSoC6/cyfitter_cfg.c **** * Summary:
 116:Generated_Source\PSoC6/cyfitter_cfg.c **** *  If an error is encountered during clock configuration (crystal startup error,
 117:Generated_Source\PSoC6/cyfitter_cfg.c **** *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
 118:Generated_Source\PSoC6/cyfitter_cfg.c **** *  the customer, this function will stop in an infinite loop.
 119:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 120:Generated_Source\PSoC6/cyfitter_cfg.c **** * Parameters:
 121:Generated_Source\PSoC6/cyfitter_cfg.c **** *   void
 122:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 123:Generated_Source\PSoC6/cyfitter_cfg.c **** * Return:
 124:Generated_Source\PSoC6/cyfitter_cfg.c **** *   void
 125:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 126:Generated_Source\PSoC6/cyfitter_cfg.c **** *******************************************************************************/
 127:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
 128:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CyClockStartupError(uint8 errorCode);
 129:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
 130:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CyClockStartupError(uint8 errorCode)
 131:Generated_Source\PSoC6/cyfitter_cfg.c **** {
  27              		.loc 1 131 0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.L2:
  35 0000 FEE7     		b	.L2
  36              		.cfi_endproc
  37              	.LFE187:
  38              		.size	CyClockStartupError, .-CyClockStartupError
  39 0002 C046     		.section	.text.ClockInit,"ax",%progbits
  40              		.align	2
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 4


  41              		.code	16
  42              		.thumb_func
  43              		.type	ClockInit, %function
  44              	ClockInit:
  45              	.LFB188:
 132:Generated_Source\PSoC6/cyfitter_cfg.c ****     /* To remove the compiler warning if errorCode not used.                */
 133:Generated_Source\PSoC6/cyfitter_cfg.c ****     errorCode = errorCode;
 134:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 135:Generated_Source\PSoC6/cyfitter_cfg.c ****     /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
 136:Generated_Source\PSoC6/cyfitter_cfg.c ****     /* we will end up here to allow the customer to implement something to  */
 137:Generated_Source\PSoC6/cyfitter_cfg.c ****     /* deal with the clock condition.                                       */
 138:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 139:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifdef CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK
 140:Generated_Source\PSoC6/cyfitter_cfg.c ****     CY_CFG_Clock_Startup_ErrorCallback();
 141:Generated_Source\PSoC6/cyfitter_cfg.c **** #else
 142:Generated_Source\PSoC6/cyfitter_cfg.c ****     while(1) {}
 143:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif /* CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK */
 144:Generated_Source\PSoC6/cyfitter_cfg.c **** }
 145:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
 146:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 147:Generated_Source\PSoC6/cyfitter_cfg.c **** static void ClockInit(void);
 148:Generated_Source\PSoC6/cyfitter_cfg.c **** static void ClockInit(void)
 149:Generated_Source\PSoC6/cyfitter_cfg.c **** {
  46              		.loc 1 149 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 24
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		.loc 1 149 0
  51 0000 30B5     		push	{r4, r5, lr}
  52              		.cfi_def_cfa_offset 12
  53              		.cfi_offset 4, -12
  54              		.cfi_offset 5, -8
  55              		.cfi_offset 14, -4
  56 0002 87B0     		sub	sp, sp, #28
  57              		.cfi_def_cfa_offset 40
  58              	.LVL1:
  59              	.LBB45:
  60              	.LBB46:
  61              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sysclk/cy_sysclk.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \file cy_sysclk.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \version 2.0
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Provides an API declaration of the sysclk driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Copyright 2016-2020, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The System Clock (SysClk) driver contains the API for configuring system and
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 5


  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * peripheral clocks. 
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The functions and other declarations used in this driver are in cy_sysclk.h. 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and declarations in the PDL. 
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Firmware uses the API to configure , enable, or disable a clock.
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * 
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The clock system includes a variety of resources that can vary per device, including:
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Internal clock sources such as internal oscillators
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - External clock sources such as crystal oscillators or a signal on an I/O pin
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Generated clocks such as an FLL, a PLL, and peripheral clocks
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details of the 
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock system.
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The PDL defines clock system capabilities in:\n
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices\<family\>/<series\>/include\<series\>_config.h. (E.g.
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices/psoc6/include/psoc6_01_config.h).
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * User-configurable clock speeds are defined in the file system_<series>.h.
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * As an illustration of the clocking system, the following diagram shows the
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * PSoC 63 series clock tree. The actual tree may vary depending on the device series.
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details.
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * ![](sysclk_tree.png)
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The sysclk driver supports multiple peripheral clocks, as well as the fast 
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock, slow clock, backup domain clock, timer clock, and pump clock. The API
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for any given clock contains the functions to manage that clock. Functions
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for clock measurement and trimming are also provided.
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_configuration Configuration Considerations
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The availability of clock functions depend on the availability of the chip
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * resources that support those functions. Consult the device TRM before
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * attempting to use these functions.
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * LPActive and LPSleep power modes limit the maximum clock frequency allowed
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * on the device. Refer to the SysPm driver and the TRM for details.
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_more_information More Information
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the technical reference manual (TRM) and the device datasheet.
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_MISRA MISRA-C Compliance
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>MISRA Rule</th>
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Class (Required/Advisory)</th>
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Description</th>
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Description of Deviation(s)</th>
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.3</td>
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite expression of the "essentially unsigned" type is being
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         cast to a different type category.</td>
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The value got from the bitfield physically cannot exceed the enumeration
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         that describes this bitfield. So, the code is safe by design.</td>
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 6


  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.4</td>
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite floating point expression is being cast to double, or unsigned.</td>
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Casting a floating-point calculation result to an integer.</td>
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>13.4</td>
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The controlling expression of a for statement shall not contain any objects of floating t
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Scanning through a list of floating point values: only greater_than/less_then checks are 
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         with floating point numbers, the loop counter is integer. </td>
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>16.7</td>
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The object addressed by the pointer parameter is not modified and so the pointer could be
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         type 'pointer to const'.</td>
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The callback function for system power management (SysPm) must be of generic callback typ
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         contains non-const pointer parameter.</td>
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_changelog Changelog
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>2.0</td>
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated the ECO trimming values calculation algorithm in the \ref Cy_SysClk_EcoConfigure 
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         This change may invalidate the already used crystals, in cases: \n
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * The crystal frequency is less than 16 MHz (the supported crystal frequency range was ch
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * The maximum amplitude (internal calculation value) is less than 0.65 V. \n
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         Also the second parameter cSum takes into account both C0 (the crystal itself shunt capac
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         For detail, refer the \ref Cy_SysClk_EcoConfigure documentation and the ECO Trimming sect
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Enhanced the ECO performance for high-noise conditions that result from simultaneous swit
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="4">1.20</td>
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Flattened the organization of the driver source code into the single 
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         source directory and the single include directory.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     </td>
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Driver library directory-structure simplification.</td>
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated \ref Cy_SysClk_FllLocked function description</td>
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The SRSS_ver1 HW details clarification</td>
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Removed the following functions:
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_FllLostLock
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_WcoConfigureCsv
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_ClkHfConfigureCsv
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     </td>
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>No hardware support for the removed functions.</td>
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 7


 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added register access layer. Use register access macros instead
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         of direct register access using dereferenced pointers.</td>
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Makes register access device-independent, so that the PDL does 
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         not need to be recompiled for each supported part number.</td>
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.11</td>
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated the following functions. Now they use a semaphore when 
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         try to read the status or configure the SysClk measurement counters:
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * Cy_SysClk_StartClkMeasurementCounters()
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * Cy_SysClk_ClkMeasurementCountersGetFreq()
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         Now Cy_SysClk_ClkMeasurementCountersGetFreq() returns zero value,
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         if during measurement device was in the Deep Sleep or partially
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         blocking flash operation occurred </td>
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added arbiter mechanism for correct usage of the SysClk measurement 
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         counters</td>
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.10.1</td>
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Renamed Power Management section to Low Power Callback section</td>
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Documentation update and clarification</td>
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="5">1.10</td>
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated FLL parameter calculation</td>
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support low frequency sources</td>
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added Cy_SysClk_PiloSetTrim() and Cy_SysclkPiloGetTrim() functions</td>
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support PILO manual trims</td>
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Made Cy_SysClk_FllLostLock() function dependent on SRSS v1</td>
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Feature is not supported in SRSS v1</td>
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated Cy_SysClk_DeepSleepCallback() to save/restore both FLL and PLL settings</td>
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The function should return when the lock is established or a timeout has occurred</td>
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>General documentation updates</td>
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.0</td>
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Initial version</td>
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_macros           Macros
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_enums           General Enumerated Types
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 8


 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_returns         Function return values
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_eco             External Crystal Oscillator (ECO)
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The External Crystal Oscillator (ECO) is a clock source that consists
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of an oscillator circuit that drives an external crystal through its
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   dedicated ECO pins. The ECO is a source clock that can be used to
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source one or more clock paths (Refer to \ref group_sysclk_path_src).
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These clock paths can then source the processors and peripherals in
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the device.
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ECO relies on the presence of an external crystal. The pins
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connected to this crystal must be configured to operate in analog
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   drive mode with HSIOM connection set to GPIO control (HSIOM_SEL_GPIO).
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_eco_funcs       Functions
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_path_src           Clock Path Source
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Clock paths are a series of multiplexers that allow a source clock
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to drive multiple clocking resources down the chain. These paths are
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   used for active domain clocks that are not operational during chip 
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep, hibernate and off modes. Illustrated below is a diagram
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of the clock paths for the PSoC 63 series, showing the first three
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   clock paths. The source clocks for these paths are highlighted in
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the red box.
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - IMO: 8 MHz Internal Main Oscillator (Default)
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - EXTCLK: External clock (signal brought in through dedicated pins)
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ECO: External Crystal Oscillator (requires external crystal on dedicated pins)
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ALTHF: Select on-chip signals (e.g. BLE ECO)
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - Digital Signal (DSI): Digital signal from a UDB source
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some clock paths such as path 0 and path 1 have additional resources
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   that can be utilized to provide a higher frequency clock. For example, 
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 0 source clock can be used as the reference clock for the FLL and 
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 1 source clock can be used as the reference clock for the PLL.
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_path_source.png)
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The PDL driver cannot configure a clock path to use Digital Signal
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Interconnect (DSI) outputs as sources. This must be done through DSI
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   configuration tool such as PSoC Creator.
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_funcs     Functions
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_enums     Enumerated Types
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_fll             Frequency Locked Loop (FLL)
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is a clock generation circuit that can be used to produce a
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   some characteristics of the reference clock such as the accuracy of the
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source. However other attributes such as the clock phase are not preserved.
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is similar in purpose to a (Phase locked loop) PLL but they are
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   not equivalent.
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 9


 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL starts up (locks) faster and consumes less current than the PLL.
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL accepts a source clock with lower frequency than PLL, such as the WCO (32 KHz). 
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL does not lock phase. The hardware consist of a counter with a
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     current-controlled oscillator (CCO). The counter counts the number of output
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     clock edges in a reference clock period and adjusts the CCO until the
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     expected ratio is achieved (locked). After initial lock, the CCO is
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     adjusted dynamically to keep the ratio within tolerance. The lock tolerance
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     is user-adjustable.
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fll.png)
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the FLL. The first
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_FllConfigure() function, which calculates the 
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the FLL at run-time. This may be necessary for dynamic
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the FLL. However this method is slow as it needs to perform 
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the FLL. The other model is to call 
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_FllManualConfigure() function with pre-calculated parameter values. 
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the FLL calculation equations.
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_funcs       Functions
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_structs     Data Structures
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_enums       Enumerated Types
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pll             Phase Locked Loop (PLL)
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PLL is a clock generation circuit that can be used to produce a
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   characteristics of the reference clock such as the accuracy of the source
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and its phase. The PLL is similar in purpose to a (Frequency locked loop) FLL
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   but they are not equivalent.
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL starts up more slowly and consumes more current than the FLL.
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL requires a higher frequency source clock than PLL. 
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_pll.png)
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the PLL. The first
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_PllConfigure() function, which calculates the 
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the PLL at run-time. This may be necessary for dynamic
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the PLL. However this method is slow as it needs to perform 
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the PLL. The other model is to call 
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PllManualConfigure() function with pre-calculated parameter values. 
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the PLL calculation equations.
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_funcs       Functions
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_structs     Data Structures
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ilo             Internal Low-Speed Oscillator (ILO)
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ILO operates with no external components and outputs a stable clock at
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   32.768 kHz nominal. The ILO is relatively low power and low accuracy. It is 
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   available in all power modes and can be used as a source for the Backup domain clock.
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To ensure the ILO remains active in Hibernate mode, and across power-on-reset
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (POR) or brown out detect (BOD), firmware must call Cy_SysClk_IloHibernateOn(). 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 10


 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Additionally, the ILO clock can be trimmed to +/- 1.5% of nominal frequency using
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a higher precision clock source. Use the \ref group_sysclk_calclk API to measure 
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the current ILO frequency before trimming.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The ILO is always the source clock for the \ref group_wdt. Therefore:
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The WDT must be unlocked when making an ILO function call in the PDL
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - It is recommended to always have the ILO enabled
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_ilo_funcs       Functions
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pilo            Precision Internal Low-Speed Oscillator (PILO)
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PILO provides a higher accuracy 32.768 kHz clock than the \ref group_sysclk_ilo "ILO".
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   When periodically calibrated using a high-accuracy clock such as the
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_eco "ECO", the PILO can achieve 250 ppm accuracy of nominal frequency.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO is capable of operating in device Active, Sleep and Deep-Sleep power modes. 
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is not available in Hibernate mode.
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO can be used as a source for the \ref group_sysclk_clk_lf. However,
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because PILO is disabled in Hibernate mode, RTC timers cannot operate in this mode
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   when clocked using the PILO. Instead, either the \ref group_sysclk_ilo "ILO" or
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO" should be used when hibernate operation is required. 
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Periodic calibration to a high-accuracy clock (such as ECO) is required to
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   maintain accuracy. The application should use the functions described in the 
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_calclk API to measure the current PILO frequency before trimming.
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pilo_funcs      Functions
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_calclk          Clock Measurement
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions measure the frequency of a specified clock relative to a
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   reference clock. They are typically called in the following order:
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Specify the measured clock, the count, and the reference clock
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Start the counters
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Wait for the measurement counter to finish counting
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4. Retrieve the measured frequency
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note These functions may also be used as part of a clock trimming
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   process. Refer to the \ref group_sysclk_trim "Clock Trim" API.
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_funcs    Functions
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_enums    Enumerated Types
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_trim            Clock Trim (ILO, PILO)
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions perform a single trim operation on the ILO or PILO. Each
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   function's parameter is the actual frequency of the clock. To measure the
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   frequency, use the functions described in the \ref group_sysclk_calclk API.
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To trim the clock as close as possible to the target frequency, multiple
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   calls to the trim function may be needed. A typical usage example is to:
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Call the clock measurement functions to get the actual frequency of the clock
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 11


 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Call the trim function, passing in the measured frequency
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Repeat the above until the trim function reports that the clock is trimmed to within limits.
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_trim_funcs      Functions
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pm              Low Power Callback
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Entering and exiting low power modes require compatible clock configurations
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to be set before entering low power and restored upon wake-up and exit. The
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SysClk driver provides a Cy_SysClk_DeepSleepCallback() function to support
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep mode entry. 
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This function can be called either by itself before initiating low-power mode
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   entry or it can be used in conjunction with the SysPm driver as a registered 
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   callback. To do so, register this function as a callback before calling 
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysPm_DeepSleep(). Specify \ref CY_SYSPM_DEEPSLEEP as the callback type, 
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and call Cy_SysPm_RegisterCallback().
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note If the FLL or PLL source is the ECO, this function must be called.
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pm_funcs        Functions
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_wco             Watch Crystal Oscillator (WCO)
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO is a highly accurate 32.768 kHz clock source capable of operating
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   in all power modes (excluding the Off mode). It is the primary clock source for
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the backup domain clock, which is used by the real-time clock (RTC). The 
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   WCO can also be used as a source for the low-frequency clock to support other
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   low power mode peripherals.
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO requires the configuration of the dedicated WCO pins (SRSS_WCO_IN_PIN,
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN). These must be configured as Analog Hi-Z drive modes and the
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   HSIOM selection set to GPIO. The WCO can also be used in bypass mode, where
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   an external 32.768 kHz square wave is brought in directly through the 
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN pin.
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a built-in clock supervisor (CSV) in the WCO. The clock
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   supervisor detects if the WCO has been lost; that is, the WCO is no longer 
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   producing clock pulses. The CSV does this by checking to ensure there is at 
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   least one WCO clock pulse within a certain time window. The ILO or PILO can be
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the supervising clock. Firmware can configure the CSV to trigger a fault,
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a reset, or both after specified cycles of the supervising clock.
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_funcs       Functions
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_structs     Data Structures
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_enums       Enumerated Types
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_hf          High-Frequency Clocks
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Multiple high frequency clocks (CLK_HF) are available in the device. For example,
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PSoC 63 series has five high-frequency root clocks. Each CLK_HF has a particular
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connection and chip-specific destination on the device.
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |Name     |Description                                             |
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |:--------|:-------------------------------------------------------|
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 12


 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[0]| Root clock for CPUs, PERI, and AHB infrastructure      |
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[1]| Root clock for the PDM/PCM and I2S audio subsystem     |
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[2]| Root clock for the Serial Memory Interface subsystem   |
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[3]| Root clock for USB communications                      |
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[4]| Clock output on clk_ext pin (when used as an output)   |
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf.png)
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Note this is a particular example. The actual tree may vary depending on the device series.
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the Technical Reference Manual for your device for details.
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   High frequency clocks are sourced by path clocks, which should be configured
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   first. An exception to this rule is CLK_HF[0], which cannot be disabled. 
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This divided clock drives the core processors and the peripherals in the system.
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   In order to update its clock source, CLK_HF[0] source must be selected without
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   disabling the clock.
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf_dist.png)
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a clock supervisor (CSV) for each root clock. These
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can detect frequency loss, or monitor that the clock frequency stays within
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a specified range. The possible supervising clocks are IMO, ECO, or ALTHF. 
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Loss detection and frequency monitoring can be enabled or disabled independently.
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each has its own programmable action that occurs on detection of an error.
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_funcs    Functions
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_structs  Data Structures
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_enums    Enumerated Types
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_fast        Fast Clock
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The fast clock drives the "fast" processor (e.g. Cortex-M4 processor in PSoC 6).
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is sourced by CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks").
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   A divider value of 1~256 can be used to further divide the CLK_HF[0] to a
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   desired clock speed for the processor.
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fast.png)
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_fast_funcs  Functions
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peri        Peripheral Clock
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The peripheral clock is a divided clock of CLK_HF0 (\ref group_sysclk_clk_hf "HF Clocks").
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is the source clock for the \ref group_sysclk_clk_slow, and most active domain
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   peripheral clocks (\ref group_sysclk_clk_peripheral). A divider value of 1~256 
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can be used to further divide the CLK_HF[0] to a desired clock speed for the peripherals.
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri.png)
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peri_funcs  Functions
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peripheral  Peripherals Clock Dividers
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   There are multiple peripheral clock dividers that, in effect, create 
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   multiple separate peripheral clocks. The available dividers vary per device 
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   series. As an example, for the PSoC 63 series there are 29 dividers:
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 13


 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - eight 8-bit dividers
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - sixteen 16-bit dividers
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - four fractional 16.5-bit dividers (16 integer bits, 5 fractional bits)
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - one fractional 24.5-bit divider (24 integer bits, 5 fractional bits)
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The 8-bit and 16-bit dividers are integer dividers. A divider value of 1 
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   means the output frequency matches the input frequency (that is, there is
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   no change). Otherwise the frequency is divided by the value of the divider.
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   For example, if the input frequency is 50 MHz, and the divider is value 10,
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the output frequency is 5 MHz.
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The five fractional bits supports further precision in 1/32nd increments. For
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   example, a divider with an integer value of 3 and a fractional value of
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4 (4/32) results in a divider of 3.125. Fractional dividers are useful when
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a high-precision clock is required, for example, for a UART/SPI serial
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   interface.
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri_divs.png)
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each peripheral can connect to any one of the programmable dividers. A
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   particular peripheral clock divider can drive multiple peripherals.
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver also supports phase aligning two peripheral clock dividers using
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PeriphEnablePhaseAlignDivider(). Alignment works for both integer
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and fractional dividers. The divider to which a second divider is aligned
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   must already be enabled.
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_funcs Functions
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_enums Enumerated Types
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_slow        Slow Clock
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The slow clock is the source clock for the "slow" processor (e.g. Cortex-M0+ in PSoC 6).
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is a divided version of the \ref group_sysclk_clk_peri, which in turn is 
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a divided version of CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks"). A divider 
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   value of 1~256 can be used to further divide the Peri clock to a desired clock speed
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for the processor.
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_slow.png)
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_slow_funcs  Functions
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_lf          Low-Frequency Clock
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock is the source clock for the \ref group_mcwdt
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and can be the source clock for \ref group_sysclk_clk_bak, which drives the
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_rtc.
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock has three possible source clocks:
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", and
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO".
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_lf.png)
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_funcs    Functions
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_enums    Enumerated Types
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 14


 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_timer       Timer Clock
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock can be a source for the alternative clock driving 
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the \ref group_arm_system_timer. It can also be used as a reference clock 
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for a counter in the \ref group_energy_profiler "Energy Profiler".
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock is a divided clock of either the IMO or CLK_HF[0]
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_clk_hf "HF Clocks").
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_funcs Functions
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_enums Enumerated Types
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_pump        Pump Clock
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The pump clock is a clock source used to provide analog precision in low voltage
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   applications. Depending on the usage scenario, it may be required to drive the
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   internal voltage pump for the Continuous Time Block mini (CTBm) in the analog 
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   subsystem. The pump clock is a divided clock of one of the clock paths 
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_path_src).
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_funcs  Functions
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_enums  Enumerated Types
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_bak         Backup Domain Clock
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The backup domain clock drives the \ref group_rtc.
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock has two possible source clocks: \ref group_sysclk_wco "WCO"
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   or the \ref group_sysclk_clk_lf. In turn the low frequency clock is sourced by
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", or
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO". Typically the ILO is not suitable as an RTC source,
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because of its low accuracy. However the ILO does operate in hibernate mode and
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   may be used as an alternative to the WCO with a tradeoff in precision.
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_funcs   Functions
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_enums   Enumerated Types
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if !defined(CY_SYSCLK_H)
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_H
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include <stdbool.h>
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device.h"
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device_headers.h"
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_syslib.h"
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_syspm.h"
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if defined(__cplusplus)
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** extern "C" {
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #endif /* __cplusplus */
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 15


 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver major version */
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MAJOR   2
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver minor version */
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MINOR   0
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Sysclk driver identifier */
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ID   CY_PDL_DRV_ID(0x12U)
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_returns
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines general-purpose function return values. */
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_SUCCESS       = 0u, /**< Command completed with no errors */
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_BAD_PARAM     = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 1U), /**< Invalid function inpu
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_TIMEOUT       = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 2U), /**< Timeout occurred */
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_INVALID_STATE = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 3U)  /**< Clock is in an invali
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_sysclk_status_t;
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_returns */
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \cond INTERNAL */
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding to the nearest integer. a and b must have the same sign. */
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUND(a, b) (((a) + ((b) / 2u)) / (b))
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding up if remainder != 0. a and b must both be positive. */
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUNDUP(a, b) ((((a) - 1U) / (b)) + 1U)
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \endcond */
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ECO SECTION    ============================ */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ecostatus ECO status
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Constants used for expressing ECO status.
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_AMPLITUDE  0UL /**< \brief ECO does not have sufficient amplitude */
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_INACCURATE 1UL /**< \brief ECO may not be meeting accuracy and duty cycle
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_STABLE     2UL /**< \brief ECO has fully stabilized */
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} */
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_eco_funcs
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 16


 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoConfigure(uint32_t freq, uint32_t cLoad, uint32_t esr, uint32_t 
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoEnable(uint32_t timeoutus);
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void);
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void);
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoDisable
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the external crystal oscillator (ECO). This function should not be
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * called if the ECO is sourcing clkHf[0].
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_EcoDisable
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void)
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_ECO_CONFIG &= (uint32_t)~_VAL2FLD(SRSS_CLK_ECO_CONFIG_ECO_EN, 1U); /* 0 = disable */
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoGetStatus
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current status of the external crystal oscillator (ECO).
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_AMPLITUDE = ECO does not have sufficient amplitude<br>
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_INACCURATE = ECO has sufficient amplitude but may not be meeting accuracy and d
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_STABLE = ECO has fully stabilized
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_EcoGetStatus
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void)
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retVal = (SRSS_CLK_ECO_STATUS & (SRSS_CLK_ECO_STATUS_ECO_OK_Msk | SRSS_CLK_ECO_STATUS_
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* if ECO is not ready, just report the ECO_OK bit. Otherwise report 2 = ECO ready */
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((0UL == (retVal & SRSS_CLK_ECO_STATUS_ECO_READY_Msk)) ? retVal : CY_SYSCLK_ECOSTAT_STAB
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_eco_funcs */
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    INPUT MULTIPLEXER SECTION    ===================== */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_enums
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Input multiplexer clock sources
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 17


 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_IMO    =     0U, /**< Select the IMO as the output of the path mux */
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_EXT    =     1U, /**< Select the EXT as the output of the path mux */
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ECO    =     2U, /**< Select the ECO as the output of the path mux */
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTHF  =     3U, /**< Select the ALTHF as the output of the path mux.
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the ALTHF clock source is available on use
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSIMUX =     4U, /**< Select the DSI MUX output as the output of the path 
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSI    = 0x100U, /**< Select a DSI signal (0 - 15) as the output of the DS
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the DSI clock sources are available on use
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ILO    = 0x110U, /**< Select the ILO (16) as the output of the DSI mux and
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_WCO    = 0x111U, /**< Select the WCO (17) as the output of the DSI mux and
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTLF  = 0x112U, /**< Select the ALTLF (18) as the output of the DSI mux a
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the ALTLF clock sources in available on us
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_PILO   = 0x113U  /**< Select the PILO (19) as the output of the DSI mux an
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the PILO clock sources in available on use
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkpath_in_sources_t;
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_enums */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_funcs
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_ClkPathSetSource(uint32_t clkPath, cy_en_clkpath_in_sources_t sourc
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_clkpath_in_sources_t Cy_SysClk_ClkPathGetSource(uint32_t clkPath);
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_funcs */
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    FLL SECTION    ============================ */
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_enums
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL and PLL output mode.
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_FLL_CONFIG3 and CLK_PLL_CONFIG0, bits BYPASS_SEL.
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO   = 0U, /**< Output FLL/PLL input source when not locked, and FLL/
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO1  = 1U, /**< Same as AUTO */
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_INPUT  = 2U, /**< Output FLL/PLL input source regardless of lock status
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_OUTPUT = 3U  /**< Output FLL/PLL output regardless of lock status. This
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_pll_output_mode_t;
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL current-controlled oscillator (CCO) frequency ranges.
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See register CLK_FLL_CONFIG4, bits CCO_RANGE.
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE0, /**< Target frequency is in range  48 -  64 MHz. */
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE1, /**< Target frequency is in range  64 -  85 MHz. */
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE2, /**< Target frequency is in range  85 - 113 MHz. */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE3, /**< Target frequency is in range 113 - 150 MHz. */
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 18


 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE4  /**< Target frequency is in range 150 - 200 MHz. */
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_cco_ranges_t;
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_enums */
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_structs
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of FLL.
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    fllMult;         /**< CLK_FLL_CONFIG  register, FLL_MULT bits */
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    refDiv;          /**< CLK_FLL_CONFIG2 register, FLL_REF_DIV bits */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_cco_ranges_t      ccoRange;        /**< CLK_FLL_CONFIG4 register, CCO_RANGE bits */
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        enableOutputDiv; /**< CLK_FLL_CONFIG  register, FLL_OUTPUT_DIV bit 
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    lockTolerance;   /**< CLK_FLL_CONFIG2 register, LOCK_TOL bits */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     igain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_IGAIN bits *
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     pgain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_PGAIN bits *
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    settlingCount;   /**< CLK_FLL_CONFIG3 register, SETTLING_COUNT bits
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;      /**< CLK_FLL_CONFIG3 register, BYPASS_SEL bits */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    cco_Freq;        /**< CLK_FLL_CONFIG4 register, CCO_FREQ bits */
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_fll_manual_config_t;
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_structs */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_funcs
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllConfigure(uint32_t inputFreq, uint32_t outputFreq, cy_en_fll_pll
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllManualConfigure(const cy_stc_fll_manual_config_t *config);
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** void Cy_SysClk_FllGetConfiguration(cy_stc_fll_manual_config_t *config);
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllEnable(uint32_t timeoutus);
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void);
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void);
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllLocked
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether the FLL is locked first time during FLL starting.
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Intended to be used with \ref Cy_SysClk_FllEnable with zero timeout.
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The unlock occurrence may appear during FLL normal operation, so this function 
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * is not recommended to check the FLL normal operation stability.
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_FllLocked
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void)
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 19


 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_FLL_STATUS_LOCKED, SRSS_CLK_FLL_STATUS));
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllDisable
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the FLL and the CCO.
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the FLL is the source of CLK_HF0 and the CLK_HF0 frequency is decreasing.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_FllDisable
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void)
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_FLL_CONFIG3, SRSS_CLK_FLL_CONFIG3_BYPASS_SEL, CY_SYSCLK_FLLPLL_OUTPUT
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_FLL_CONFIG  &= ~SRSS_CLK_FLL_CONFIG_FLL_ENABLE_Msk;
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_FLL_CONFIG4 &= ~SRSS_CLK_FLL_CONFIG4_CCO_ENABLE_Msk;
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return CY_SYSCLK_SUCCESS;
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_funcs */
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PLL SECTION    ============================ */
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_structs
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for configuration of a PLL.
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    inputFreq;  /**< frequency of PLL source, in Hz */
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    outputFreq; /**< frequency of PLL output, in Hz */
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;     /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode; /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_config_t;
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of a PLL.
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     feedbackDiv;  /**< CLK_PLL_CONFIG register, FEEDBACK_DIV (P) bits *
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     referenceDiv; /**< CLK_PLL_CONFIG register, REFERENCE_DIV (Q) bits 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 20


 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     outputDiv;    /**< CLK_PLL_CONFIG register, OUTPUT_DIV bits */
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;       /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;   /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_manual_config_t;
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_structs */
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_funcs
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllConfigure(uint32_t clkPath, const cy_stc_pll_config_t *config);
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllManualConfigure(uint32_t clkPath, const cy_stc_pll_manual_config
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllGetConfiguration(uint32_t clkPath, cy_stc_pll_manual_config_t *c
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllEnable(uint32_t clkPath, uint32_t timeoutus);
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath);
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath);
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath);
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLocked
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL is locked.
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PllLocked
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath)
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkPath < CY_SRSS_NUM_PLL);
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_PLL_STATUS_LOCKED, SRSS_CLK_PLL_STATUS[clkPath]));
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLostLock
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL lost its lock since the last time this
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * function was called. Clears the lost lock indicator.
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = did not lose lock<br>
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = lost lock
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PllLostLock
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 21


 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath)
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkPath < CY_SRSS_NUM_PLL);
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool retVal = _FLD2BOOL(SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED, SRSS_CLK_PLL_STATUS[clkPath]);
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* write a 1 to clear the unlock occurred bit */
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PLL_STATUS[clkPath] = SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED_Msk;
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllDisable
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected PLL.
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to disable. 1 is the first PLL; 0 is invalid.
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - PLL successfully disabled<br>
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_BAD_PARAM - invalid clock path number
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the PLL is the source of CLK_HF0 and the CLK_HF0 frequency is increasing.
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the PLL is the source of CLK_HF0 and the CLK_HF0 frequency is decreasing.
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PllDisable
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath)
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkPath < CY_SRSS_NUM_PLL)
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* First bypass PLL */
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_PLL_CONFIG[clkPath], SRSS_CLK_PLL_CONFIG_BYPASS_SEL, CY_SYSCLK_FL
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* Wait at least 6 PLL clock cycles */
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1U);
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* And now disable the PLL itself */
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_PLL_CONFIG[clkPath] &= ~SRSS_CLK_PLL_CONFIG_ENABLE_Msk;
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_funcs */
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 22


 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ILO SECTION    ============================ */
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_ilo_funcs
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void);
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void);
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on);
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloEnable
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the ILO.
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_IloEnable
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void)
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_ILO_CONFIG |= SRSS_CLK_ILO_CONFIG_ENABLE_Msk;
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloDisable
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the ILO. ILO can't be disabled if WDT is enabled.
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - ILO successfully disabled<br>
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_INVALID_STATE - Cannot disable the ILO if the WDT is enabled.
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not call this function if the WDT is enabled, because the WDT is clocked by
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the ILO.
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_IloDisable
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void)
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_INVALID_STATE;
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (!_FLD2BOOL(SRSS_WDT_CTL_WDT_EN, SRSS_WDT_CTL)) /* if disabled */
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ILO_CONFIG &= ~SRSS_CLK_ILO_CONFIG_ENABLE_Msk;
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return retVal;
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 23


1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloHibernateOn
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Controls whether the ILO stays on during a hibernate, or through an XRES or
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * brown-out detect (BOD) event.
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param on
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = ILO stays on during hibernate or across XRES/BOD.<br> 
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = ILO turns off for hibernate or XRES/BOD.
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Writes to the register/bit are ignored if the watchdog (WDT) is locked.
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_IloHibernateOn
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on)
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_ILO_CONFIG, SRSS_CLK_ILO_CONFIG_ILO_BACKUP, (uint32_t)on);
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_ilo_funcs */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PILO SECTION    =========================== */
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pilo_funcs
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void);
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void);
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal);
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void);
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloEnable
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the PILO. 
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function blocks for 1 millisecond between enabling the PILO and 
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * releasing the PILO reset.
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PiloEnable
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void)
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG |= _VAL2FLD(SRSS_CLK_PILO_CONFIG_PILO_EN, 1U); /* 1 = enable */
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     Cy_SysLib_Delay(1U/*msec*/);
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* release the reset and enable clock output */
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG |= SRSS_CLK_PILO_CONFIG_PILO_RESET_N_Msk |
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                             SRSS_CLK_PILO_CONFIG_PILO_CLK_EN_Msk;
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 24


1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloDisable
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the PILO.
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PiloDisable
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void)
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* Clear PILO_EN, PILO_RESET_N, and PILO_CLK_EN bitfields. This disables the
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****        PILO and holds the PILO in a reset state. */
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG &= (uint32_t)~(SRSS_CLK_PILO_CONFIG_PILO_EN_Msk      |
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                         SRSS_CLK_PILO_CONFIG_PILO_RESET_N_Msk |
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                         SRSS_CLK_PILO_CONFIG_PILO_CLK_EN_Msk);
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloSetTrim
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the PILO trim bits, which adjusts the PILO frequency. This is typically
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * done after measuring the PILO frequency; see \ref Cy_SysClk_StartClkMeasurementCounters().
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PiloSetTrim
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal)
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_PILO_CONFIG, SRSS_CLK_PILO_CONFIG_PILO_FFREQ, trimVal);
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloGetTrim
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current PILO trim bits value.
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_PiloSetTrim() function usage.
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void)
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2VAL(SRSS_CLK_PILO_CONFIG_PILO_FFREQ, SRSS_CLK_PILO_CONFIG));
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pilo_funcs */
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    CLOCK MEASUREMENT SECTION    ===================== */
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 25


1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_enums
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines all possible clock sources. */
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_NC =            0U,
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ILO =           1U,
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_WCO =           2U,
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_BAK =           3U,
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTLF =         4U,
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LFCLK =         5U,
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_IMO =           6U,
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PILO =          8U,
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_FAST_CLKS =     0x100U,
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ECO =           0x101U,
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_EXT =           0x102U,
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTHF =         0x103U,
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_TIMERCLK =      0x104U,
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH_CLKS =     0x500U,
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH0 =         0x500U,
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH1 =         0x501U,
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH2 =         0x502U,
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH3 =         0x503U,
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH4 =         0x504U,
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH5 =         0x505U,
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH6 =         0x506U,
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH7 =         0x507U,
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH8 =         0x508U,
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH9 =         0x509U,
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH10 =        0x50AU,
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH11 =        0x50BU,
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH12 =        0x50CU,
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH13 =        0x50DU,
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH14 =        0x50EU,
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH15 =        0x50FU,
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHFS =        0x600U,
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF0 =        0x600U,
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF1 =        0x601U,
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF2 =        0x602U,
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF3 =        0x603U,
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF4 =        0x604U,
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF5 =        0x605U,
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF6 =        0x606U,
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF7 =        0x607U,
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF8 =        0x608U,
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF9 =        0x609U,
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF10 =       0x60AU,
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF11 =       0x60BU,
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF12 =       0x60CU,
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF13 =       0x60DU,
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF14 =       0x60EU,
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF15 =       0x60FU,
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LAST_CLK =      0x610U
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_meas_clks_t;
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_enums */
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 26


1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_funcs
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_StartClkMeasurementCounters(cy_en_meas_clks_t clock1, uint32_t coun
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void);
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_ClkMeasurementCountersGetFreq(bool measuredClock, uint32_t refClkFreq);
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkMeasurementCountersDone
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Checks if clock measurement counting is done, that is, counter1 has counted down
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * to zero. Call \ref Cy_SysClk_StartClkMeasurementCounters() before calling this function.
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Status of calibration counters:<br>
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = done<br>
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not done
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_StartClkMeasurementCounters() function usage.
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void)
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_CAL_CNT1_CAL_COUNTER_DONE, SRSS_CLK_CAL_CNT1));
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_funcs */
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ==========================    TRIM SECTION    ============================ */
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_trim_funcs
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_IloTrim(uint32_t iloFreq);
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_PiloTrim(uint32_t piloFreq);
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_trim_funcs */
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ======================    POWER MANAGEMENT SECTION    ==================== */
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pm_funcs
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_syspm_status_t Cy_SysClk_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pm_funcs */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    WCO SECTION    ============================ */
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 27


1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_enums
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO bypass modes */
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_NOT_BYPASSED = 0u, /**< WCO is not bypassed crystal is used */
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_BYPASSED = 1U      /**< WCO is bypassed external clock must be supplied  on XTAL 
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_bypass_modes_t;
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO CSV supervisor clock selections */
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ILO,   /**< WCO CSV supervisor clock source is the ILO */
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ALTLF, /**< WCO CSV supervisor clock source is the alternate low-f
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_PILO   /**< WCO CSV supervisor clock source is the PILO */
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_csv_supervisor_clock_t;
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor clock loss window. There must be one clock of the supervised
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock within this many clocks of the supervising clock.
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_CSV_HF_CTL and CLK_CSV_WCO_CTL, bitfield CSV_LOSS_WINDOW.
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_4_CYCLES =   0u, /**< 1 clock must be seen within 4 cycles of the supervisin
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_8_CYCLES =   1U, /**< 1 clock must be seen within 8 cycles of the supervisin
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_16_CYCLES =  2u, /**< 1 clock must be seen within 16 cycles of the supervisi
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_32_CYCLES =  3u, /**< 1 clock must be seen within 32 cycles of the supervisi
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_64_CYCLES =  4u, /**< 1 clock must be seen within 64 cycles of the supervisi
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_128_CYCLES = 5u, /**< 1 clock must be seen within 128 cycles of the supervis
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_256_CYCLES = 6u, /**< 1 clock must be seen within 256 cycles of the supervis
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_512_CYCLES = 7u  /**< 1 clock must be seen within 512 cycles of the supervis
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_loss_window_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor error actions. See register CLK_CSV_HF_CTL[CSV_FREQ_ACTION and CSV_LOSS_ACTION].
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_IGNORE = 0u,     /**< Ignore the error reported by the clock supervisor. */
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT = 1U,      /**< Trigger a fault when an error is reported by the cloc
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_RESET = 2u,      /**< Trigger a reset when an error is reported by the cloc
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT_RESET = 3u /**< Trigger a fault then reset when an error is reported 
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_error_actions_t;
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_enums */
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_structs
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for the WCO.
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 28


1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_wco_csv_supervisor_clock_t supervisorClock; /**< supervisor clock selection */
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                         /**< 1= enabled, 0= disabled. Note that if lo
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;               /**< \ref cy_en_csv_loss_window_t */
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;             /**< \ref cy_en_csv_error_actions_t */
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_wco_csv_config_t;
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_structs */
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_funcs
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus);
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void);
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void);
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass);
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoEnable
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the WCO.
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param timeoutus amount of time in microseconds to wait for the WCO to be ready.
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * If WCO is not ready, WCO is stopped. To avoid waiting for WCO ready set this to 0,
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and manually check if WCO is okay using \ref Cy_SysClk_WcoOkay.
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - WCO successfully enabled<br>
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_TIMEOUT - Timeout waiting for WCO to stabilize
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoEnable
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus)
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t rtnval = CY_SYSCLK_TIMEOUT;
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* first set the WCO enable bit */
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP_CTL |= BACKUP_CTL_WCO_EN_Msk;
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* now do the timeout wait for STATUS, bit WCO_OK */
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     for (; (Cy_SysClk_WcoOkay() == false) && (0UL != timeoutus); timeoutus--)
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1U);
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (0UL != timeoutus)
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         rtnval = CY_SYSCLK_SUCCESS;
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (rtnval);
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoOkay
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 29


1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the status of the WCO_OK bit.
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = okay<br>
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not okay
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoOkay
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void)
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(BACKUP_STATUS_WCO_OK, BACKUP_STATUS));
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoDisable
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the WCO.
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoDisable
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void)
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP_CTL &= (uint32_t)~BACKUP_CTL_WCO_EN_Msk;
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoBypass
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets whether the WCO is bypassed or not. If it is bypassed, then a 32-kHz clock
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * must be provided on the wco_out pin.
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param bypass \ref cy_en_wco_bypass_modes_t
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoBypass
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass)
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(BACKUP_CTL, BACKUP_CTL_WCO_BYPASS, bypass);
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_funcs */
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clkHf[n] SECTION    ========================= */
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_enums
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 30


1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects which clkHf input, or root mux, to configure.
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See CLK_ROOT_SELECT registers, bits ROOT_MUX.
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetSource and \ref Cy_SysClk_ClkHfGetSource.
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH0  = 0U,  /**< clkHf input is Clock Path 0 */
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH1  = 1U,  /**< clkHf input is Clock Path 1 */
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH2  = 2U,  /**< clkHf input is Clock Path 2 */
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH3  = 3U,  /**< clkHf input is Clock Path 3 */
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH4  = 4U,  /**< clkHf input is Clock Path 4 */
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH5  = 5U,  /**< clkHf input is Clock Path 5 */
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH6  = 6U,  /**< clkHf input is Clock Path 6 */
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH7  = 7U,  /**< clkHf input is Clock Path 7 */
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH8  = 8U,  /**< clkHf input is Clock Path 8 */
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH9  = 9U,  /**< clkHf input is Clock Path 9 */
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH10 = 10U, /**< clkHf input is Clock Path 10 */
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH11 = 11U, /**< clkHf input is Clock Path 11 */
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH12 = 12U, /**< clkHf input is Clock Path 12 */
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH13 = 13U, /**< clkHf input is Clock Path 13 */
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH14 = 14U, /**< clkHf input is Clock Path 14 */
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH15 = 15U, /**< clkHf input is Clock Path 15 */
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_in_sources_t;
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf divider values. See CLK_ROOT_SELECT registers, bits ROOT_DIV.
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetDivider and \ref Cy_SysClk_ClkHfGetDivider.
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_NO_DIVIDE   = 0U,    /**< don't divide clkHf. */
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_2 = 1U,    /**< divide clkHf by 2 */
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_4 = 2U,    /**< divide clkHf by 4 */
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_8 = 3U     /**< divide clkHf by 8 */
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_dividers_t;
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf clock supervisor input sources. See register CLK_CSV_HF_CTL[CSV_MUX].
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_IMO   = 0U,  /**< Supervising clock is the IMO. */
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_EXT   = 1U,  /**< Supervising clock is the external clock */
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_ALTHF = 2U   /**< Supervising clock is clk_althf */
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_csv_supervisor_clock_t;
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_enums */
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_structs
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{SupervisingWindow
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for clkHf.
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 31


1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_clkhf_csv_supervisor_clock_t supervisorClock; /**< \ref cy_en_clkhf_csv_supervisor_clock_
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t supervisingWindow;                         /**< Number of supervising clock cycles */
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableFrequencyFaultDetection;                 /**< 1= enabled, 0= disabled */
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyLowerLimit;                       /**< Lowest frequency in kHz that supervise
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyUpperLimit;                       /**< Highest frequency in kHz that supervis
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t frequencyAction;          /**< \ref cy_en_csv_error_actions_t */
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                           /**< 1= enabled, 0= disabled */
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;                 /**< \ref cy_en_csv_loss_window_t */
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;               /**< \ref cy_en_csv_error_actions_t */
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_clkhf_csv_config_t;
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_structs */
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_funcs
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf);
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf);
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf);
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf);
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfEnable
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected clkHf.
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfEnable
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf)
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkHf < CY_SRSS_NUM_HFROOT)
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ROOT_SELECT[clkHf] |= SRSS_CLK_ROOT_SELECT_ENABLE_Msk;
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfDisable
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected clkHf.
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 32


1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note clkHf[0] cannot be disabled.
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfDisable
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf)
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((0UL < clkHf) /* prevent CLK_HF0 disabling */
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****            && (clkHf < CY_SRSS_NUM_HFROOT))
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ROOT_SELECT[clkHf] &= ~SRSS_CLK_ROOT_SELECT_ENABLE_Msk;
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetSource
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects the source of the selected clkHf.
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf mux to configure.
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clkhf_in_sources_t
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
1595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is increasing.
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is decreasing.
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetSource
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < CY_SRSS_NUM_HFROOT) && (source <= CY_SYSCLK_CLKHF_IN_CLKPATH15))
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_MUX, source);
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 33


1615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetSource
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source of the selected clkHf.
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to get the source of.
1627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_in_sources_t
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetSource
1632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf)
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < CY_SRSS_NUM_HFROOT);
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_in_sources_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_MUX, SRSS_CLK_ROOT_SELECT[
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetDivider
1642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the pre-divider for a clkHf.
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf divider to configure.
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider \ref cy_en_clkhf_dividers_t
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Also call \ref Cy_SysClk_ClkHfSetSource to set the clkHf source.
1653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
1656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
1657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is increasing.
1661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is decreasing.
1665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetDivider
1668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 34


1672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < CY_SRSS_NUM_HFROOT) && (divider <= CY_SYSCLK_CLKHF_DIVIDE_BY_8))
1674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_DIV, divider);
1676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetDivider
1683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the pre-divider value for a clkHf.
1686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to check divider of.
1688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_dividers_t
1690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetDivider
1693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf)
1696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < CY_SRSS_NUM_HFROOT);
1698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_dividers_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_DIV, SRSS_CLK_ROOT_SELECT[cl
1699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_funcs */
1701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clk_fast SECTION    ========================= */
1705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_fast_funcs
1708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider);
1711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void);
1712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastSetDivider
1715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the fast clock, which sources the main processor.
1718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of this divider is clkHf[0].
1719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255.
1721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
1725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_FAST frequency is increasing.
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 35


1729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_FAST frequency is decreasing.
1733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkFastSetDivider
1736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider)
1739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM4_CLOCK_CTL, CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, divider);
1741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastGetDivider
1745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider for the fast clock.
1748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value for the fast clock.
1750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkFastSetDivider
1754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void)
1757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, CPUSS_CM4_CLOCK_CTL));
1759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_fast_funcs */
1761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================    clk_peri SECTION    ========================== */
1765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peri_funcs
1768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider);
1771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void);
1772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriSetDivider
1775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the peripheral clock tree. All peripheral clock
1778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers are sourced from this clock. Also the Cortex M0+ clock divider is
1779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * sourced from this clock. The source of this divider is clkHf[0]
1780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255
1782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 36


1786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPeriSetDivider
1789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider)
1792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM0_CLOCK_CTL, CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, divider);
1794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriGetDivider
1798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider of the peripheral (peri) clock.
1801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPeriSetDivider
1807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void)
1810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, CPUSS_CM0_CLOCK_CTL));
1812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peri_funcs */
1814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =====================    clk_peripherals SECTION    ====================== */
1818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_enums
1821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Programmable clock divider types */
1824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_8_BIT    = 0U, /**< Divider Type is an 8 bit divider */
1827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_BIT   = 1U, /**< Divider Type is a 16 bit divider */
1828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_5_BIT = 2U, /**< Divider Type is a 16.5 bit fractional divider */
1829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_24_5_BIT = 3U  /**< Divider Type is a 24.5 bit fractional divider */
1830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_divider_types_t;
1831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peripheral_enums */
1832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_funcs
1835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerT
1840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
1841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock, cy_en_div
1842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock);
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 37


1843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerTy
1844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerT
1845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnablePhaseAlignDivider(cy_en_divider_types_t
1846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PeriphGetDividerEnabled(cy_en_divider_types_t dividerType, uint32_t 
1847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_PeriphGetFrequency(cy_en_divider_types_t dividerType, uint32_t dividerNum);
1848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetDivider
1851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This is only used for integer
1854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers. Use \ref Cy_SysClk_PeriphSetFracDivider for setting factional dividers.
1855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \pre If the specified clock divider is already enabled - it should be disabled
1857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * prior to use this function by \ref Cy_SysClk_PeriphDisableDivider.
1858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum the divider number.
1862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerValue divider value
1864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256
1865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetDivider
1871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            uint32_t dividerNum, uint32_t dividerValue)
1876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
1879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_8_NR) &&
1881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_8_CTL_INT8_DIV_Msk >> PERI_DIV_8_CTL_INT8_DIV_Pos)))
1882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_8_CTL[dividerNum], PERI_DIV_8_CTL_INT8_DIV, dividerValue);
1884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_16_BIT)
1888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_NR) &&
1890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_16_CTL_INT16_DIV_Msk >> PERI_DIV_16_CTL_INT16_DIV_Pos)))
1891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_CTL[dividerNum], PERI_DIV_16_CTL_INT16_DIV, dividerValue);
1893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 38


1900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetDivider
1904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the integer divider value for the specified divider. One works for
1907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * integer dividers. Use \ref Cy_SysClk_PeriphGetFracDivider to get the fractional
1908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider value
1909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256
1916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetDivider
1920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retVal;
1925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(dividerType <= CY_SYSCLK_DIV_16_BIT);
1927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
1929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_8_NR);
1931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = _FLD2VAL(PERI_DIV_8_CTL_INT8_DIV, PERI_DIV_8_CTL[dividerNum]);
1932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 16-bit divider */
1935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_NR);
1936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = _FLD2VAL(PERI_DIV_16_CTL_INT16_DIV, PERI_DIV_16_CTL[dividerNum]);
1937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetFracDivider
1943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This function should only be used
1946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for fractional clock dividers.
1947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \pre If the specified clock divider is already enabled - it should be disabled
1949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * prior to use this function by \ref Cy_SysClk_PeriphDisableDivider.
1950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerIntValue the integer divider value
1956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of the divider is peri_clk, which is a divided version of hf_clk[0].
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 39


1957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The divider value causes integer division of (divider value + 1), or division
1958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * by 1 to 65536 (16-bit divider) or 1 to 16777216 (24-bit divider).
1959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerFracValue the fraction part of the divider
1961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The fractional divider can be 1-32, thus it divides the clock by 1/32 for each
1962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * count. To divide the clock by 11/32nds set this value to 11.
1963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetFracDivider
1968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
1972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                uint32_t dividerIntValue, uint32_t dividerFracValue)
1973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
1976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_5_NR) &&
1978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_16_5_CTL_INT16_DIV_Msk >> PERI_DIV_16_5_CTL_INT16_DIV_Pos
1979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_16_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_16_5_CTL_FRAC5_DIV_Po
1980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_INT16_DIV, dividerInt
1982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_FRAC5_DIV, dividerFra
1983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_24_5_BIT)
1987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_24_5_NR) &&
1989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_24_5_CTL_INT24_DIV_Msk >> PERI_DIV_24_5_CTL_INT24_DIV_Pos
1990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_24_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_24_5_CTL_FRAC5_DIV_Po
1991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_INT24_DIV, dividerInt
1993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_FRAC5_DIV, dividerFra
1994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetFracDivider
2005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the integer and fractional parts of the divider
2008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerIntValue pointer to return integer divider value
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 40


2014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerFracValue pointer to return fractional divider value
2016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return None. Loads pointed-to variables.
2018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetFracDivider
2021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
2024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                     uint32_t *dividerIntValue, uint32_t *dividerFra
2025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(((dividerType == CY_SYSCLK_DIV_16_5_BIT) || (dividerType == CY_SYSCLK_DIV_24_5_BIT
2027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  (dividerIntValue != NULL) && (dividerFracValue != NULL));
2028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
2030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_5_NR);
2032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_16_5_CTL_INT16_DIV, PERI_DIV_16_5_CTL[dividerNum]);
2033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_16_5_CTL_FRAC5_DIV, PERI_DIV_16_5_CTL[dividerNum]);
2034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
2036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 24.5-bit divider */
2037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_24_5_NR);
2038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_24_5_CTL_INT24_DIV, PERI_DIV_24_5_CTL[dividerNum]);
2039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_24_5_CTL_FRAC5_DIV, PERI_DIV_24_5_CTL[dividerNum]);
2040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphAssignDivider
2045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Assigns a programmable divider to a selected IP block, such as a TCPWM or SCB.
2048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
2056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphAssignDivider
2059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock,
2063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               cy_en_divider_types_t dividerType, uint32_t dividerNu
2064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((CY_PERI_CLOCK_NR > (uint32_t)ipBlock) && (CY_SYSCLK_DIV_24_5_BIT >= dividerType))
2067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 41


2071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_CLOCK_CTL[ipBlock] = _VAL2FLD(CY_PERI_CLOCK_CTL_TYPE_SEL, dividerType) |
2074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                       _VAL2FLD(CY_PERI_CLOCK_CTL_DIV_SEL, dividerNum);
2075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
2076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetAssignedDivider
2083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports which clock divider is assigned to a selected IP block.
2086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider type and number, where bits [7:6] = type, bits[5:0] = divider
2090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * number within that type
2091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphAssignDivider
2094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock)
2097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(CY_PERI_CLOCK_NR > (uint32_t)ipBlock);
2099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (PERI_CLOCK_CTL[ipBlock] & (CY_PERI_CLOCK_CTL_DIV_SEL_Msk | CY_PERI_CLOCK_CTL_TYPE_SEL_M
2100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphEnableDivider
2104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected divider.
2107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function also sets the phase alignment bits such that the enabled
2113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider is aligned to clk_peri. See \ref Cy_SysClk_PeriphDisableDivider()
2114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for information on how to phase-align a divider after it is enabled.
2115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphEnableDivider
2118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerType, uint32_t dividerNu
2122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
2125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 42


2128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider, make the reference = clk_peri, and enable the divider */
2132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_DIV_CMD = PERI_DIV_CMD_ENABLE_Msk                         |
2133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
2134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_DIV_SEL_Msk                  |
2135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
2136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
2137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (void)PERI_DIV_CMD; /* dummy read to handle buffered writes */
2138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
2139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphDisableDivider
2146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables a selected divider.
2149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t.
2151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure.
2153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphDisableDivider
2156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
2160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
2163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider and disable it */
2170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_DIV_CMD = PERI_DIV_CMD_DISABLE_Msk          |
2171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
2172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
2173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
2174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphEnablePhaseAlignDivider
2181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * First disables a selected divider (\ref Cy_SysClk_PeriphDisableDivider),
2184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * then aligns that divider to another programmable divider, and enables the
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 43


2185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * selected divider. The divider to align to must already be enabled in order
2186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * to align a divider to it.
2187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t.
2189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure.
2191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerTypePA type of divider to phase-align to; \ref cy_en_divider_types_t.
2193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNumPA divider number of type specified to phase align to.
2195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
2197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * To phase-align a divider to clk_peri, set dividerTypePA to 3 and dividerNumPA
2198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * to 63.
2199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphEnablePhaseAlignDivider
2202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphEnablePhaseAlignDivider(cy_en_divider_types_t dividerType, uint32_t
2206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                         cy_en_divider_types_t dividerTypePA, uint32
2207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerTypePA <= CY_SYSCLK_DIV_24_5_BIT)
2210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerTypePA == CY_SYSCLK_DIV_8_BIT)    && (dividerNumPA < PERI_DIV_8_NR))    ||
2212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerTypePA == CY_SYSCLK_DIV_16_BIT)   && (dividerNumPA < PERI_DIV_16_NR))   ||
2213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerTypePA == CY_SYSCLK_DIV_16_5_BIT) && (dividerNumPA < PERI_DIV_16_5_NR)) ||
2214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerTypePA == CY_SYSCLK_DIV_24_5_BIT) && ((dividerNumPA < PERI_DIV_24_5_NR) || (di
2215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* First, disable the divider that is to be phase-aligned.
2217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                The other two parameters are checked in that function;
2218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                if they're not valid, the divider is not disabled. */
2219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = Cy_SysClk_PeriphDisableDivider(dividerType, dividerNum);
2220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             if (retVal == CY_SYSCLK_SUCCESS)
2221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             {
2222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 /* Then, specify the reference divider, and the divider, and enable the divider. */
2223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 PERI_DIV_CMD = PERI_DIV_CMD_ENABLE_Msk             |
2224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  _VAL2FLD(CY_PERI_DIV_CMD_PA_TYPE_SEL, dividerTypePA) |
2225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  _VAL2FLD(CY_PERI_DIV_CMD_PA_DIV_SEL,  dividerNumPA)  |
2226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType)   |
2227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
2228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             }
2229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetDividerEnabled
2236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the enabled/disabled atate of the selected divider.
2239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t.
2241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 44


2242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure.
2243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The enabled/disabled state;<br>
2245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = disabled<br>
2246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = enabled
2247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphGetDividerEnabled
2250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PeriphGetDividerEnabled(cy_en_divider_types_t dividerType, uint32_t 
2253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool retVal = false;
2255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)));
2260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     switch(dividerType)
2262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         case CY_SYSCLK_DIV_8_BIT:
2264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = _FLD2BOOL(PERI_DIV_8_CTL_EN, PERI_DIV_8_CTL[dividerNum]);
2265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             break;
2266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         case CY_SYSCLK_DIV_16_BIT:
2267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = _FLD2BOOL(PERI_DIV_16_CTL_EN, PERI_DIV_16_CTL[dividerNum]);
2268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             break;
2269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         case CY_SYSCLK_DIV_16_5_BIT:
2270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = _FLD2BOOL(PERI_DIV_16_5_CTL_EN, PERI_DIV_16_5_CTL[dividerNum]);
2271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             break;
2272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         case CY_SYSCLK_DIV_24_5_BIT:
2273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = _FLD2BOOL(PERI_DIV_24_5_CTL_EN, PERI_DIV_24_5_CTL[dividerNum]);
2274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             break;
2275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         default:
2276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             break;
2277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peripheral_funcs */
2281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clk_slow SECTION    ========================= */
2285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_slow_funcs
2288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkSlowSetDivider(uint8_t divider);
2291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkSlowGetDivider(void);
2292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkSlowSetDivider
2295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the slow clock. The source of this clock is the
2298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * peripheral clock (clkPeri), which is sourced from clkHf[0].
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 45


2299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider Divider value between 0 and 255.
2301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
2302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
2304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
2305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkSlowSetDivider
2308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkSlowSetDivider(uint8_t divider)
2311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM0_CLOCK_CTL, CPUSS_CM0_CLOCK_CTL_SLOW_INT_DIV, divider);
2313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkSlowGetDivider
2317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the divider value for the slow clock.
2320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
2322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
2323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkSlowSetDivider
2326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkSlowGetDivider(void)
2329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM0_CLOCK_CTL_SLOW_INT_DIV, CPUSS_CM0_CLOCK_CTL));
2331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_slow_funcs */
2333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    clkLf SECTION    ========================== */
2337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_lf_enums
2340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Low frequency (clkLf) input sources. See CLK_SELECT register, LFCLK_SEL bits.
2344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkLfSetSource, and \ref Cy_SysClk_ClkLfGetSource.
2345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
2347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKLF_IN_ILO   = 0U, /**< clkLf is sourced by the internal low speed oscillator (ILO)
2349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKLF_IN_WCO   = 1U, /**< clkLf is sourced by the watch crystal oscillator (WCO) */
2350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKLF_IN_ALTLF = 2U, /**< clkLf is sourced by the Alternate Low Frequency Clock (ALTL
2351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKLF_IN_PILO  = 3U  /**< clkLf is sourced by the precision low speed oscillator (PIL
2352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clklf_in_sources_t;
2353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_lf_enums */
2354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 46


2356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_lf_funcs
2357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkLfSetSource(cy_en_clklf_in_sources_t source);
2360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clklf_in_sources_t Cy_SysClk_ClkLfGetSource(void);
2361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkLfSetSource
2364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the source for the low frequency clock(clkLf).
2367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clklf_in_sources_t
2369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
2371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkLfSetSource
2374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkLfSetSource(cy_en_clklf_in_sources_t source)
2377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L3(source <= CY_SYSCLK_CLKLF_IN_PILO);
2379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_SELECT, SRSS_CLK_SELECT_LFCLK_SEL, source);
  62              		.loc 2 2379 0
  63 0004 5949     		ldr	r1, .L9
  64 0006 A022     		movs	r2, #160
  65 0008 D200     		lsls	r2, r2, #3
  66 000a 8B58     		ldr	r3, [r1, r2]
  67 000c 0320     		movs	r0, #3
  68 000e 8343     		bics	r3, r0
  69 0010 8B50     		str	r3, [r1, r2]
  70              	.LVL2:
  71              	.LBE46:
  72              	.LBE45:
  73              	.LBB47:
  74              	.LBB48:
1740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
  75              		.loc 2 1740 0
  76 0012 574A     		ldr	r2, .L9+4
  77 0014 1168     		ldr	r1, [r2]
  78 0016 0868     		ldr	r0, [r1]
  79 0018 8823     		movs	r3, #136
  80 001a CB58     		ldr	r3, [r1, r3]
  81 001c C318     		adds	r3, r0, r3
  82 001e 1868     		ldr	r0, [r3]
  83 0020 5449     		ldr	r1, .L9+8
  84 0022 0840     		ands	r0, r1
  85 0024 1860     		str	r0, [r3]
  86              	.LVL3:
  87              	.LBE48:
  88              	.LBE47:
  89              	.LBB49:
  90              	.LBB50:
1793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
  91              		.loc 2 1793 0
  92 0026 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 47


  93 0028 1868     		ldr	r0, [r3]
  94 002a 8424     		movs	r4, #132
  95 002c 1B59     		ldr	r3, [r3, r4]
  96 002e C018     		adds	r0, r0, r3
  97 0030 0368     		ldr	r3, [r0]
  98 0032 1B02     		lsls	r3, r3, #8
  99 0034 1B0A     		lsrs	r3, r3, #8
 100 0036 8025     		movs	r5, #128
 101 0038 6D04     		lsls	r5, r5, #17
 102 003a 2B43     		orrs	r3, r5
 103 003c 0360     		str	r3, [r0]
 104              	.LVL4:
 105              	.LBE50:
 106              	.LBE49:
 107              	.LBB51:
 108              	.LBB52:
2312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 109              		.loc 2 2312 0
 110 003e 1068     		ldr	r0, [r2]
 111 0040 0568     		ldr	r5, [r0]
 112 0042 0359     		ldr	r3, [r0, r4]
 113 0044 EB18     		adds	r3, r5, r3
 114 0046 1868     		ldr	r0, [r3]
 115 0048 0140     		ands	r1, r0
 116 004a 1960     		str	r1, [r3]
 117              	.LVL5:
 118              	.LBE52:
 119              	.LBE51:
 120              	.LBB53:
 121              	.LBB54:
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 122              		.loc 2 1612 0
 123 004c 1368     		ldr	r3, [r2]
 124 004e 3E22     		movs	r2, #62
 125 0050 9A5C     		ldrb	r2, [r3, r2]
 126 0052 002A     		cmp	r2, #0
 127 0054 06D0     		beq	.L4
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 128              		.loc 2 1614 0
 129 0056 4548     		ldr	r0, .L9
 130 0058 E021     		movs	r1, #224
 131 005a 8900     		lsls	r1, r1, #2
 132 005c 4258     		ldr	r2, [r0, r1]
 133 005e 753C     		subs	r4, r4, #117
 134 0060 A243     		bics	r2, r4
 135 0062 4250     		str	r2, [r0, r1]
 136              	.LVL6:
 137              	.L4:
 138              	.LBE54:
 139              	.LBE53:
 140              	.LBB55:
 141              	.LBB56:
1673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 142              		.loc 2 1673 0
 143 0064 3E22     		movs	r2, #62
 144 0066 9A5C     		ldrb	r2, [r3, r2]
 145 0068 002A     		cmp	r2, #0
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 48


 146 006a 06D0     		beq	.L5
1675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 147              		.loc 2 1675 0
 148 006c 3F48     		ldr	r0, .L9
 149 006e E021     		movs	r1, #224
 150 0070 8900     		lsls	r1, r1, #2
 151 0072 4258     		ldr	r2, [r0, r1]
 152 0074 3024     		movs	r4, #48
 153 0076 A243     		bics	r2, r4
 154 0078 4250     		str	r2, [r0, r1]
 155              	.LVL7:
 156              	.L5:
 157              	.LBE56:
 158              	.LBE55:
 159              	.LBB57:
 160              	.LBB58:
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 161              		.loc 2 1545 0
 162 007a 3E22     		movs	r2, #62
 163 007c 9B5C     		ldrb	r3, [r3, r2]
 164 007e 002B     		cmp	r3, #0
 165 0080 07D0     		beq	.L6
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 166              		.loc 2 1547 0
 167 0082 3A49     		ldr	r1, .L9
 168 0084 E022     		movs	r2, #224
 169 0086 9200     		lsls	r2, r2, #2
 170 0088 8B58     		ldr	r3, [r1, r2]
 171 008a 8020     		movs	r0, #128
 172 008c 0006     		lsls	r0, r0, #24
 173 008e 0343     		orrs	r3, r0
 174 0090 8B50     		str	r3, [r1, r2]
 175              	.LVL8:
 176              	.L6:
 177              	.LBE58:
 178              	.LBE57:
 150:Generated_Source\PSoC6/cyfitter_cfg.c **** 	uint32_t status;
 151:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 152:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Enable all source clocks */
 153:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkLfSetSource(CY_SYSCLK_CLKLF_IN_ILO);
 154:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 155:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Configure CPU clock dividers */
 156:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkFastSetDivider(0u);
 157:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPeriSetDivider(1u);
 158:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkSlowSetDivider(0u);
 159:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 160:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Configure LF & HF clocks */
 161:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkHfSetSource(0u, CY_SYSCLK_CLKHF_IN_CLKPATH0);
 162:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkHfSetDivider(0u, CY_SYSCLK_CLKHF_NO_DIVIDE);
 163:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkHfEnable(0u);
 164:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 165:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Configure Path Clocks */
 166:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPathSetSource(1, CY_SYSCLK_CLKPATH_IN_IMO);
 179              		.loc 1 166 0
 180 0092 0021     		movs	r1, #0
 181 0094 0120     		movs	r0, #1
 182 0096 FFF7FEFF 		bl	Cy_SysClk_ClkPathSetSource
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 49


 183              	.LVL9:
 167:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPathSetSource(2, CY_SYSCLK_CLKPATH_IN_IMO);
 184              		.loc 1 167 0
 185 009a 0021     		movs	r1, #0
 186 009c 0220     		movs	r0, #2
 187 009e FFF7FEFF 		bl	Cy_SysClk_ClkPathSetSource
 188              	.LVL10:
 168:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPathSetSource(3, CY_SYSCLK_CLKPATH_IN_IMO);
 189              		.loc 1 168 0
 190 00a2 0021     		movs	r1, #0
 191 00a4 0320     		movs	r0, #3
 192 00a6 FFF7FEFF 		bl	Cy_SysClk_ClkPathSetSource
 193              	.LVL11:
 169:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPathSetSource(4, CY_SYSCLK_CLKPATH_IN_IMO);
 194              		.loc 1 169 0
 195 00aa 0021     		movs	r1, #0
 196 00ac 0420     		movs	r0, #4
 197 00ae FFF7FEFF 		bl	Cy_SysClk_ClkPathSetSource
 198              	.LVL12:
 170:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPathSetSource(0, CY_SYSCLK_CLKPATH_IN_IMO);
 199              		.loc 1 170 0
 200 00b2 0021     		movs	r1, #0
 201 00b4 0020     		movs	r0, #0
 202 00b6 FFF7FEFF 		bl	Cy_SysClk_ClkPathSetSource
 203              	.LVL13:
 204              	.LBB59:
 171:Generated_Source\PSoC6/cyfitter_cfg.c **** 	{
 172:Generated_Source\PSoC6/cyfitter_cfg.c **** 		const cy_stc_fll_manual_config_t fllConfig = 
 205              		.loc 1 172 0
 206 00ba 01A8     		add	r0, sp, #4
 207 00bc 2E49     		ldr	r1, .L9+12
 208 00be 0300     		movs	r3, r0
 209 00c0 0A00     		movs	r2, r1
 210 00c2 32CA     		ldmia	r2!, {r1, r4, r5}
 211 00c4 32C3     		stmia	r3!, {r1, r4, r5}
 212 00c6 12CA     		ldmia	r2!, {r1, r4}
 213 00c8 12C3     		stmia	r3!, {r1, r4}
 173:Generated_Source\PSoC6/cyfitter_cfg.c **** 		{
 174:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.fllMult =         500u,
 175:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.refDiv =          20u,
 176:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.ccoRange =        CY_SYSCLK_FLL_CCO_RANGE4,
 177:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.enableOutputDiv = true,
 178:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.lockTolerance =   10u,
 179:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.igain =           9u,
 180:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.pgain =           5u,
 181:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.settlingCount =   8u,
 182:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.outputMode =      CY_SYSCLK_FLLPLL_OUTPUT_AUTO,
 183:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.cco_Freq =        355u
 184:Generated_Source\PSoC6/cyfitter_cfg.c **** 		};
 185:Generated_Source\PSoC6/cyfitter_cfg.c **** 		status = Cy_SysClk_FllManualConfigure(&fllConfig);
 214              		.loc 1 185 0
 215 00ca FFF7FEFF 		bl	Cy_SysClk_FllManualConfigure
 216              	.LVL14:
 186:Generated_Source\PSoC6/cyfitter_cfg.c **** 		if (CY_RET_SUCCESS != status)
 217              		.loc 1 186 0
 218 00ce 0028     		cmp	r0, #0
 219 00d0 02D0     		beq	.L7
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 50


 187:Generated_Source\PSoC6/cyfitter_cfg.c **** 		{
 188:Generated_Source\PSoC6/cyfitter_cfg.c **** 			CyClockStartupError(CYCLOCKSTART_FLL_ERROR);
 220              		.loc 1 188 0
 221 00d2 0420     		movs	r0, #4
 222              	.LVL15:
 223 00d4 FFF7FEFF 		bl	CyClockStartupError
 224              	.LVL16:
 225              	.L7:
 226              	.LBE59:
 189:Generated_Source\PSoC6/cyfitter_cfg.c **** 		}
 190:Generated_Source\PSoC6/cyfitter_cfg.c **** 	}
 191:Generated_Source\PSoC6/cyfitter_cfg.c **** 	SRSS->CLK_TRIM_CCO_CTL |= 1u << 31;
 227              		.loc 1 191 0
 228 00d8 2449     		ldr	r1, .L9
 229 00da 284A     		ldr	r2, .L9+16
 230 00dc 8B58     		ldr	r3, [r1, r2]
 231 00de 8020     		movs	r0, #128
 232              	.LVL17:
 233 00e0 0006     		lsls	r0, r0, #24
 234 00e2 0343     		orrs	r3, r0
 235 00e4 8B50     		str	r3, [r1, r2]
 192:Generated_Source\PSoC6/cyfitter_cfg.c **** 	status = Cy_SysClk_FllEnable(200000u);
 236              		.loc 1 192 0
 237 00e6 2648     		ldr	r0, .L9+20
 238 00e8 FFF7FEFF 		bl	Cy_SysClk_FllEnable
 239              	.LVL18:
 193:Generated_Source\PSoC6/cyfitter_cfg.c **** 	if (CY_RET_SUCCESS != status)
 240              		.loc 1 193 0
 241 00ec 0028     		cmp	r0, #0
 242 00ee 02D0     		beq	.L8
 194:Generated_Source\PSoC6/cyfitter_cfg.c **** 	{
 195:Generated_Source\PSoC6/cyfitter_cfg.c **** 		CyClockStartupError(CYCLOCKSTART_FLL_ERROR);
 243              		.loc 1 195 0
 244 00f0 0420     		movs	r0, #4
 245              	.LVL19:
 246 00f2 FFF7FEFF 		bl	CyClockStartupError
 247              	.LVL20:
 248              	.L8:
 249              	.LBB60:
 250              	.LBB61:
2380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkLfGetSource
2384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source for the low frequency clock (clkLf).
2387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clklf_in_sources_t
2389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkLfSetSource
2392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clklf_in_sources_t Cy_SysClk_ClkLfGetSource(void)
2395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clklf_in_sources_t)(_FLD2VAL(SRSS_CLK_SELECT_LFCLK_SEL, SRSS_CLK_SELECT));
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 51


2397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_lf_funcs */
2399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================    clk_timer SECTION    ========================= */
2403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_timer_enums
2406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Timer clock (clk_timer) input sources. See CLK_TIMER_CTL register, TIMER_SEL
2410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and TIMER_HF0_DIV bits. Used with functions \ref Cy_SysClk_ClkTimerSetSource, and
2411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \ref Cy_SysClk_ClkTimerGetSource.
2412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
2414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKTIMER_IN_IMO       = 0x000U, /**< clk_timer is sourced by the internal main oscill
2416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKTIMER_IN_HF0_NODIV = 0x001U, /**< clk_timer is sourced by clkHf[0] undivided */
2417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKTIMER_IN_HF0_DIV2  = 0x101U, /**< clk_timer is sourced by clkHf[0] divided by 2 */
2418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKTIMER_IN_HF0_DIV4  = 0x201U, /**< clk_timer is sourced by clkHf[0] divided by 4 */
2419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKTIMER_IN_HF0_DIV8  = 0x301U  /**< clk_timer is sourced by clkHf[0] divided by 8 */
2420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clktimer_in_sources_t;
2421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_timer_enums */
2422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \cond */
2424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SRSS_CLK_TIMER_CTL_TIMER_Pos (SRSS_CLK_TIMER_CTL_TIMER_SEL_Pos)
2425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SRSS_CLK_TIMER_CTL_TIMER_Msk (SRSS_CLK_TIMER_CTL_TIMER_SEL_Msk | SRSS_CLK_TIMER_CTL_TIME
2426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \endcond */
2427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_timer_funcs
2430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerSetSource(cy_en_clktimer_in_sources_t source);
2433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clktimer_in_sources_t Cy_SysClk_ClkTimerGetSource(void);
2434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerSetDivider(uint8_t divider);
2435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkTimerGetDivider(void);
2436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerEnable(void);
2437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerDisable(void);
2438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerSetSource
2441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the source for the timer clock (clk_timer). The timer clock can be used
2444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * as a source for SYSTICK as an alternate clock and one or more of the energy 
2445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * profiler counters.
2446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clktimer_in_sources_t
2448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkTimerSetSource
2451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerSetSource(cy_en_clktimer_in_sources_t source)
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 52


2454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L3(source <= CY_SYSCLK_CLKTIMER_IN_HF0_DIV8);
2456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* set both fields TIMER_SEL and TIMER_HF0_DIV with the same input value */
2457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_TIMER_CTL, CY_SRSS_CLK_TIMER_CTL_TIMER, source);
 251              		.loc 2 2457 0
 252 00f6 1D4C     		ldr	r4, .L9
 253 00f8 224B     		ldr	r3, .L9+24
 254 00fa E158     		ldr	r1, [r4, r3]
 255 00fc 224A     		ldr	r2, .L9+28
 256 00fe 0A40     		ands	r2, r1
 257 0100 E250     		str	r2, [r4, r3]
 258              	.LVL21:
 259              	.LBE61:
 260              	.LBE60:
 261              	.LBB62:
 262              	.LBB63:
2458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerGetSource
2462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source for the timer clock (clk_timer).
2465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clktimer_in_sources_t
2467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkTimerSetSource
2470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clktimer_in_sources_t Cy_SysClk_ClkTimerGetSource(void)
2473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* return both fields TIMER_SEL and TIMER_HF0_DIV as a single combined value */
2475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clktimer_in_sources_t)(SRSS_CLK_TIMER_CTL & CY_SRSS_CLK_TIMER_CTL_TIMER_Msk);
2476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerSetDivider
2480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the divider for the timer clock (clk_timer).
2483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider Divider value; valid range is 0 to 255. Divides the selected
2485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * source (\ref Cy_SysClk_ClkTimerSetSource) by the (value + 1).
2486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
2488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not change the divider value while the timer clock is enabled.
2489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkTimerSetDivider
2492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerSetDivider(uint8_t divider)
2495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_TIMER_CTL, SRSS_CLK_TIMER_CTL_TIMER_DIV, divider);
 263              		.loc 2 2496 0
 264 0102 E158     		ldr	r1, [r4, r3]
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 53


 265 0104 214A     		ldr	r2, .L9+32
 266 0106 0A40     		ands	r2, r1
 267 0108 E250     		str	r2, [r4, r3]
 268              	.LVL22:
 269              	.LBE63:
 270              	.LBE62:
 271              	.LBB64:
 272              	.LBB65:
2497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerGetDivider
2501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the divider value for the timer clock (clk_timer).
2504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value
2506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkTimerSetDivider
2509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkTimerGetDivider(void)
2512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(SRSS_CLK_TIMER_CTL_TIMER_DIV, SRSS_CLK_TIMER_CTL));
2514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerEnable
2518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the timer clock (clk_timer). The timer clock can be used as a source
2521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for SYSTICK and one or more of the energy profiler counters.
2522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkTimerEnable
2525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerEnable(void)
2528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_TIMER_CTL |= SRSS_CLK_TIMER_CTL_ENABLE_Msk;
 273              		.loc 2 2529 0
 274 010a E258     		ldr	r2, [r4, r3]
 275 010c 8025     		movs	r5, #128
 276 010e 2D06     		lsls	r5, r5, #24
 277 0110 2A43     		orrs	r2, r5
 278 0112 E250     		str	r2, [r4, r3]
 279              	.LVL23:
 280              	.LBE65:
 281              	.LBE64:
 282              	.LBB66:
 283              	.LBB67:
2530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerDisable
2534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 54


2535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the timer clock (clk_timer).
2537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkTimerDisable
2540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerDisable(void)
2543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_TIMER_CTL &= ~SRSS_CLK_TIMER_CTL_ENABLE_Msk;
2545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_timer_funcs */
2547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clk_pump SECTION    ========================= */
2551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_pump_enums
2554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Pump clock (clk_pump) input sources. See CLK_SELECT register, PUMP_SEL bits.
2558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkPumpSetSource, and
2559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \ref Cy_SysClk_ClkPumpGetSource.
2560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
2562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH0,  /**< Pump clock input is clock path 0 */
2564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH1,  /**< Pump clock input is clock path 1 */
2565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH2,  /**< Pump clock input is clock path 2 */
2566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH3,  /**< Pump clock input is clock path 3 */
2567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH4,  /**< Pump clock input is clock path 4 */
2568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH5,  /**< Pump clock input is clock path 5 */
2569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH6,  /**< Pump clock input is clock path 6 */
2570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH7,  /**< Pump clock input is clock path 7 */
2571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH8,  /**< Pump clock input is clock path 8 */
2572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH9,  /**< Pump clock input is clock path 9 */
2573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH10, /**< Pump clock input is clock path 10 */
2574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH11, /**< Pump clock input is clock path 11 */
2575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH12, /**< Pump clock input is clock path 12 */
2576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH13, /**< Pump clock input is clock path 13 */
2577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH14, /**< Pump clock input is clock path 14 */
2578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH15  /**< Pump clock input is clock path 15 */
2579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkpump_in_sources_t;
2580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Pump clock (clk_pump) divide options. See CLK_SELECT register, PUMP_DIV bits.
2583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkPumpSetDivider, and
2584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \ref Cy_SysClk_ClkPumpGetDivider.
2585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
2587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_NO_DIV = 0U, /**< No division on pump clock */
2589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_DIV_2  = 1U, /**< Pump clock divided by 2 */
2590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_DIV_4  = 2U, /**< Pump clock divided by 4 */
2591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_DIV_8  = 3U, /**< Pump clock divided by 8 */
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 55


2592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_DIV_16 = 4U  /**< Pump clock divided by 16 */
2593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkpump_divide_t;
2594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_pump_enums */
2595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \cond */
2597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_FLL_IS_DIVIDER_VALID(div) (((div) == CY_SYSCLK_PUMP_NO_DIV) || \
2598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               ((div) == CY_SYSCLK_PUMP_DIV_2)  || \
2599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               ((div) == CY_SYSCLK_PUMP_DIV_4)  || \
2600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               ((div) == CY_SYSCLK_PUMP_DIV_8)  || \
2601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               ((div) == CY_SYSCLK_PUMP_DIV_16))
2602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \endcond */
2603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_pump_funcs
2606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpSetSource(cy_en_clkpump_in_sources_t source);
2609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkpump_in_sources_t Cy_SysClk_ClkPumpGetSource(void);
2610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpSetDivider(cy_en_clkpump_divide_t divider);
2611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkpump_divide_t Cy_SysClk_ClkPumpGetDivider(void);
2612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpEnable(void);
2613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpDisable(void);
2614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpSetSource
2617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the source for the pump clock (clk_pump). The pump clock can be used for
2620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the analog pumps in the CTBm block.
2621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clkpump_in_sources_t
2623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
2625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not change the source while the pump clock is enabled.
2626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPumpSetSource
2629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpSetSource(cy_en_clkpump_in_sources_t source)
2632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L3(source <= CY_SYSCLK_PUMP_IN_CLKPATH15);
2634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_SELECT, SRSS_CLK_SELECT_PUMP_SEL, source);
 284              		.loc 2 2634 0
 285 0114 043B     		subs	r3, r3, #4
 286 0116 E158     		ldr	r1, [r4, r3]
 287 0118 1D4A     		ldr	r2, .L9+36
 288 011a 0A40     		ands	r2, r1
 289 011c E250     		str	r2, [r4, r3]
 290              	.LVL24:
 291              	.LBE67:
 292              	.LBE66:
 293              	.LBB68:
 294              	.LBB69:
2635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 56


2638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpGetSource
2639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source for the pump clock (clk_pump).
2642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkpump_in_sources_t
2644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPumpSetSource
2647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkpump_in_sources_t Cy_SysClk_ClkPumpGetSource(void)
2650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkpump_in_sources_t)_FLD2VAL(SRSS_CLK_SELECT_PUMP_SEL, SRSS_CLK_SELECT);
2652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpSetDivider
2656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the divider of the pump clock (clk_pump).
2659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider \ref cy_en_clkpump_divide_t
2661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
2663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not change the divider value while the pump clock is enabled.
2664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPumpSetDivider
2667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpSetDivider(cy_en_clkpump_divide_t divider)
2670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L3(CY_SYSCLK_FLL_IS_DIVIDER_VALID(divider));
2672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_SELECT, SRSS_CLK_SELECT_PUMP_DIV, divider);
 295              		.loc 2 2672 0
 296 011e E158     		ldr	r1, [r4, r3]
 297 0120 1C4A     		ldr	r2, .L9+40
 298 0122 0A40     		ands	r2, r1
 299 0124 8021     		movs	r1, #128
 300 0126 8901     		lsls	r1, r1, #6
 301 0128 0A43     		orrs	r2, r1
 302 012a E250     		str	r2, [r4, r3]
 303              	.LVL25:
 304              	.LBE69:
 305              	.LBE68:
 306              	.LBB70:
 307              	.LBB71:
2673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpGetDivider
2677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the divider value for the pump clock (clk_pump).
2680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkpump_divide_t
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 57


2682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPumpSetDivider
2685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkpump_divide_t Cy_SysClk_ClkPumpGetDivider(void)
2688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkpump_divide_t)_FLD2VAL(SRSS_CLK_SELECT_PUMP_DIV, SRSS_CLK_SELECT);
2690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpEnable
2694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the pump clock (clk_pump). The pump clock can be used for the analog
2697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * pumps in the CTBm block.
2698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPumpEnable
2701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpEnable(void)
2704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_SELECT |= SRSS_CLK_SELECT_PUMP_ENABLE_Msk;
 308              		.loc 2 2705 0
 309 012c E258     		ldr	r2, [r4, r3]
 310 012e 8021     		movs	r1, #128
 311 0130 0902     		lsls	r1, r1, #8
 312 0132 0A43     		orrs	r2, r1
 313 0134 E250     		str	r2, [r4, r3]
 314              	.LVL26:
 315              	.LBE71:
 316              	.LBE70:
 317              	.LBB72:
 318              	.LBB73:
2706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpDisable
2710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the pump clock (clk_pump).
2713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPumpDisable
2716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpDisable(void)
2719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_SELECT &= ~SRSS_CLK_SELECT_PUMP_ENABLE_Msk;
2721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_pump_funcs */
2723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ==========================    clk_bak SECTION    ========================= */
2727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 58


2728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_bak_enums
2730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Backup domain clock (clk_bak) input sources. See BACKUP->CTL register,
2734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_SEL bits. Used with functions \ref Cy_SysClk_ClkBakSetSource, and
2735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \ref Cy_SysClk_ClkBakGetSource.
2736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
2738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_BAK_IN_WCO,   /**< Backup domain clock input is WCO */
2740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_BAK_IN_CLKLF  /**< Backup domain clock input is clkLf */
2741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkbak_in_sources_t;
2742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_bak_enums */
2743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_bak_funcs
2746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkBakSetSource(cy_en_clkbak_in_sources_t source);
2749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkbak_in_sources_t Cy_SysClk_ClkBakGetSource(void);
2750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkBakSetSource
2753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the source for the backup domain clock (clk_bak).
2756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clkbak_in_sources_t
2758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
2760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkLf is not available in all power modes.  For this reason, WCO is the
2761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * preferred source. If the WCO is routed through the clkLf multiplexer
2762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (see \ref Cy_SysClk_ClkLfSetSource), select WCO directly - do not select clkLf.
2763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkBakSetSource
2766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkBakSetSource(cy_en_clkbak_in_sources_t source)
2769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L3(source <= CY_SYSCLK_BAK_IN_CLKLF);
2771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(BACKUP_CTL, BACKUP_CTL_CLK_SEL, source);
 319              		.loc 2 2771 0
 320 0136 184A     		ldr	r2, .L9+44
 321 0138 1168     		ldr	r1, [r2]
 322 013a 184B     		ldr	r3, .L9+48
 323 013c 0B40     		ands	r3, r1
 324 013e 8021     		movs	r1, #128
 325 0140 4900     		lsls	r1, r1, #1
 326 0142 0B43     		orrs	r3, r1
 327 0144 1360     		str	r3, [r2]
 328              	.LVL27:
 329              	.LBE73:
 330              	.LBE72:
 196:Generated_Source\PSoC6/cyfitter_cfg.c **** 	}
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 59


 197:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 198:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Configure miscellaneous clocks */
 199:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkTimerSetSource(CY_SYSCLK_CLKTIMER_IN_IMO);
 200:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkTimerSetDivider(0);
 201:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkTimerEnable();
 202:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPumpSetSource(CY_SYSCLK_PUMP_IN_CLKPATH0);
 203:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPumpSetDivider(CY_SYSCLK_PUMP_DIV_4);
 204:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPumpEnable();
 205:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkBakSetSource(CY_SYSCLK_BAK_IN_CLKLF);
 206:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysTick_SetClockSource(CY_SYSTICK_CLOCK_SOURCE_CLK_LF);
 331              		.loc 1 206 0
 332 0146 0020     		movs	r0, #0
 333              	.LVL28:
 334 0148 FFF7FEFF 		bl	Cy_SysTick_SetClockSource
 335              	.LVL29:
 336              	.LBB74:
 337              	.LBB75:
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 338              		.loc 2 1014 0
 339 014c 144B     		ldr	r3, .L9+52
 340 014e E258     		ldr	r2, [r4, r3]
 341 0150 1543     		orrs	r5, r2
 342 0152 E550     		str	r5, [r4, r3]
 343              	.LVL30:
 344              	.LBE75:
 345              	.LBE74:
 346              	.LBB76:
 347              	.LBB77:
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 348              		.loc 2 1065 0
 349 0154 E158     		ldr	r1, [r4, r3]
 350 0156 0122     		movs	r2, #1
 351 0158 9143     		bics	r1, r2
 352 015a 0A43     		orrs	r2, r1
 353 015c E250     		str	r2, [r4, r3]
 354              	.LVL31:
 355              	.LBE77:
 356              	.LBE76:
 207:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_IloEnable();
 208:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_IloHibernateOn(1u);
 209:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 210:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Set memory wait states based on 100 MHz HFClk[0] */
 211:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysLib_SetWaitStates(false, 100);
 357              		.loc 1 211 0
 358 015e 6421     		movs	r1, #100
 359 0160 0020     		movs	r0, #0
 360 0162 FFF7FEFF 		bl	Cy_SysLib_SetWaitStates
 361              	.LVL32:
 212:Generated_Source\PSoC6/cyfitter_cfg.c **** }
 362              		.loc 1 212 0
 363 0166 07B0     		add	sp, sp, #28
 364              		@ sp needed
 365 0168 30BD     		pop	{r4, r5, pc}
 366              	.L10:
 367 016a C046     		.align	2
 368              	.L9:
 369 016c 00002640 		.word	1076232192
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 60


 370 0170 00000000 		.word	cy_device
 371 0174 FF00FFFF 		.word	-65281
 372 0178 00000000 		.word	.LANCHOR0
 373 017c 087F0000 		.word	32520
 374 0180 400D0300 		.word	200000
 375 0184 04050000 		.word	1284
 376 0188 FEFCFFFF 		.word	-770
 377 018c FFFF00FF 		.word	-16711681
 378 0190 FFF0FFFF 		.word	-3841
 379 0194 FF8FFFFF 		.word	-28673
 380 0198 00002740 		.word	1076297728
 381 019c FFFCFFFF 		.word	-769
 382 01a0 0C050000 		.word	1292
 383              		.cfi_endproc
 384              	.LFE188:
 385              		.size	ClockInit, .-ClockInit
 386              		.section	.text.Cy_SystemInit,"ax",%progbits
 387              		.align	2
 388              		.global	Cy_SystemInit
 389              		.code	16
 390              		.thumb_func
 391              		.type	Cy_SystemInit, %function
 392              	Cy_SystemInit:
 393              	.LFB190:
 213:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 214:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 215:Generated_Source\PSoC6/cyfitter_cfg.c **** /* Analog API Functions */
 216:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 217:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 218:Generated_Source\PSoC6/cyfitter_cfg.c **** /*******************************************************************************
 219:Generated_Source\PSoC6/cyfitter_cfg.c **** * Function Name: AnalogSetDefault
 220:Generated_Source\PSoC6/cyfitter_cfg.c **** ********************************************************************************
 221:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 222:Generated_Source\PSoC6/cyfitter_cfg.c **** * Summary:
 223:Generated_Source\PSoC6/cyfitter_cfg.c **** *  Sets up the analog portions of the chip to default values based on chip
 224:Generated_Source\PSoC6/cyfitter_cfg.c **** *  configuration options from the project.
 225:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 226:Generated_Source\PSoC6/cyfitter_cfg.c **** * Parameters:
 227:Generated_Source\PSoC6/cyfitter_cfg.c **** *  void
 228:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 229:Generated_Source\PSoC6/cyfitter_cfg.c **** * Return:
 230:Generated_Source\PSoC6/cyfitter_cfg.c **** *  void
 231:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 232:Generated_Source\PSoC6/cyfitter_cfg.c **** *******************************************************************************/
 233:Generated_Source\PSoC6/cyfitter_cfg.c **** static void AnalogSetDefault(void);
 234:Generated_Source\PSoC6/cyfitter_cfg.c **** static void AnalogSetDefault(void)
 235:Generated_Source\PSoC6/cyfitter_cfg.c **** {
 236:Generated_Source\PSoC6/cyfitter_cfg.c **** }
 237:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 238:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 239:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 240:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 241:Generated_Source\PSoC6/cyfitter_cfg.c **** /*******************************************************************************
 242:Generated_Source\PSoC6/cyfitter_cfg.c **** * Function Name: Cy_SystemInit
 243:Generated_Source\PSoC6/cyfitter_cfg.c **** ********************************************************************************
 244:Generated_Source\PSoC6/cyfitter_cfg.c **** * Summary:
 245:Generated_Source\PSoC6/cyfitter_cfg.c **** *  This function is called by the start-up code for the selected device. It
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 61


 246:Generated_Source\PSoC6/cyfitter_cfg.c **** *  performs all of the necessary device configuration based on the design
 247:Generated_Source\PSoC6/cyfitter_cfg.c **** *  settings.  This includes settings from the Design Wide Resources (DWR) such
 248:Generated_Source\PSoC6/cyfitter_cfg.c **** *  as Clocks and Pins as well as any component configuration that is necessary.
 249:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 250:Generated_Source\PSoC6/cyfitter_cfg.c **** * Parameters:
 251:Generated_Source\PSoC6/cyfitter_cfg.c **** *   void
 252:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 253:Generated_Source\PSoC6/cyfitter_cfg.c **** * Return:
 254:Generated_Source\PSoC6/cyfitter_cfg.c **** *   void
 255:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 256:Generated_Source\PSoC6/cyfitter_cfg.c **** *******************************************************************************/
 257:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 258:Generated_Source\PSoC6/cyfitter_cfg.c **** void Cy_SystemInit(void)
 259:Generated_Source\PSoC6/cyfitter_cfg.c **** {
 394              		.loc 1 259 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 40
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398 0000 70B5     		push	{r4, r5, r6, lr}
 399              		.cfi_def_cfa_offset 16
 400              		.cfi_offset 4, -16
 401              		.cfi_offset 5, -12
 402              		.cfi_offset 6, -8
 403              		.cfi_offset 14, -4
 404 0002 8AB0     		sub	sp, sp, #40
 405              		.cfi_def_cfa_offset 56
 260:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Set worst case memory wait states (150 MHz), ClockInit() will update */
 261:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysLib_SetWaitStates(false, 150);
 406              		.loc 1 261 0
 407 0004 9621     		movs	r1, #150
 408 0006 0020     		movs	r0, #0
 409 0008 FFF7FEFF 		bl	Cy_SysLib_SetWaitStates
 410              	.LVL33:
 262:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 263:Generated_Source\PSoC6/cyfitter_cfg.c **** 	if(0u == Cy_SysLib_GetResetReason()) /* POR, XRES, or BOD */
 411              		.loc 1 263 0
 412 000c FFF7FEFF 		bl	Cy_SysLib_GetResetReason
 413              	.LVL34:
 414 0010 0028     		cmp	r0, #0
 415 0012 14D1     		bne	.L12
 264:Generated_Source\PSoC6/cyfitter_cfg.c **** 	{
 265:Generated_Source\PSoC6/cyfitter_cfg.c **** 		Cy_SysLib_ResetBackupDomain();
 416              		.loc 1 265 0
 417 0014 FFF7FEFF 		bl	Cy_SysLib_ResetBackupDomain
 418              	.LVL35:
 419              	.LBB78:
 420              	.LBB79:
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 421              		.loc 2 1038 0
 422 0018 C023     		movs	r3, #192
 423 001a 5B00     		lsls	r3, r3, #1
 424 001c 244A     		ldr	r2, .L15
 425 001e D358     		ldr	r3, [r2, r3]
 426 0020 DB07     		lsls	r3, r3, #31
 427 0022 05D4     		bmi	.L13
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 428              		.loc 2 1040 0
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 62


 429 0024 1100     		movs	r1, r2
 430 0026 234A     		ldr	r2, .L15+4
 431 0028 8B58     		ldr	r3, [r1, r2]
 432 002a 5B00     		lsls	r3, r3, #1
 433 002c 5B08     		lsrs	r3, r3, #1
 434 002e 8B50     		str	r3, [r1, r2]
 435              	.LVL36:
 436              	.L13:
 437              	.LBE79:
 438              	.LBE78:
 439              	.LBB80:
 440              	.LBB81:
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 441              		.loc 2 1014 0
 442 0030 1F49     		ldr	r1, .L15
 443 0032 204A     		ldr	r2, .L15+4
 444 0034 8B58     		ldr	r3, [r1, r2]
 445 0036 8020     		movs	r0, #128
 446 0038 0006     		lsls	r0, r0, #24
 447 003a 0343     		orrs	r3, r0
 448 003c 8B50     		str	r3, [r1, r2]
 449              	.L12:
 450              	.LBE81:
 451              	.LBE80:
 266:Generated_Source\PSoC6/cyfitter_cfg.c **** 		Cy_SysClk_IloDisable();
 267:Generated_Source\PSoC6/cyfitter_cfg.c **** 		Cy_SysClk_IloEnable();
 268:Generated_Source\PSoC6/cyfitter_cfg.c **** 	}
 269:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 270:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Power Mode */
 271:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysPm_LdoSetVoltage(CY_SYSPM_LDO_VOLTAGE_1_1V);
 452              		.loc 1 271 0
 453 003e 0120     		movs	r0, #1
 454 0040 FFF7FEFF 		bl	Cy_SysPm_LdoSetVoltage
 455              	.LVL37:
 456              	.LBB82:
 457              	.LBB83:
 458              		.file 3 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syspm/cy_syspm.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \file cy_syspm.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \version 4.0
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Provides the function definitions for the power management API.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Use the System Power Management (SysPm) driver to change power modes and 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 63


  21:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * reduce system power consumption in power sensitive designs. 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The functions and other declarations used in this driver are in cy_syspm.h. 
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * and declarations in the PDL. 
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For multi-CPU devices, this library allows you to individually enter low power  
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * modes for each CPU.
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This document contains the following topics:
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_power_modes
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_system_power_modes
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_switching_into_ulp
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_ulp_limitations
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_switching_into_lp
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_lp_limitations
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_switching_into_sleep
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_switching_into_deepsleep
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_wakingup_from_sleep_deepsleep
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_switching_into_hibernate
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_wakingup_from_hibernate
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_system_reg_curr_mode
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_system_set_min_reg_curr_mode
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_system_set_normal_reg_curr_mode
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_migration_guide_for_syspm_4_0
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_managing_pmic
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_managing_backup_domain
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_cb
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_cb_example
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_cb_config_consideration
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_cb_parameters
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_cb_structures
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_cb_function_implementation
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_cb_flow
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_cb_unregistering
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_definitions
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \section group_syspm_section_configuration Configuration Considerations
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_power_modes Power Modes
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * PSoC 6 MCUs support four system and three CPU power modes. These power modes
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * are intended to minimize average power consumption in an application.
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * System power modes:
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Low Power</b> - All peripheral and CPU power modes
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   are available to be used at maximum device frequency and current 
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   consumption.
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Ultra Low Power</b> - All peripheral and 
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   CPU power modes are available, but the frequency and current consumption 
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   are limited to a device specific number.
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Deep Sleep</b> - Device and I/O states is retained. Low-frequency 
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   peripherals are available. Both CPUs are in CPU Deep Sleep power mode. 
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Hibernate</b> - The device and I/O states are frozen and the device 
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   resets on wakeup.
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The CPU <b>Active</b>, <b>Sleep</b> and <b>Deep Sleep</b> power modes are 
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Arm-defined power modes supported by the Arm CPU instruction 
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * set architecture (ISA). 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 64


  78:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_system_power_modes System Power Modes
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>LP</b> - In this mode, code is executed and all logic and 
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   memories are powered. Firmware may disable/reduce clocks for specific 
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   peripherals and power down specific analog power domains.
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>ULP</b> - This power mode is like LP mode, but 
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   with clock restrictions and limited/slower peripherals to achieve lower
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   current consumption. Refer to \ref group_syspm_switching_into_ulp in 
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   Configuration considerations.
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Deep Sleep</b> - Is a lower power mode where high-frequency clocks are 
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   disabled. Refer to \ref group_syspm_switching_into_deepsleep in 
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   Configuration considerations. Deep-sleep-capable peripherals are available. 
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   A normal wakeup from Deep Sleep returns to either system LP or ULP mode, 
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   depending on the previous state and programmed behavior for the configured 
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   wakeup interrupt. Likewise, a debug wakes up from system Deep Sleep and 
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   woken CPU returns to CPU Sleep. Refer 
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   to \ref group_syspm_wakingup_from_sleep_deepsleep in Configuration 
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   considerations.
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Hibernate</b> - Is the lowest power mode that is entered from 
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   firmware. Refer to \ref group_syspm_switching_into_hibernate in 
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   Configuration considerations. On wakeup the CPU(s) and all peripherals 
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   go through a full reset. The I/O's state is frozen so that the 
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   output driver state is held in system Hibernate. Note that in this mode, 
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   the CPU(s) and all peripherals lose their states, so the system and firmware
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   reboot on a wakeup event. Backup memory (if present) can be used to store 
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   limited system state for use on the next reboot. Refer to 
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \ref group_syspm_wakingup_from_hibernate in Configuration considerations.
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_switching_into_lp Switching the System into Low Power
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To set system LP mode you need to set LP voltage for the active core 
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * regulator:
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * If active core regulator is the LDO, call:
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \code{.c}
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   Cy_SysPm_LdoSetVoltage(CY_SYSPM_LDO_VOLTAGE_LP);
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \endcode
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * If active core regulator is the Buck, call:
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \code{.c}
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   Cy_SysPm_BuckSetVoltage1(CY_SYSPM_BUCK_OUT1_VOLTAGE_LP)
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \endcode
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * After switching into system LP mode, the operating frequency and current 
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * consumption may now be increased up to \ref group_syspm_lp_limitations.
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The wait states for flash may be changed to increase device performance by 
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * calling SysLib function Cy_SysLib_SetWaitStates(true, hfClkFreqMz), where 
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * hfClkFreqMz is the frequency of HfClk0 in MHz.
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_lp_limitations LP Limitations
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When the system is in LP mode, the core regulator voltage is set to
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <b>1.1 V (nominal)</b> and the following limitations must be met:
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - The maximum operating frequency for all Clk_HF paths must not exceed 
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <b>150 MHz*</b>, and peripheral and slow clock must 
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     not exceed <b>100 MHz *</b>
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 65


 135:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - The total current consumption must be less than or equal to 
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <b>250 mA *</b>
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning * - Numbers shown are approximate and real limit values may be
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * different because they are device specific. You should refer to the device 
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * datasheet for exact values of maximum frequency and current in system LP mode.
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_switching_into_ulp Switching the System into Ultra Low Power
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Before switching into system ULP mode, ensure that the device meets 
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_ulp_limitations. Decrease the clock frequencies, 
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * and slow or disable peripherals. Also ensure that appropriate wait state 
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * values are set for the flash. Flash wait states can be set by calling 
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * SysLib function Cy_SysLib_SetWaitStates(true, hfClkFreqMz), where hfClkFreqMz 
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * is the frequency of HfClk0 in MHz.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * After the \ref group_syspm_ulp_limitations are met and appropriate wait 
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * states are set, you must set ULP voltage for the active core regulator:
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * If active core regulator is the LDO Core Voltage Regulator, call 
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_LdoSetVoltage(CY_SYSPM_LDO_VOLTAGE_ULP)
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * If active core regulator is the Buck Core Voltage Regulator, then call 
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_BuckSetVoltage1(CY_SYSPM_BUCK_OUT1_VOLTAGE_ULP)
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_ulp_limitations ULP Limitations
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When the system is in ULP mode the core regulator voltage is set to <b>0.9 V 
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (nominal)</b> and the following limitations must be meet:
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - The maximum operating frequency for all Clk_HF paths must not exceed 
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <b>50 MHz *</b>, whereas the peripheral and slow clock must not exceed 
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <b>25 MHz *</b>. 
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - The total current consumption must be less than or equal 
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     to <b>20 mA*</b>
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - the flash write operations are prohibited. The flash works in the 
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     Read-only operation. If Write operations are required, you must switch to
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     the system LP mode.
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning * - Numbers shown are approximate and real limit values may be
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * different because they are device specific. You should refer to the device 
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * datasheet for exact values of maximum frequency and current in system
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * ULP mode.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_switching_into_sleep Switching CPU into Sleep
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For multi-CPU devices, the Cy_SysPm_CpuEnterSleep() switches only the CPU 
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * that calls the function into the CPU Sleep power mode. 
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * All pending interrupts must be cleared before the CPU is put into a 
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Sleep mode, even if they are masked.
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The CPU event register can be set in the past, for example, as a result of 
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * internal system calls. So an old event can cause the CPU to not enter 
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Sleep mode upon WFE(). Therefore usually the WFE() is used in an idle loop or 
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * polling loop as it might or might not cause entering of CPU Sleep mode. If 
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the idle loop or polling loop is not used, then it is recommended to use 
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * WFI() instruction.
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_switching_into_deepsleep Switching the System or CPU into Deep Sleep
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 66


 192:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For multi-CPU devices, the Cy_SysPm_CpuEnterDeepSleep() function switches 
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * only the CPU that calls the function into the CPU Deep Sleep power mode. 
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To set the whole system into Deep Sleep power mode, ensure that all CPUs call 
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the Cy_SysPm_CpuEnterDeepSleep() function.
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * There are situations when the system does not switch into the Deep Sleep 
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * power mode immediately after the last CPU calls Cy_SysPm_CpuEnterDeepSleep(). 
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The system will switch into Deep Sleep mode automatically a short time later, 
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * after the low power circuits are ready to switch into Deep Sleep. Refer to 
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the Cy_SysPm_CpuEnterDeepSleep() description for more detail.
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * All pending interrupts must be cleared before the system is put into a 
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Deep Sleep mode, even if they are masked.
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The CPU event register can be set in the past, for example, as a result of 
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * internal system calls. So an old event can cause the CPU to not enter Deep 
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Sleep mode upon WFE(). Therefore usually the WFE() is used in an idle loop or 
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * polling loop as it might or might not cause entering of CPU Deep Sleep mode. 
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If the idle loop or polling loop is not used, then it is recommended to use 
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * WFI() instruction. 
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For single-CPU devices, SysPm functions that return the status of the 
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * unsupported CPU always return CY_SYSPM_STATUS_<CPU>_DEEPSLEEP.
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_wakingup_from_sleep_deepsleep Waking Up from Sleep or Deep Sleep
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For Arm-based devices, an interrupt is required for the CPU to wake up. 
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For multi-CPU devices, one CPU can wake up the other CPU by sending the 
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * event instruction. Use the Cy_SysPm_CpuSendWakeupEvent() function.
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_switching_into_hibernate Switching System to Hibernate
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If you call Cy_SysPm_SystemEnterHibernate() from either CPU, the system will
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * be switched into the Hibernate power mode directly, because there is no 
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * handshake between CPUs.
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_wakingup_from_hibernate Waking Up from Hibernate
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The system can wake up from Hibernate mode by configuring the following wakeup
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * sources:
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - Wakeup pin
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - LP Comparator
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - RTC alarm
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - WDT interrupt
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Wakeup is supported from device specific pin(s) with programmable polarity. 
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Additionally, unregulated peripherals can wake the system under some 
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * conditions. For example, a low power comparator can wake the system by 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * comparing two external voltages, but does not support comparison to an 
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * internally-generated voltage. The backup power domain remains functional, and 
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * if present it can schedule an alarm to wake the system from Hibernate using 
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the RTC. Alternatively, the Watchdog Timer (WDT) can be configured to wake-up 
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the system by WDT interrupt. Refer to \ref Cy_SysPm_SetHibernateWakeupSource()
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * for more detail.
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_system_reg_curr_mode System Regulator Current Mode
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * In addition to system ULP and LP modes, the five different resource 
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * power settings can be configured to reduce current consumption:
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# <b>Linear regulator low power mode</b>. Can be used only if core current
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 67


 249:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    is below the LDO regulator LP threshold.
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# <b>POR/BOD circuit low power mode</b>. Requires compatible power supply 
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    stability due to stability increase response time.
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# <b>Bandgap reference circuits low power mode</b> (turns on Deep Sleep 
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    Bandgap). Requires design to accept reduced Vref accuracy. Active ref can 
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    be turned off after this feature is enabled.
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# <b>Reference buffer circuit low power mode</b>. Requires design to accept 
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    reduced Vref accuracy.
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# <b>Current reference circuit low power mode</b>. Require design to accept 
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    reduced Iref accuracy.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * These five sub features can modify both system LP or ULP modes as they are 
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * independent from LP/ULP settings. 
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When all five sub features are set to their low power modes, the system 
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * operates in regulator minimum current mode. In regulator minimum current mode,
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the system current consumption is limited to a device-specific value. Refer to 
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the device datasheet for the exact current consumption value in regulator 
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * minimum current mode.
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When all five sub features are set to their normal mode, the system operates
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * in regulator normal current mode. When regulator normal current mode is set, 
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the system may operate at device maximum current.
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_system_set_min_reg_curr_mode Setting Minimum System Regulator Current Mod
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Before setting the regulator minimum current mode ensure that current limits 
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * are be met. After current limits are met, call the 
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_SystemSetNormalRegulatorCurrent() function. 
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_system_set_normal_reg_curr_mode Setting Normal System Regulator Current M
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To set regulator normal current mode, call the 
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_SystemSetNormalRegulatorCurrent() function. After the function call, 
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the current limits can be increased to a maximum current, depending on what 
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * system power mode is set: LP or ULP.
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_managing_pmic Managing PMIC
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The SysPm driver also provides an API to configure the internal power 
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * management integrated circuit (PMIC) controller for an external PMIC that 
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * supplies Vddd. Use the API to enable the internal PMIC controller output that
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * is routed to pmic_wakeup_out pin, and configure the polarity of the PMIC 
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller input (pmic_wakeup_in) that is used to wake up the PMIC.
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC controller is automatically enabled when:
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * The PMIC is locked by a call to Cy_SysPm_PmicLock()
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * The configured polarity of the PMIC input and the polarity driven to 
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   pmic_wakeup_in pin matches.
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Because a call to Cy_SysPm_PmicLock() automatically enables the PMIC
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller, the PMIC can remain disabled only when it is unlocked. See Cy_SysPm_PmicUnlock() 
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * for more detail.
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Use Cy_SysPm_PmicIsLocked() to read the current PMIC lock status.
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To enable the PMIC, use these functions in this order:
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \code{.c}
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 68


 306:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock();
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicEnable();
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicLock();
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \endcode
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To disable the PMIC controller, unlock the PMIC. Then call 
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicDisable() with the inverted value of the current active state of 
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the pmic_wakeup_in pin.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For example, assume the current state of the pmic_wakeup_in pin is active low.
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To disable the PMIC controller, call these functions in this order:
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \code{.c}
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock();
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicDisable(CY_SYSPM_PMIC_POLARITY_HIGH);
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \endcode
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Note that you do not call Cy_SysPm_PmicLock(), because that automatically 
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * enables the PMIC.
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * While disabled, the PMIC controller is automatically enabled when the 
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * pmic_wakeup_in pin state is changed into a high state.
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To disable the PMIC controller output, call these functions in this order:
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock();
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicDisableOutput();
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Do not call Cy_SysPm_PmicLock() (which automatically enables the PMIC 
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller output).
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When disabled, the PMIC controller output is enabled when the PMIC is locked, 
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * or by calling Cy_SysPm_PmicEnableOutput().
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_managing_backup_domain Managing the Backup Domain
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The SysPm driver provide functions to:
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * Configure Supercapacitor charging
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * Select power supply source (Vbackup or Vddd) for Vddbackup
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * Measure Vddbackup using the ADC
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to the \ref group_syspm_functions_backup functions for more detail.
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_cb SysPm Callbacks
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The SysPm driver handles low power callbacks declared in the application. 
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If there are no callbacks registered, the device executes the power mode 
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * transition. However, frequently your application firmware must make 
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * modifications for low power mode. For example, you may need to disable a 
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * peripheral, or ensure that a message is not being transmitted or received.
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To enable this, the SysPm driver implements a callback mechanism. When a lower
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * power mode transition is about to take place (either entering or exiting 
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_system_power_modes), the registered callbacks for that 
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * transition are called.
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The SysPm driver organizes all the callbacks into a linked list. While 
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * entering a low power mode, SysPm goes through that linked list from first to 
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * last, executing the callbacks one after another. While exiting low power mode,
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * SysPm goes through that linked list again, but in the opposite direction from 
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * last to first. This ordering supports prioritization of callbacks relative to 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 69


 363:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the transition event. 
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For example, the picture below shows three callback structures organized into 
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * a linked list: myDeepSleep1, myDeepSleep2, myDeepSleep3 (represented with the 
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref cy_stc_syspm_callback_t configuration structure). Each structure 
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * contains, among other fields, the address of the callback function. The code 
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * snippets below set this up so that myDeepSleep1 is called first when entering 
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the low power mode. This also means that myDeepSleep1 will be the last one to 
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * execute when exiting the low power mode.
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The callback structures after registration:
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \image html syspm_2_10_after_registration.png
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Your application must register each callback, so that SysPm can execute it. 
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Upon registration, the linked list is built by the SysPm driver. Notice 
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the &myDeepSleep1 address in the myDeepSleep1 
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref cy_stc_syspm_callback_t structure. This is filled in by the SysPm driver 
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * when you register myDeepSleep1. The order in which the callbacks are 
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * registered in the application defines the order of their execution by the 
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * SysPm driver. Call \ref Cy_SysPm_RegisterCallback() to register each 
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callback function. 
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * A callback function is typically associated with a particular driver that 
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * handles the peripheral. So the callback mechanism enables a peripheral to 
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * prepare for a low power mode (for instance, shutting down the analog part); 
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * or to perform tasks while exiting a low power mode (like enabling the analog 
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * part again).
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * With the callback mechanism you can prevent switching into a low power mode if
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * a peripheral is not ready. For example, driver X is in the process of 
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * receiving a message. In the callback function implementation simply return 
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_FAIL in a response to CY_SYSPM_CHECK_READY.
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If success is returned while executing a callback, the SysPm driver calls the 
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * next callback and so on to the end of the list. If at some point a callback 
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * returns CY_SYSPM_FAIL in response to the CY_SYSPM_CHECK_READY step, all the 
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callbacks that have already executed are executed in reverse order, with the 
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_CHECK_FAIL mode parameter. This allows each callback to know that 
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * entering the low power mode has failed. The callback can then undo whatever it
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * did to prepare for low power mode, if required. For example, if the driver X 
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callback shut down the analog part, it can re-enable the analog part.
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Let's switch to an example explaining the implementation, setup, and 
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * registration of three callbacks (myDeepSleep1, myDeepSleep2, myDeepSleep2) in 
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the application. The \ref group_syspm_cb_config_consideration are provided 
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * after the \ref group_syspm_cb_example.
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_cb_example SysPm Callbacks Example
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The following code snippets demonstrate how use the SysPm callbacks mechanism.
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * We will build the prototype for an application that registers 
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * three callback functions:
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    -# myDeepSleep1 - Handles CPU Deep Sleep.
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    -# myDeepSleep1 - Handles CPU Deep Sleep and is associated with peripheral 
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       HW1_address (see <a href="..\..\pdl_user_guide.pdf">PDL Design</a> 
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       section to learn about the base hardware address).
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    -# myDeepSleep2 - Handles entering and exiting system Deep Sleep and is 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 70


 420:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       associated with peripheral HW2_address.
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * We set things up so that the myDeepSleep1 and myDeepSleep2 callbacks do 
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * nothing while entering the low power mode (skip on 
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_SKIP_BEFORE_TRANSITION - 
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * see \ref group_syspm_cb_function_implementation in 
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_config_consideration).
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Skipping the actions while entering low power might be useful if you need 
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to save time while switching low power modes. This is because the callback
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * function with a skipped mode is not even called avoiding the call and return
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * overhead.
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Let's first declare the callback functions. Each gets the pointer to the 
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref cy_stc_syspm_callback_params_t structure as the argument.
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Callback_Func_Declaration
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Now we setup the \ref cy_stc_syspm_callback_params_t structures that we will
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * pass to the callback functions. Note that for the myDeepSleep1 and 
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * myDeepSleep2 callbacks we also pass pointers to the peripherals related to 
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * that callback (see <a href="..\..\pdl_user_guide.pdf">PDL Design</a> section 
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to learn about base hardware addresses). 
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The configuration considerations related to this structure are described 
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * in \ref group_syspm_cb_parameters in \ref group_syspm_cb_config_consideration.
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Callback_Params_Declaration
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Now we setup the actual callback configuration structures. Each of these 
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * contains, among the other fields, the address of the 
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref cy_stc_syspm_callback_params_t we just set up. We will use the callback 
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * configuration structures later in the code to register the callbacks in the 
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * SysPm driver. Again, we set things up so that the myDeepSleep1 and 
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * myDeepSleep1 callbacks do nothing while entering the low power mode 
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (skip on CY_SYSPM_SKIP_BEFORE_TRANSITION) - see 
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_function_implementation in 
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_config_consideration.
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Callback_Structure_Declaration
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Note that in each case the last two fields are NULL. These are fields used by 
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the SysPm driver to set up the linked list of callback functions.
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The callback structures are now defined and allocated in the user's 
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * memory space:
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \image html syspm_2_10_before_registration.png
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Now we implement the callback functions. See 
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_function_implementation in 
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_config_consideration for the instructions on how the 
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callback functions should be implemented.
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Callback_Func_Implementation
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Finally, we register the callbacks so that the SysPm driver knows about them. 
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The order in which the callbacks will be called depends upon the order in 
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * which the callbacks are registered. If there are no callbacks registered, 
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the device just executes the power mode transition.
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 71


 477:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Callbacks that reconfigure global resources, such as clock frequencies, should
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * be registered last. They then modify global resources as the final step before
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * entering the low power mode, and restore those resources first, as the system
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * returns from low power mode.
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_RegisterCallback
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * We are done configuring three callbacks. Now the SysPm driver will execute the
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callbacks appropriately whenever there is a call to a power mode transition 
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * function: \ref Cy_SysPm_CpuEnterSleep(), \ref Cy_SysPm_CpuEnterDeepSleep(), 
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterUlp(), \ref Cy_SysPm_SystemEnterLp(), and 
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterHibernate().
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note On a wakeup from hibernate the device goes through a reset, so the 
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callbacks with CY_SYSPM_AFTER_TRANSITION are not executed. Refer to 
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterHibernate() for more detail.
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to \ref group_syspm_cb_unregistering in 
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_config_consideration to learn what to do if you need to 
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * remove the callback from the linked list. You might want to unregister the 
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callback for debug purposes.
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to \ref group_syspm_cb_flow in \ref group_syspm_cb_config_consideration 
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to learn about how the SysPm processes the callbacks.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_cb_config_consideration Callback Configuration Considerations
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_cb_parameters Callback Function Parameters
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The <b>callbackParams</b> parameter of the callback function is a 
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref cy_stc_syspm_callback_params_t structure. The second parameter 
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (<b>mode</b>) is for internal use. In the example code we used a 
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * dummy value CY_SYSPM_CHECK_READY to eliminate compilation errors associated 
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * with the enumeration. The driver sets the <b>mode</b> field to the correct 
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * value when calling the callback functions (the mode is referred to as step in 
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the \ref group_syspm_cb_function_implementation). The callback function reads 
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the value and executes code based on the mode set by the SysPm driver. 
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The <b>base</b> and <b>context</b> fields are optional and can be NULL. 
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Some drivers require a base hardware address and context to store information 
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * about the mode transition. If your callback routine requires access to the 
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * driver registers or context, provide those values 
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (see <a href="..\..\pdl_user_guide.pdf">PDL Design</a> section 
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to learn about Base Hardware Address). Be aware of MISRA warnings if these 
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * parameters are NULL.
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_cb_structures Callback Function Structure
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For each callback, provide a \ref cy_stc_syspm_callback_t structure. Some 
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * fields in this structure are maintained by the driver. Use NULL for 
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <b>prevItm</b> and <b>nextItm</b>. The driver uses these fields to build a 
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * linked list of callback functions.
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning The Cy_SysPm_RegisterCallback() function stores a pointer to the 
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * cy_stc_syspm_callback_t structure. Do not modify elements of the 
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * cy_stc_syspm_callback_t structure after the callback is registered. 
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * You are responsible for ensuring that the structure remains in scope. 
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Typically the structure is declared as a global or static variable, or as a 
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * local variable in the main() function.
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 72


 534:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_cb_function_implementation Callback Function Implementation
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Every callback function should handle four possible steps (referred to as 
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * "mode") defined in \ref cy_en_syspm_callback_mode_t :
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    * CY_SYSPM_CHECK_READY - Check if ready to enter a power mode.
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    * CY_SYSPM_BEFORE_TRANSITION - The actions to be done before entering 
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *      the low power mode.
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    * CY_SYSPM_AFTER_TRANSITION - The actions to be done after exiting the 
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *      low power mode.
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    * CY_SYSPM_CHECK_FAIL - Roll back any actions performed in the callback 
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *      executed previously with CY_SYSPM_CHECK_READY.
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * A callback function can skip steps (see \ref group_syspm_skip_callback_modes).
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * In our example myDeepSleep1 and myDeepSleep2 callbacks do nothing while 
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * entering the low power mode (skip on CY_SYSPM_BEFORE_TRANSITION). If there is
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * anything preventing low power mode entry - return CY_SYSPM_FAIL in response to
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_CHECK_READY in your callback implementation. Note that the callback 
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * should return CY_SYSPM_FAIL only in response to CY_SYSPM_CHECK_READY. The 
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callback function should always return CY_SYSPM_PASS for other modes: 
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_CHECK_FAIL, CY_SYSPM_BEFORE_TRANSITION, and CY_SYSPM_AFTER_TRANSITION
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (see \ref group_syspm_cb_flow).
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_cb_flow Callbacks Execution Flow
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This section explains what happens during a power transition, when callbacks 
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * are implemented and set up correctly. The following discussion assumes:
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * All required callback functions are defined and implemented
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * All cy_stc_syspm_callback_t structures are filled with required values
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * All callbacks are successfully registered 
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * User calls one of the power mode transition functions: \ref Cy_SysPm_CpuEnterSleep(), 
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_CpuEnterDeepSleep(), \ref Cy_SysPm_SystemEnterUlp(), 
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterLp(), or \ref Cy_SysPm_SystemEnterHibernate(). 
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * It calls each callback with the mode set to CY_SYSPM_CHECK_READY. This 
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * triggers execution of the code for that mode inside of each user callback.
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The intent of CY_SYSPM_CHECK_READY is to only signal if the resources is ready
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to transition. Ideally, no transition changes should be made at this time. 
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * In some cases a small change may be required. For example a communication 
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * resource callback may set a flag telling firmware not to start any new 
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * transition.
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If that process is successful for all callbacks, then 
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_ExecuteCallback() calls each callback with the mode set to 
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_BEFORE_TRANSITION. This triggers execution of the code for that mode 
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * inside each user callback. We then enter the low power mode after all callback
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * are executes.
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When exiting the low power mode, the SysPm driver executes 
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_ExecuteCallback() again. This time it calls each callback in 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * reverse order, with the mode set to CY_SYSPM_AFTER_TRANSITION. This triggers 
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * execution of the code for that mode inside each user callback. The final 
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * execution of callbacks depends on the low power mode in which callbacks were 
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * called:
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * For CPU Sleep or Deep Sleep power modes, the CY_SYSPM_AFTER_TRANSITION mode 
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   is called after the CPU wakes from Sleep or Deep Sleep.
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 73


 591:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * For system Hibernate, the CY_SYSPM_AFTER_TRANSITION mode is not executed 
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   because the device reboots after the wakeup from the Hibernate.
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * For system LP and ULP modes, after the CY_SYSPM_AFTER_TRANSITION mode was 
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   called the system remains in the new power mode: LP or ULP.
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * A callback can return CY_SYSPM_FAIL only while executing the 
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_CHECK_READY mode. If that happens, then the remaining callbacks are 
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * not executed. Any callbacks that have already executed are called again, in 
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * reverse order, with CY_SYSPM_CHECK_FAIL. This allows the system to return to 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the previous state. If a callback returns a fail then any of the functions 
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (\ref Cy_SysPm_CpuEnterSleep(), \ref Cy_SysPm_CpuEnterDeepSleep(), 
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterUlp(), \ref Cy_SysPm_SystemEnterLp(), or 
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterHibernate()) that attempt to switch the device into 
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * a low power mode will also return CY_SYSPM_FAIL.
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Callbacks that reconfigure global resources, such as clock frequencies, 
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * should be registered last. They then modify global resources as the final 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * step before entering the low power mode, and restore those resources first, 
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * as the system returns from low power mode.
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_cb_unregistering Callback Unregistering
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Unregistering the callback might be useful when you need to dynamically manage
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the callbacks.
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_UnregisterCallback
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The callback structures after myDeepSleep2 callback is unregistered:
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \image html syspm_2_10_unregistration.png
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \section group_syspm_definitions Definitions
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <table class="doxtable">
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <th>Term</th>
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <th>Definition</th>
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>LDO</td>
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Low dropout linear regulator. The functions that manage this 
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         block are grouped as \ref group_syspm_functions_ldo under 
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         \ref group_syspm_functions_core_regulators</td>
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>SIMO Buck</td>
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Single inductor multiple Output Buck regulator, referred as 
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         "Buck regulator" throughout the documentation. The functions that 
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         manage this block are grouped as \ref group_syspm_functions_buck under
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         \ref group_syspm_functions_core_regulators</td>
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>SISO Buck</td>
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Single inductor single output Buck regulator, referred as 
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         "Buck regulator" throughout the documentation. The functions that 
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         manage this block are grouped as \ref group_syspm_functions_buck under
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 74


 648:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         \ref group_syspm_functions_core_regulators</td>
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>PMIC</td>
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Power management integrated circuit. The functions that manage this 
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         block are grouped as \ref group_syspm_functions_pmic</td>
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>LP</td>
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>System low power mode. See the \ref group_syspm_switching_into_lp 
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         section for details.</td>
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>ULP</td>
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>System ultra low power mode. See the 
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         \ref group_syspm_switching_into_ulp section for details.</td>
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * </table>
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \section group_syspm_section_more_information More Information
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For more information on the SysPm driver,
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * refer to the technical reference manual (TRM).
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \section group_syspm_MISRA MISRA-C Compliance
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The SysPm driver does not have any specific deviations.
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \section group_syspm_changelog Changelog
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <table class="doxtable">
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td rowspan="6">4.0</td>
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          Flattened the organization of the driver source code into the single source directory an
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Driver library directory-structure simplification.</td>
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          Changed power modes names. See \ref group_syspm_system_power_modes.
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          Renamed the following functions: 
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_Sleep to Cy_SysPm_CpuEnterSleep
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_DeepSleep to Cy_SysPm_CpuEnterDeepSleep
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_Hibernate to Cy_SysPm_SystemEnterHibernate
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_SleepOnExit to Cy_SysPm_CpuSleepOnExit
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_EnterLowPowerMode to Cy_SysPm_SystemSetMinRegulatorCurrent
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_ExitLowPowerMode to Cy_SysPm_SystemSetNormalRegulatorCurrent
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_IsLowPower to Cy_SysPm_IsSystemUlp
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          For all renamed functions, added BWC macros to simplify migration.
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Device power modes simplification</td>
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 75


 705:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Added the following functions:
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_LdoSetMode
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_LdoGetMode
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_WriteVoltageBitForFlash
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_SaveRegisters
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_RestoreRegisters
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_CpuSendWakeupEvent
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_SystemIsMinRegulatorCurrentSet
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_SystemEnterLp
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_SystemEnterUlp
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_IsSystemLp
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Added new functionality to configure device power modes</td>
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td> 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          Callback mechanism changes:
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Removed the limitation for numbers of registered callbacks. Previously it 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            was possible to register up to 32 callbacks. Now the maximum registered 
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            callbacks is not limited by the SysPm driver.
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Internal enhancement in callback execution flow.
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - <b>Changes with BWC issues</b>:
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            -# Removed the <b>mode</b> element from cy_stc_syspm_callback_params_t
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *               structure. Now this element is a separate parameter in the 
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *               callback function.
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            -# Changed the interface of the callback function, 
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *               added the cy_en_syspm_callback_mode_t mode parameter:
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *               - was cy_en_syspm_status_t FuncName (cy_stc_syspm_callback_params_t *callbackParams
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *               - now cy_en_syspm_status_t FuncName (cy_stc_syspm_callback_params_t *callbackParams
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *                 cy_en_syspm_callback_mode_t mode);
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Callback mechanism enhancements</td>
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Added register access layer. Use register access macros instead
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         of direct register access using dereferenced pointers.</td>
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Makes register access device-independent, so that the PDL does 
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         not need to be recompiled for each supported part number.</td>
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Added \ref group_syspm_migration_guide_for_syspm_4_0.</td>
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Provided a guidance for migrating to the latest SysPm driver version</td>
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td rowspan="2">3.0</td>
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed three functions:
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_Cm4IsLowPower
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_Cm0IsLowPower
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_IoFreeze
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Removed the following macros:
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - CY_SYSPM_STATUS_CM0_LOWPOWER
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - CY_SYSPM_STATUS_CM4_LOWPOWER
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Removed the two functions Cy_SysPm_Cm4IsLowPower, 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 76


 762:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Cy_SysPm_Cm0IsLowPower because low power mode is related to the 
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         device and not to the CPU.
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         The function Cy_SysPm_IsSystemUlp must be used instead of these two 
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         functions.
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Removed Cy_SysPm_IoFreeze because the are no known use cases with IOs 
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         freeze in power modes, except Hibernate. In Hibernate power mode, the
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         IOs are frozen automatically.
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Corrected the syspm callback mechanism behavior. Now callbacks with 
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         CY_SYSPM_AFTER_TRANSITION mode are executed from the last registered
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         to the first registered. Previously callbacks with 
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         CY_SYSPM_AFTER_TRANSITION mode were executed from last executed to 
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         the first registered.
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Corrected the syspm callbacks execution sequence</td>
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>2.21</td>
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed saving/restoring the SysClk measurement counters while 
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         in Deep Sleep routine
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed possible corruption of SysClk measurement counters if the 
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         core wakes up from the Deep Sleep.
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>2.20</td>
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td> \n
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Added support for changing core voltage when the protection context
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            is other that zero. Such support is available only for devices 
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            that support modifying registers via syscall.
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * For preproduction PSoC 6 devices the changing core voltage
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            is prohibited when the protection context is other than zero.
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Updated the following functions. They now have a 
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            \ref cy_en_syspm_status_t return value and use a syscall:
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            - Cy_SysPm_LdoSetVoltage
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            - Cy_SysPm_BuckSetVoltage1
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            - Cy_SysPm_BuckEnable
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            No backward compatibility issues.
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Added new CY_SYSPM_CANCELED element in 
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            the \ref cy_en_syspm_status_t.
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Documentation updates.
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Added warning that
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_PmicDisable(CY_SYSPM_PMIC_POLARITY_LOW) is not 
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            supported by hardware.
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Added support for changing the core voltage in protection context 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 77


 819:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         higher than zero (PC > 0).
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Documentation update and clarification
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>2.10</td>
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td> \n
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Changed names for all Backup, Buck-related functions, defines, 
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            and enums
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Changed next power mode function names:
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_EnterLowPowerMode
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_ExitLpMode
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_SetHibWakeupSource
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_ClearHibWakeupSource
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_GetIoFreezeStatus
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Changed following enumeration names:
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            cy_en_syspm_hib_wakeup_source_t
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            cy_en_syspm_simo_buck_voltage1_t
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            cy_en_syspm_simo_buck_voltage2_t
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Updated Power Modes documentation section
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Added Low Power Callback Managements section
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Documentation edits 
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td> \n
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Improvements made based on usability feedback
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Documentation update and clarification
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>2.0</td>
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Enhancement and defect fixes:
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         * Added input parameter(s) validation to all public functions
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         * Removed "_SysPm_" prefixes from the internal functions names
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         * Changed the type of elements with limited set of values, from 
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           uint32_t to enumeration
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         * Enhanced syspm callback mechanism
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         * Added functions to control:
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           * Power supply for the Vddbackup
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           * Supercapacitor charge
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           * Vddbackup measurement by ADC
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td></td>
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>1.0</td>
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Initial version</td>
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td></td>
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * </table>
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_migration_guide_for_syspm_4_0 Migration Guide: Moving to SysPm v4.0
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This section provides a guideline to migrate from v2.21 to v4.0 of the SysPm 
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * driver.
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_migration_into_4_0_intro Introduction
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 78


 876:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If your application currently uses SysPm v2.21 APIs, you must
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * migrate to SysPm v4.0 so that your application continues to operate.
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Take a few minutes to review the following information:
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - The APIs related to PSoC 6 \ref group_syspm_power_modes are changed. Old 
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   power modes APIs function names are now deprecated and should not be used 
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   in new applications.
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - The \ref group_syspm_cb mechanism is changed. The mode element is removed 
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   from cy_stc_syspm_callback_params_t structure. Now this element is a 
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   separate parameter in the callback function.
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_migration_into_4_0_names Migrating to new power modes APIs.
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The table below shows the new APIs names that should be used in the 
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * application instead of old names:
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <table class="doxtable">
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr><th>SysPm v2.21 API name</th><th>SysPm v4.0 API name</th><th>Comment</th></tr>
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_Sleep</td>
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_CpuEnterSleep</td>
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Renamed, no functional changes</td>
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_DeepSleep</td>
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_CpuEnterDeepSleep</td>
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Renamed, no functional changes</td>
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_Hibernate</td>
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_SystemEnterHibernate</td>
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Renamed, no functional changes</td>
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_SleepOnExit</td>
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_CpuSleepOnExit</td>
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Renamed, no functional changes</td>
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_IsLowPower</td>
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_IsSystemUlp</td>
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Now this function checks whether the device is in ULP mode</td>
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_EnterLowPowerMode</td>
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_SystemSetMinRegulatorCurrent</td>
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>The low power active mode does not exist anymore. 
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         The \ref group_syspm_system_reg_curr_mode is implemented instead </td>
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </tr>
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_ExitLowPowerMode</td>
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_SystemSetNormalRegulatorCurrent</td>
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>The low power active mode does not exist anymore. 
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         The \ref group_syspm_system_reg_curr_mode is implemented instead</td>
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_Cm4IsLowPower</td>
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 79


 933:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed</td>
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>This function is removed because low power mode is related to the system
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         and not to the CPU</td>
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_Cm0IsLowPower</td>
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed</td>
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>This function is removed because low power mode is related to the system
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         and not to the CPU</td>
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_IoFreeze</td>
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed</td>
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>This function is removed because there are no known use cases to
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         freeze in power modes other than Hibernate</td>
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * </table>
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * In addition to renamed power modes APIs, the following defines and enum 
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * elements names are changed:
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <table class="doxtable">
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr><th>SysPm v2.21 defines</th><th>SysPm v4.0 defines</th><th>Comment</th></tr>
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_ENTER_LP_MODE</td>
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_ULP</td>
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>The \ref cy_en_syspm_callback_type_t element is renamed to align 
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         callback types names to new power modes names</td>
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_EXIT_LP_MODE</td>
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_LP</td>
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>The \ref cy_en_syspm_callback_type_t element is renamed to align 
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         callback types names to new power modes names</td>
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_STATUS_SYSTEM_LOWPOWER</td>
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_STATUS_SYSTEM_ULP</td>
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Status define, renamed to align new power modes names 
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         and abbreviations</td>
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * </table>
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_migration_into_4_0_callbacks Migrating to SysPm v4.0 callbacks
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Review this section if your application is using the syspm callback mechanism.
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To migrate to SysPm v4.0 callbacks you need to perform the following steps:
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# Remove mode element from all \ref cy_stc_syspm_callback_params_t 
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    structures defined in your application. In SysPm v2.21 this structure is:
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_stc_syspm_callback_params_t deepSleepParam1 = 
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    {
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        CY_SYSPM_CHECK_READY, 
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        &HW1_address,
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        &context
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    };
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 80


 990:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    In SysPm v4.0 this structure should be:
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_stc_syspm_callback_params_t deepSleepParam1 = 
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    {
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        &HW1_address,
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        &context
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    };
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# Update all defined syspm callback function prototypes to have two 
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    parameters instead of one. The SysPm v2.21 callback function prototype is:
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_en_syspm_status_t Func1 (cy_stc_syspm_callback_params_t *callbackParams);
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    The SysPm v4.0 callback function prototype should be:
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_en_syspm_status_t Func1 (cy_stc_syspm_callback_params_t *callbackParams, cy_en_syspm_callba
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# Change the syspm callback function implementation to not use a mode
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    value as an element of the callbackParams structure, but, as separate 
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    function parameter:
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    SysPm v2.21 callback function implementation:
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_en_syspm_status_t Func1(cy_stc_syspm_callback_params_t *callbackParams)
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    {
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        cy_en_syspm_status_t retVal = CY_SYSPM_FAIL;
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        switch(callbackParams->mode)
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        {
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            case CY_SYSPM_CHECK_READY:
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            ...
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        }
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        return (retVal);
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    }
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    SysPm v4.0 callback function implementation:
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_en_syspm_status_t Func1(cy_stc_syspm_callback_params_t *callbackParams, cy_en_syspm_callbac
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    {
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        cy_en_syspm_status_t retVal = CY_SYSPM_FAIL;
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        switch(mode)
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        {
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            case CY_SYSPM_CHECK_READY:
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            ...
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        }
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        return (retVal);
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    }
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * After the changes above are done, you have successfully migrated to SysPm v4.0.
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Do not forget to review newly added functionality for SysPm v4.0 in the 
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_changelog.
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_macros Macros
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_functions Functions
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 81


1047:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     \defgroup group_syspm_functions_general        General
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_power          Power Modes
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_power_status   Power Status
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_iofreeze       I/Os Freeze
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_core_regulators    Core Voltage Regulation 
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \{
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     \defgroup group_syspm_functions_ldo      LDO
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     \defgroup group_syspm_functions_buck     Buck
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \}
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_pmic       PMIC
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_backup     Backup Domain
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_callback   Low Power Callbacks
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \}
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_data_structures Data Structures
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_data_enumerates Enumerated Types
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #if !defined (CY_SYSPM_H)
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_H
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #include <stdbool.h>
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #include <stddef.h>
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #include "cy_device.h"
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #include "cy_device_headers.h"
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #include "cy_syslib.h"
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #ifdef __cplusplus
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** extern "C" {
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #endif
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       Register Constants
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_macros
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** Driver major version */
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_DRV_VERSION_MAJOR       4
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** Driver minor version */
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_DRV_VERSION_MINOR       0
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** SysPm driver identifier */
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_ID                      (CY_PDL_DRV_ID(0x10U))
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       Internal Defines
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \cond INTERNAL */
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 82


1104:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_SetHibernateWakeupSource() and for Cy_SysPm_ClearHibern
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_WAKE_UP_SOURCE_VALID(wakeupSource)   (0UL == ((wakeupSource) & \
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((uint32_t) ~(CY_SYSPM_HIB_WAKEUP_SOURSE_M
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_PmicDisable() function */
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_POLARITY_VALID(polarity)            (((polarity) == CY_SYSPM_PMIC_POLARITY_LOW)
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((polarity) == CY_SYSPM_PMIC_POLARITY_HIGH
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_BuckSetVoltage1() function */
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_BUCK_VOLTAGE1_VALID(voltage)        (((voltage) == CY_SYSPM_BUCK_OUT1_VOLTAGE_0
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT1_VOLTAGE_1
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_BuckSetVoltage2() function */
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_BUCK_VOLTAGE2_VALID(voltage)        (((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_BuckIsOutputEnabled() function */
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_BUCK_OUTPUT_VALID(output)           (((output) == CY_SYSPM_BUCK_VBUCK_1) || \
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((output) == CY_SYSPM_BUCK_VRF))
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_LdoSetVoltage() function */
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_LDO_VOLTAGE_VALID(voltage)          (((voltage) == CY_SYSPM_LDO_VOLTAGE_0_9V) |
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_LDO_VOLTAGE_1_1V))
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_ExecuteCallback() function */
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_CALLBACK_TYPE_VALID(type)           (((type) == CY_SYSPM_SLEEP) || \
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((type) == CY_SYSPM_DEEPSLEEP) || \
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((type) == CY_SYSPM_HIBERNATE) || \
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((type) == CY_SYSPM_ULP) || \
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((type) == CY_SYSPM_LP))
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_ExecuteCallback() function */
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_CALLBACK_MODE_VALID(mode)           (((mode) == CY_SYSPM_CHECK_READY) || \
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((mode) == CY_SYSPM_CHECK_FAIL) || \
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((mode) == CY_SYSPM_BEFORE_TRANSITION) || 
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((mode) == CY_SYSPM_AFTER_TRANSITION))
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_CpuEnterSleep() and for Cy_SysPm_CpuEnterDeepSleep() fu
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_WAIT_FOR_VALID(waitFor)             (((waitFor) == CY_SYSPM_WAIT_FOR_INTERRUPT)
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((waitFor) == CY_SYSPM_WAIT_FOR_EVENT))
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_BackupSetSupply() function */
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_VDDBACKUP_VALID(vddBackControl)      (((vddBackControl) == CY_SYSPM_VDDBACKUP_D
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                           ((vddBackControl) == CY_SYSPM_VDDBACKUP_V
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                           
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_BackupSuperCapCharge() function */
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_SC_CHARGE_KEY_VALID(key)            (((key) == CY_SYSPM_SC_CHARGE_ENABLE) || \
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((key) == CY_SYSPM_SC_CHARGE_DISABLE))
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_LdoSetMode() function */
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_LDO_MODE_VALID(key)            (((mode) == CY_SYSPM_LDO_MODE_DISABLED) || \
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 83


1161:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                     ((mode) == CY_SYSPM_LDO_MODE_NORMAL) || \
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                     ((mode) == CY_SYSPM_LDO_MODE_MIN))
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_WriteVoltageBitForFlash() function */
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_BIT_FOR_FLASH_VALID(value)     (((value) == CY_SYSPM_FLASH_VOLTAGE_BIT_ULP) || 
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                     ((value) == CY_SYSPM_FLASH_VOLTAGE_BIT_LP))
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define of the unlock value for the PMIC functions */
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_PMIC_UNLOCK_KEY                    (0x3AU)
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define of the first wakeup pin bit used in the
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_SetHibernateWakeupSource() function
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN0_POS                (1UL)
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define of the second wakeup pin bit 
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN1_POS                (2UL)
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define of the first LPComparator bit 
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP0_POS             (4UL)
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define for the second LPComparator bit 
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP1_POS             (8UL)
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define of the first LPComparator value 
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP0_MASK    (_VAL2FLD(SRSS_PWR_HIBERNATE_MASK_HIBPIN, CY_SYSPM_HIB_
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define of the second LPComparator value 
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP1_MASK    (_VAL2FLD(SRSS_PWR_HIBERNATE_MASK_HIBPIN, CY_SYSPM_HIB_
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define of the first wake-up pin value 
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN0_MASK    (_VAL2FLD(SRSS_PWR_HIBERNATE_MASK_HIBPIN, CY_SYSPM_HIB_WAK
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define of the second wake-up pin value used 
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * in the Cy_SysPm_SetHibernateWakeupSource() function
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN1_MASK    (_VAL2FLD(SRSS_PWR_HIBERNATE_MASK_HIBPIN, CY_SYSPM_HIB_WAK
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define for the first LPComparator polarity configuration */
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 84


1218:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP0_POLARITY_HIGH_MASK    \
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                   (_VAL2FLD(SRSS_PWR_HIBERNATE_POLARITY_HIBPIN, CY_SYSPM_HIB_WAKEUP
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define for the second LPComparator polarity configuration */
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP1_POLARITY_HIGH_MASK    \
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                   (_VAL2FLD(SRSS_PWR_HIBERNATE_POLARITY_HIBPIN, CY_SYSPM_HIB_WAKEUP
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define for the first wake-up pin polarity configuration */
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN0_POLARITY_HIGH_MASK    \
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                   (_VAL2FLD(SRSS_PWR_HIBERNATE_POLARITY_HIBPIN, CY_SYSPM_HIB_WAKEUP
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define for the second wake-up pin polarity configuration */
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN1_POLARITY_HIGH_MASK    \
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                   (_VAL2FLD(SRSS_PWR_HIBERNATE_POLARITY_HIBPIN, CY_SYSPM_HIB_WAKEUP
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Internal macro of all possible wakeup sources from hibernate power mode */
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_SOURSE_MASK    (CY_SYSPM_HIBERNATE_LPCOMP0_HIGH | CY_SYSPM_HIBERNATE_LP
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                             CY_SYSPM_HIBERNATE_RTC_ALARM    | CY_SYSPM_HIBERNATE_WD
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                             CY_SYSPM_HIBERNATE_PIN0_HIGH    | CY_SYSPM_HIBERNATE_PI
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* The mask for low power modes the power circuits (POR/BOD, Bandgap 
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *  reference, Reference buffer, Current reference) when active core regulator is
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *  LDO
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_PWR_CIRCUITS_LPMODE_ACTIVE_LDO_MASK    (SRSS_PWR_CTL_LINREG_LPMODE_Msk | CY_SYSPM_
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* The mask for low power modes the power circuits (POR/BOD, Bandgap 
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *  reference, Reference buffer, Current reference) when active core regulator is
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *  Buck
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_PWR_CIRCUITS_LPMODE_ACTIVE_BUCK_MASK    (SRSS_PWR_CTL_PORBOD_LPMODE_Msk |\
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                           SRSS_PWR_CTL_ACT_REF_DIS_Msk |\
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                           SRSS_PWR_CTL_VREFBUF_LPMODE_Msk |\
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                           SRSS_PWR_CTL_IREF_LPMODE_Msk)
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \endcond */
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_return_status The Power Mode Status Defines
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Defines for the CPU and system power modes status.
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM4 is in CPU Active mode */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM4_ACTIVE       (0x01U)
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM4 is in CPU Sleep mode */
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM4_SLEEP        (0x02U)
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM4 is in CPU Deep Sleep mode */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM4_DEEPSLEEP    (0x04U)
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM0p is CPU Active mode */
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM0_ACTIVE       ((uint32_t) 0x01U << 8U)
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM0p is in CPU Sleep mode */
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM0_SLEEP        ((uint32_t) 0x02U << 8U)
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 85


1275:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM0p is in CPU Deep Sleep mode */
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM0_DEEPSLEEP    ((uint32_t) 0x04U << 8U)
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The system is Low Power mode */
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_SYSTEM_LP        (0x80U)
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The system is in Ultra Low Power mode */
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_SYSTEM_ULP       ((uint32_t) 0x08U << 8U)
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_return_status */
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_macros */
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       Configuration Structures
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_data_enumerates
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The SysPm function return value status definitions. */
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_SUCCESS        = 0x0U,                                         /**< Successful. */
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BAD_PARAM      = CY_SYSPM_ID | CY_PDL_STATUS_ERROR | 0x01U,    /**< One or more invali
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_TIMEOUT        = CY_SYSPM_ID | CY_PDL_STATUS_ERROR | 0x02U,    /**< A time-out occurre
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_INVALID_STATE  = CY_SYSPM_ID | CY_PDL_STATUS_ERROR | 0x03U,    /**< The operation is n
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                                                  improper state. */
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_CANCELED       = CY_SYSPM_ID | CY_PDL_STATUS_ERROR | 0x04U,    /**< Operation canceled
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_FAIL           = CY_SYSPM_ID | CY_PDL_STATUS_ERROR | 0xFFU     /**< Unknown failure. *
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_status_t;
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This enumeration is used to initialize the functions wait action. The wait actions can be - 
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * an interrupt or an event. Refer to the CMSIS for WFE and WFI instruction explanations.
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_WAIT_FOR_INTERRUPT,    /**< Wait for an interrupt. */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_WAIT_FOR_EVENT         /**< Wait for an event. */
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_waitfor_t;
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration is used to configure wakeup sources for the System Hibernate 
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   power mode.
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Wake on a low logic level for the LPComp0. */
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_LPCOMP0_LOW  = CY_SYSPM_HIB_WAKEUP_LPCOMP0_MASK,
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Wake on a high logic level for the LPComp0. */
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_LPCOMP0_HIGH = CY_SYSPM_HIB_WAKEUP_LPCOMP0_MASK | CY_SYSPM_HIB_WAKEUP_LPCOMP
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Wake on a low logic level for the LPComp1. */
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 86


1332:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_LPCOMP1_LOW  = CY_SYSPM_HIB_WAKEUP_LPCOMP1_MASK,
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Wake on a high logic level for the LPComp1. */
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_LPCOMP1_HIGH = CY_SYSPM_HIB_WAKEUP_LPCOMP1_MASK | CY_SYSPM_HIB_WAKEUP_LPCOMP
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure the RTC alarm as wakeup source. */
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_RTC_ALARM = SRSS_PWR_HIBERNATE_MASK_HIBALARM_Msk,
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure the WDT interrupt as wakeup source. */
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_WDT = SRSS_PWR_HIBERNATE_MASK_HIBWDT_Msk,
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure a low logic level for the first wakeup-pin. See device datasheet for specific pin
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_PIN0_LOW  = CY_SYSPM_HIB_WAKEUP_PIN0_MASK,
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure a high logic level for the first wakeup-pin. See device datasheet for specific pi
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_PIN0_HIGH = CY_SYSPM_HIB_WAKEUP_PIN0_MASK | CY_SYSPM_HIB_WAKEUP_PIN0_POLARIT
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure a low logic level for the second wakeup-pin. See device datasheet for specific pi
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_PIN1_LOW  = CY_SYSPM_HIB_WAKEUP_PIN1_MASK,
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure a high logic level for the second wakeup-pin. See device datasheet for specific p
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_PIN1_HIGH = CY_SYSPM_HIB_WAKEUP_PIN1_MASK | CY_SYSPM_HIB_WAKEUP_PIN1_POLARIT
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_hibernate_wakeup_source_t;
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration is used to select LDO regulator output voltage. */
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_VOLTAGE_ULP  = 0U,    /**< System ULP nominal LDO voltage. 
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                             See device datasheet for specific voltage. */
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_VOLTAGE_LP   = 1U,    /**< System LP nominal LDO voltage.
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                             See device datasheet for specific voltage. */
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_VOLTAGE_0_9V = 0U,    /**< 0.9 V nominal LDO voltage */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_VOLTAGE_1_1V = 1U     /**< 1.1 V nominal LDO voltage */
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_ldo_voltage_t;
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration is used to select the LDO regulator operating mode. */
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_MODE_DISABLED = 0U,    /**< Disables the LDO. */
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_MODE_NORMAL   = 1U,    /**< Sets normal current mode. See device datasheet for 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                              specific maximum current limit. */
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_MODE_MIN      = 2U     /**< Sets minimum current mode. See device datasheet for 
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                              specific  current limit.  */
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_ldo_mode_t;
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *  This enumeration is used to select the output voltage for the Buck regulator output 1.
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT1_VOLTAGE_ULP  = 0x02U,    /**< System ULP nominal Buck voltage. 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                      See device datasheet for specific voltage. */
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT1_VOLTAGE_LP   = 0x05U,    /**< LP nominal Buck voltage. 
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                      See device datasheet for specific voltage. */
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT1_VOLTAGE_0_9V = 0x02U,    /**< 0.9 V nominal Buck voltage */
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT1_VOLTAGE_1_1V = 0x05U     /**< 1.1 V nominal Buck voltage */
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_buck_voltage1_t;
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 87


1389:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration is used to select the Buck regulator outputs. */
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_VBUCK_1 = 0x0U,    /**< Buck output 1 Voltage (Vbuck1). Typically used to 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                           supply the PSoC digital core logic. */
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_VRF                /**< Buck out 2 Voltage (Vbuckrf). Typically used to 
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                           supply the BLE radio logic. */
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_buck_out_t;
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This enumeration is used to select the output voltage for the Buck regulator
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * output 2, which can source the BLE radio.
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_15V = 0U,    /**< 1.15 V nominal voltage. */
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_2V  = 1U,    /**< 1.20 V nominal voltage. */
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_25V = 2U,    /**< 1.25 V nominal voltage. */
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_3V  = 3U,    /**< 1.3 V nominal voltage.  */
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_35V = 4U,    /**< 1.35 V nominal voltage. */
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_4V  = 5U,    /**< 1.4 V nominal voltage. */
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_45V = 6U,    /**< 1.45 V nominal voltage. */
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_5V  = 7U     /**< 1.5 V nominal voltage. */
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_buck_voltage2_t;
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This enumeration is used to set the polarity for the PMIC input. The PMIC output is 
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * automatically enabled when the configured polarity of the PMIC input and the logic level
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * driven to the pmic_wakeup_in pin match.
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning 
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Do not use CY_SYSPM_PMIC_POLARITY_LOW as it is not supported by hardware.
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_PMIC_POLARITY_LOW   = 0U,    /**< Set active low logic level for the PMIC input. */
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_PMIC_POLARITY_HIGH  = 1U     /**< Set active high logic level for the PMIC input. */
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_pmic_wakeup_polarity_t;
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration selects Vbackup or Vddd to supply Vddbackup. */
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_VDDBACKUP_DEFAULT         = 0U,    /**< Logic automatically selects Vddd if present or
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                      Vbackup if Vddd is not present to supply Vddba
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_VDDBACKUP_VBACKUP         = 2U     /**< Sets only Vbackup to supply Vddbackup */
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_vddbackup_control_t;
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration enables supercapacitor charging. */
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_SC_CHARGE_ENABLE     = 0x3CU,    /**< Enables supercapacitor charging */
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_SC_CHARGE_DISABLE    = 0x00U     /**< Disables supercapacitor charging */
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_sc_charge_key_t;
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration configures the flash voltage bit for different system power modes. */
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 88


1446:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_FLASH_VOLTAGE_BIT_LP  = 0U,    /**< Set the flash voltage bit for system LP mode */
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_FLASH_VOLTAGE_BIT_ULP = 1U,    /**< Set the flash voltage bit for system ULP mode */
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_flash_voltage_bit_t;
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This enumeration is used to select the low power mode for which the
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * appropriate registered callback handler will be executed. For example,
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the registered callback of the type CY_SYSPM_SLEEP will be executed while
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * switching into the Sleep power mode.
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_SLEEP      = 0U,    /**< The Sleep enum callback type */
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_DEEPSLEEP  = 1U,    /**< The Deep Sleep enum callback type */
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE  = 2U,    /**< The Hibernate enum callback type */
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LP         = 3U,    /**< The Low Power enum callback type */
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_ULP        = 4U     /**< The Ultra Low Power enum callback type */
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_callback_type_t;
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration specifies the associated callback mode. This enum defines the callback mode. *
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_CHECK_READY        = 0x01U,    /**< Callbacks with this mode are executed before enter
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  low power mode. The purpose of his callback functi
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  if the device is ready to enter the low power mode
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_CHECK_FAIL         = 0x02U,    /**< Callbacks with this mode are executed after the CY
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  callbacks execution returns CY_SYSPM_FAIL. 
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  The callback with the CY_SYSPM_CHECK_FAIL mode sho
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  actions performed in the previously executed callb
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  CY_SYSPM_CHECK_READY */
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BEFORE_TRANSITION  = 0x04U,    /**< Callbacks with this mode are executed after the CY
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  callbacks execution returns CY_SYSPM_SUCCESS.
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  Performs the actions to be done before entering in
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  low power mode. */
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_AFTER_TRANSITION   = 0x08U     /**< Performs the actions to be done after exiting the 
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  if entered. */
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_callback_mode_t;
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_data_enumerates */
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_macros
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_skip_callback_modes Defines to skip the callbacks modes
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Defines for the SysPm callbacks modes that can be skipped during execution.
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For more information about callbacks modes, refer 
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to \ref cy_en_syspm_callback_mode_t.
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_SKIP_CHECK_READY                   (0x01U)   /**< Define to skip check ready mode 
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_SKIP_CHECK_FAIL                    (0x02U)   /**< Define to skip check fail mode i
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_SKIP_BEFORE_TRANSITION             (0x04U)   /**< Define to skip before transition
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_SKIP_AFTER_TRANSITION              (0x08U)   /**< Define to skip after transition 
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_skip_callback_modes */
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 89


1503:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_macros */
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_data_structures
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The structure contains syspm callback parameters */
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef struct
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     void *base;         /**< Base address of a HW instance, matches name of the driver in
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                              the API for the base address. Can be undefined if not required. Base a
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                              required for the SysPm driver as the device has only one set of power 
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     void *context;      /**< Context for the handler function. This item can be 
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                              skipped if not required. Can be undefined if not required. */
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_stc_syspm_callback_params_t;
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The type for syspm callbacks */
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef cy_en_syspm_status_t (*Cy_SysPmCallback) (cy_stc_syspm_callback_params_t *callbackParams, c
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** Structure with syspm callback configuration elements */
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef struct cy_stc_syspm_callback
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     Cy_SysPmCallback callback;                         /**< The callback handler function. */
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     cy_en_syspm_callback_type_t type;                  /**< The callback type, see \ref cy_en_syspm
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t skipMode;                                 /**< The mask of modes to be skipped during 
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             execution, see \ref group_syspm_skip_ca
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             corresponding callback mode won't execu
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             appropriate define is set. These values
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             If all modes are required to be execute
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             should be equal to zero. Skipping unnee
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             power mode transitions by skipping unne
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     cy_stc_syspm_callback_params_t *callbackParams;    /**< The address of a cy_stc_syspm_callback_
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             the callback is executed with these par
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     struct cy_stc_syspm_callback *prevItm;             /**< The previous list item. This element sh
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             defined, or defined as NULL. It is for 
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             usage to link this structure to the nex
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             structure. It will be updated during ca
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             registration. Do not modify this elemen
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     struct cy_stc_syspm_callback *nextItm;             /**< The next list item. This element should
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             defined, or defined as NULL. It is for 
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             link this structure to the previous reg
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             It will be updated during callback regi
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             modify this element at run-time. */
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_stc_syspm_callback_t;
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This internal structure stores non-retained registers in the system Deep Sleep
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   power mode. On wakeup from system Deep Sleep, these registers are restored.
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef struct
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_UDBIF_BANK_CTL_REG;    /**< UDB interface control register */
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 90


1560:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_MDCLK_EN_REG;    /**< UDB bank MDCLK_EN register */
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_MBCLK_EN_REG;    /**< UDB bank MBCLK_EN register */
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_BOTSEL_L_REG;    /**< UDB bank BOTSEL_L register */
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_BOTSEL_U_REG;    /**< UDB bank BOTSEL_U register */
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_QCLK_EN0_REG;    /**< UDB bank QCLK_EN0 register */
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_QCLK_EN1_REG;    /**< UDB bank QCLK_EN1 register */
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_QCLK_EN2_REG;    /**< UDB bank QCLK_EN2 register */
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_stc_syspm_backup_regs_t;
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_data_structures */
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_general
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_WriteVoltageBitForFlash(cy_en_syspm_flash_voltage_bit_t value);
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_SaveRegisters(cy_stc_syspm_backup_regs_t *regs);
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_RestoreRegisters(cy_stc_syspm_backup_regs_t const *regs);
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_general */
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_power_status
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsActive(void);
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsSleep(void);
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsDeepSleep(void);
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsActive(void);
1595:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsSleep(void);
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsDeepSleep(void);
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IsSystemLp(void);
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IsSystemUlp(void);
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** uint32_t Cy_SysPm_ReadStatus(void);
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_power_status */
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_power
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_CpuEnterSleep(cy_en_syspm_waitfor_t waitFor);
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_CpuEnterDeepSleep(cy_en_syspm_waitfor_t waitFor);
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_SystemEnterLp(void);
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_SystemEnterUlp(void);
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_SystemEnterHibernate(void);
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_SetHibernateWakeupSource(uint32_t wakeupSource);
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_ClearHibernateWakeupSource(uint32_t wakeupSource);
1615:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_SystemSetMinRegulatorCurrent(void);
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 91


1617:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_SystemSetNormalRegulatorCurrent(void);
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_SystemIsMinRegulatorCurrentSet(void);
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_CpuSleepOnExit(bool enable);
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_CpuSendWakeupEvent(void);
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_power */
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_iofreeze
1627:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_IoUnfreeze(void);
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IoIsFrozen(void);
1632:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_iofreeze */
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_ldo
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_LdoSetVoltage(cy_en_syspm_ldo_voltage_t voltage);
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_ldo_voltage_t Cy_SysPm_LdoGetVoltage(void);
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_LdoIsEnabled(void);
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_LdoSetMode(cy_en_syspm_ldo_mode_t mode);
1642:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_ldo_mode_t Cy_SysPm_LdoGetMode(void);
1643:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_ldo */
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_pmic
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicEnable(void);
1650:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicDisable(cy_en_syspm_pmic_wakeup_polarity_t polarity); 
1651:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_PmicIsEnabled(void);
1652:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicAlwaysEnable(void);
1653:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicEnableOutput(void);
1654:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicDisableOutput(void); 
1655:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_PmicIsOutputEnabled(void);
1656:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicLock(void);
1657:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicUnlock(void);
1658:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_PmicIsLocked(void);
1659:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_pmic */
1660:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1661:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1662:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_backup
1663:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1664:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1665:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BackupSetSupply(cy_en_syspm_vddbackup_control_t vddBackControl);
1666:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_vddbackup_control_t Cy_SysPm_BackupGetSupply(void);
1667:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BackupEnableVoltageMeasurement(void);
1668:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BackupDisableVoltageMeasurement(void);
1669:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BackupSuperCapCharge(cy_en_syspm_sc_charge_key_t key);
1670:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_backup */
1671:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1672:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1673:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_buck
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 92


1674:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1675:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1676:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_BuckEnable(cy_en_syspm_buck_voltage1_t voltage);
1677:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_BuckIsEnabled(void);
1678:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_BuckSetVoltage1(cy_en_syspm_buck_voltage1_t voltage);
1679:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_buck_voltage1_t Cy_SysPm_BuckGetVoltage1(void);
1680:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_BuckSetVoltage2(cy_en_syspm_buck_voltage2_t voltage, bool waitToSettle);
1681:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_buck_voltage2_t Cy_SysPm_BuckGetVoltage2(void);
1682:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_BuckEnableVoltage2(void);
1683:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BuckDisableVoltage2(void);
1684:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BuckSetVoltage2HwControl(bool hwControl);
1685:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_BuckIsVoltage2HwControlled(void);
1686:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** bool Cy_SysPm_BuckIsOutputEnabled(cy_en_syspm_buck_out_t output);
1687:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_buck */
1688:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1689:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1690:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_callback
1691:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1692:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1693:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** bool Cy_SysPm_RegisterCallback(cy_stc_syspm_callback_t *handler);
1694:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** bool Cy_SysPm_UnregisterCallback(cy_stc_syspm_callback_t const *handler);
1695:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_ExecuteCallback(cy_en_syspm_callback_type_t type, cy_en_syspm_callbac
1696:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_callback */
1697:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1698:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1699:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1700:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_power_status
1701:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1702:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1703:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1704:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm4IsActive
1705:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1706:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1707:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if CM4 is in CPU Active mode.
1708:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1709:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1710:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if CM4 is in CPU Active mode.
1711:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM4 is not in CPU Active mode.
1712:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1713:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1714:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm4IsActive
1715:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1716:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1717:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsActive(void)
1718:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1719:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM4_ACTIVE) != 0U);
1720:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1721:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1722:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1723:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1724:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm4IsSleep
1725:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1726:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1727:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the CM4 is in CPU Sleep mode.
1728:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1729:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1730:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if the CM4 is in CPU Sleep mode.
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 93


1731:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM4 is not in CPU Sleep mode.
1732:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1733:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1734:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm4IsSleep
1735:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1736:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1737:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsSleep(void)
1738:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1739:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM4_SLEEP) != 0U);
1740:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1741:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1742:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1743:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1744:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm4IsDeepSleep
1745:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1746:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1747:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the CM4 is in the CPU Deep Sleep mode.
1748:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1749:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1750:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if CM4 is in CPU Deep Sleep mode.
1751:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM4 is not CPU in Deep Sleep mode.
1752:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1753:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1754:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm4IsDeepSleep
1755:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1756:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1757:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsDeepSleep(void)
1758:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1759:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM4_DEEPSLEEP) != 0U);
1760:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1761:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1762:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1763:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1764:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm0IsActive
1765:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1766:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1767:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the CM0+ is in CPU Active mode.
1768:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1769:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1770:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if the CM0+ is in CPU Sleep mode.
1771:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM0+ is not in CPU Sleep mode.
1772:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1773:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1774:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm0IsActive
1775:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1776:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1777:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsActive(void)
1778:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1779:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM0_ACTIVE) != 0U);
1780:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1781:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1782:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1783:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1784:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm0IsSleep
1785:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1786:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1787:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the CM0+ is in CPU Sleep mode.
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 94


1788:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1789:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1790:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if the CM0+ is in CPU Sleep mode.
1791:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM0+ is not in CPU Sleep mode.
1792:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1793:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1794:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm0IsSleep
1795:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1796:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1797:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsSleep(void)
1798:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1799:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM0_SLEEP) != 0U);
1800:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1801:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1802:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1803:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1804:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm0IsDeepSleep
1805:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1806:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1807:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the CM0+ is in CPU Deep Sleep mode.
1808:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1809:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1810:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if the CM0+ is in CPU Deep Sleep mode
1811:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM0+ is not in CPU Deep Sleep mode
1812:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1813:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1814:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm0IsDeepSleep
1815:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1816:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1817:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsDeepSleep(void)
1818:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1819:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM0_DEEPSLEEP) != 0U);
1820:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1821:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1822:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1823:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1824:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_IsSystemLp
1825:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1826:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1827:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the system is in LP mode.
1828:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1829:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1830:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True the system is in LP mode.
1831:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False the system is not in LP mode.
1832:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1833:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1834:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_IsSystemLp
1835:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1836:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1837:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IsSystemLp(void)
1838:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1839:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_SYSTEM_LP) != 0U);
1840:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1841:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1842:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1843:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1844:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_IsSystemUlp
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 95


1845:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1846:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1847:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the system is in ULP mode.
1848:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1849:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1850:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True the system is in ULP mode.
1851:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False the system is is not ULP mode.
1852:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1853:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1854:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_IsSystemUlp
1855:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1856:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1857:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IsSystemUlp(void)
1858:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1859:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_SYSTEM_ULP) != 0U);
1860:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1861:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_power_status */
1862:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1863:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1864:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1865:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_power
1866:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1867:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1868:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1869:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_CpuSendWakeupEvent
1870:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1871:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1872:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Sends the SEV (Send Event) ARM instruction to the system.
1873:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1874:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1875:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_CpuSendWakeupEvent
1876:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1877:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1878:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_CpuSendWakeupEvent(void)
1879:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1880:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     __SEV();
1881:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1882:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1883:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1884:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1885:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_SystemIsMinRegulatorCurrentSet
1886:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1887:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1888:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Check whether the system regulator is set to minimal current mode.
1889:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1890:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1891:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True - system is in regulator minimum current mode.
1892:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False - system is in normal regulator current mode.
1893:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1894:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1895:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_SystemSetNormalRegulatorCurrent
1896:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1897:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1898:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_SystemIsMinRegulatorCurrentSet(void)
1899:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1900:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t regMask = Cy_SysPm_LdoIsEnabled() ? CY_SYSPM_PWR_CIRCUITS_LPMODE_ACTIVE_LDO_MASK : CY_
1901:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 96


1902:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((SRSS_PWR_CTL & regMask) == regMask);
1903:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1904:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_power */
1905:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1906:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1907:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1908:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_buck
1909:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1910:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1911:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1912:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckIsEnabled
1913:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1914:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1915:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Get the current status of the Buck regulator.
1916:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1917:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1918:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if the Buck regulator is enabled.
1919:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if it is disabled.
1920:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1921:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1922:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_VoltageRegulator
1923:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1924:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1925:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_BuckIsEnabled(void)
1926:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1927:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return (0U != _FLD2VAL(SRSS_PWR_BUCK_CTL_BUCK_EN, SRSS_PWR_BUCK_CTL));
1928:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1929:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1930:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1931:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckGetVoltage1
1932:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1933:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1934:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Gets the current nominal output 1 voltage (Vccbuck1) of 
1935:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the Buck regulator.
1936:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1937:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note The actual device output 1 voltage (Vccbuck1) can be different from
1938:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the nominal voltage because the actual voltage value depends on conditions 
1939:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * including load current.
1940:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1941:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1942:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The nominal output voltage 1 (Vccbuck1) of the Buck regulator.
1943:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * See \ref cy_en_syspm_buck_voltage1_t.
1944:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1945:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1946:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_VoltageRegulator
1947:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1948:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1949:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_buck_voltage1_t Cy_SysPm_BuckGetVoltage1(void)
1950:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1951:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t retVal;
1952:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     retVal = _FLD2VAL(SRSS_PWR_BUCK_CTL_BUCK_OUT1_SEL, SRSS_PWR_BUCK_CTL);
1953:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1954:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((cy_en_syspm_buck_voltage1_t) retVal);
1955:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1956:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1957:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1958:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 97


1959:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckGetVoltage2
1960:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1961:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1962:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Gets the current output 2 nominal voltage (Vbuckrf) of the SIMO 
1963:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Buck regulator.
1964:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1965:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note The actual device output 2 voltage (Vbuckrf) can be different from the 
1966:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * nominal voltage because the actual voltage value depends on conditions 
1967:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * including load current.
1968:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1969:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1970:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The nominal output voltage of the Buck SIMO regulator output 2 
1971:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * voltage (Vbuckrf). See \ref cy_en_syspm_buck_voltage2_t.
1972:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1973:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note
1974:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function returns zero for devices without a SIMO Buck regulator.
1975:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to the device datasheet about information on whether device contains 
1976:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * a SIMO Buck.
1977:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1978:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1979:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_BuckGetVoltage2
1980:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1981:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1982:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_buck_voltage2_t Cy_SysPm_BuckGetVoltage2(void)
1983:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1984:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t retVal = 0UL;
1985:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1986:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (0U != cy_device->sysPmSimoPresent)
1987:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
1988:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         retVal = _FLD2VAL(SRSS_PWR_BUCK_CTL2_BUCK_OUT2_SEL, SRSS_PWR_BUCK_CTL2);
1989:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
1990:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1991:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((cy_en_syspm_buck_voltage2_t) retVal);
1992:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1993:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1994:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1995:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1996:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckDisableVoltage2
1997:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1998:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1999:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Disables the output 2 voltage (Vbuckrf) of the SIMO Buck regulator. The 
2000:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * output 2 voltage (Vbuckrf) of the Buck regulator is typically used to supply 
2001:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the BLE radio.
2002:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2003:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note The function does not have effect, if the Buck regulator is
2004:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * switched off.
2005:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2006:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note If you are switching the voltage supply source for BLE radio, ensure 
2007:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * that the new voltage supply for the BLE HW block is settled 
2008:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * and is stable before calling the Cy_SysPm_BuckDisableVoltage2() function.
2009:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2010:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This function is applicable for devices with the SIMO Buck regulator.
2011:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to the device datasheet for information about whether the device 
2012:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * contains a SIMO Buck.
2013:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2014:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2015:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_BuckDisableVoltage2
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 98


2016:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2017:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2018:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BuckDisableVoltage2(void)
2019:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2020:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (0U != cy_device->sysPmSimoPresent)
2021:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2022:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         /* Disable the Vbuck2 output */
2023:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         SRSS_PWR_BUCK_CTL2 &= (uint32_t) ~_VAL2FLD(SRSS_PWR_BUCK_CTL2_BUCK_OUT2_EN, 1U);
2024:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2025:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2026:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2027:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2028:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2029:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckSetVoltage2HwControl
2030:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2031:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2032:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Sets the hardware control for SIMO Buck output 2 (Vbuckrf).
2033:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2034:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When hardware control is enabled for the Vbuckrf output, the firmware 
2035:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controlled enable register setting is ignored and the hardware signal is used 
2036:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * instead. If the product has supporting hardware like BLE radio, it can 
2037:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * directly control the enable signal for Vbuckrf.
2038:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2039:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \param hwControl
2040:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Enables/disables hardware control for the SIMO Buck output 2.
2041:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2042:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function does not have an effect if SIMO Buck regulator is disabled.
2043:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2044:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The function is applicable for devices with the SIMO Buck regulator.
2045:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to the device datasheet for information about whether the device 
2046:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * contains a SIMO Buck.
2047:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2048:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2049:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_BuckSetVoltage2HwControl
2050:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2051:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2052:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BuckSetVoltage2HwControl(bool hwControl)
2053:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2054:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     bool isBuckEnabled = Cy_SysPm_BuckIsEnabled();
2055:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
2056:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if ((0U != cy_device->sysPmSimoPresent) && isBuckEnabled)
2057:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2058:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         if(hwControl)
2059:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         {
2060:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****             SRSS_PWR_BUCK_CTL2 |= _VAL2FLD(SRSS_PWR_BUCK_CTL2_BUCK_OUT2_HW_SEL, 1U);
2061:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         }
2062:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         else
2063:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         {
2064:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****             SRSS_PWR_BUCK_CTL2 &= (uint32_t) ~_VAL2FLD(SRSS_PWR_BUCK_CTL2_BUCK_OUT2_HW_SEL, 1U);
2065:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         }
2066:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2067:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2068:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2069:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2070:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2071:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckIsVoltage2HwControlled
2072:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 99


2073:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2074:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Returns the hardware control state for Buck output 2 (Vbuckrf).
2075:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2076:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When hardware control is enabled for the Vbuckrf output, the firmware 
2077:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controlled enable register setting is ignored and the hardware signal is used 
2078:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * instead. If the product has supporting hardware like BLE radio, it can 
2079:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * directly control the enable signal for Vbuckrf.
2080:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2081:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
2082:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if HW control is set.
2083:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if FW control is set for the Buck output 2.
2084:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2085:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The function is applicable for devices with the SIMO Buck regulator.
2086:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to device datasheet about information if device contains 
2087:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * SIMO Buck.
2088:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2089:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2090:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_BuckIsVoltage2HwControlled
2091:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2092:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2093:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_BuckIsVoltage2HwControlled(void)
2094:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2095:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     bool retVal = false;
2096:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2097:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (0U != cy_device->sysPmSimoPresent)
2098:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2099:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         retVal = (0U != _FLD2VAL(SRSS_PWR_BUCK_CTL2_BUCK_OUT2_HW_SEL, SRSS_PWR_BUCK_CTL2));
2100:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2101:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2102:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return retVal;
2103:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2104:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_buck */
2105:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2106:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2107:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
2108:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_ldo
2109:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
2110:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
2111:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2112:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_LdoGetVoltage
2113:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2114:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2115:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Gets the current output voltage value of the core LDO regulator.
2116:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2117:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note The actual device Vccd voltage can be different from the 
2118:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * nominal voltage because the actual voltage value depends on conditions 
2119:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * including the load current.
2120:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2121:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
2122:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The nominal output voltage of the LDO. See \ref cy_en_syspm_ldo_voltage_t.
2123:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2124:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2125:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_VoltageRegulator
2126:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2127:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2128:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_ldo_voltage_t Cy_SysPm_LdoGetVoltage(void)
2129:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 100


2130:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t curVoltage;
2131:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2132:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     curVoltage = _FLD2VAL(SRSS_PWR_TRIM_PWRSYS_CTL_ACT_REG_TRIM, SRSS_PWR_TRIM_PWRSYS_CTL);
2133:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2134:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((curVoltage == (SFLASH_LDO_0P9V_TRIM)) ? CY_SYSPM_LDO_VOLTAGE_ULP : CY_SYSPM_LDO_VOLTAG
2135:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2136:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2137:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2138:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2139:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_LdoIsEnabled
2140:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2141:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2142:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Reads the current status of the core LDO regulator.
2143:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2144:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
2145:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True means the LDO is enabled. 
2146:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False means it is disabled.
2147:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2148:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2149:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_VoltageRegulator
2150:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2151:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2152:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_LdoIsEnabled(void)
2153:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2154:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((0U != _FLD2VAL(SRSS_PWR_CTL_LINREG_DIS, SRSS_PWR_CTL)) ? false : true);
2155:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2156:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_ldo */
2157:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2158:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2159:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
2160:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_iofreeze
2161:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
2162:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
2163:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2164:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_IoIsFrozen
2165:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2166:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2167:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks whether IOs are frozen.
2168:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2169:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return 
2170:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if IOs are frozen.
2171:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if IOs are unfrozen.
2172:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2173:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2174:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_IoUnfreeze
2175:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2176:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2177:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IoIsFrozen(void)
2178:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2179:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return (0U != _FLD2VAL(SRSS_PWR_HIBERNATE_FREEZE, SRSS_PWR_HIBERNATE));
2180:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2181:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_iofreeze */
2182:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2183:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
2184:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_pmic
2185:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
2186:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 101


2187:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2188:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2189:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2190:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicEnable
2191:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2192:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2193:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Enable the external PMIC controller that supplies Vddd (if present).
2194:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2195:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For information about the PMIC controller input and output pins and their 
2196:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * assignment in specific devices, refer to the appropriate device TRM.
2197:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
2198:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This function is not effective when the PMIC controller is locked. Call 
2199:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock() before enabling the PMIC.
2200:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2201:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2202:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicEnable
2203:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2204:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2205:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicEnable(void)
2206:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2207:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (CY_SYSPM_PMIC_UNLOCK_KEY == _FLD2VAL(BACKUP_PMIC_CTL_UNLOCK, BACKUP_PMIC_CTL))
2208:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2209:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         BACKUP_PMIC_CTL =
2210:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         _VAL2FLD(BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK_KEY) |
2211:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         _VAL2FLD(BACKUP_PMIC_CTL_PMIC_EN_OUTEN, 1U) |
2212:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         _VAL2FLD(BACKUP_PMIC_CTL_PMIC_EN, 1U);
2213:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2214:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2215:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2216:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2217:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2218:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicDisable
2219:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2220:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2221:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Disable the external PMIC controller that supplies Vddd (if present).
2222:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This function does not affect the PMIC controller output pin. The PMIC 
2223:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller input pin has programmable polarity to 
2224:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * enable the external PMIC using different input polarities. The PMIC controller
2225:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * is automatically enabled when the input pin polarity and configured polarity 
2226:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * match. This function is not effective when the active level of PMIC controller
2227:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * input pin is equal to the configured PMIC controller polarity.
2228:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2229:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The function is not effective when the PMIC controller is locked. Call 
2230:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock() before enabling the PMIC controller.
2231:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2232:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \param polarity
2233:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Configures the PMIC controller wakeup input pin to be active low or active 
2234:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * high. The PMIC will be automatically enabled when the set polarity and the 
2235:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * active level of PMIC input pin match. 
2236:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * See \ref cy_en_syspm_pmic_wakeup_polarity_t.
2237:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2238:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC controller will be enabled automatically by any of RTC alarm or 
2239:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * PMIC wakeup events, regardless of the PMIC controller lock state.
2240:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2241:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note
2242:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Before disabling the PMIC controller, ensure that PMIC input and PMIC output 
2243:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * pins are configured correctly to enable expected PMIC operation.
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 102


2244:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2245:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning
2246:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC is enabled automatically when you call Cy_SysPm_PmicLock(). 
2247:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To keep the external PMIC disabled, the PMIC controller must remain unlocked.
2248:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2249:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning 
2250:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Do not call Cy_SysPm_PmicDisable(CY_SYSPM_PMIC_POLARITY_LOW) because this 
2251:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * is not supported by hardware.
2252:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2253:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For information about the PMIC controller input and output pins and their 
2254:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * assignment in the specific devices, refer to the appropriate 
2255:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * device TRM.
2256:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2257:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2258:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicDisable
2259:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2260:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2261:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicDisable(cy_en_syspm_pmic_wakeup_polarity_t polarity)
2262:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2263:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_ASSERT_L3(CY_SYSPM_IS_POLARITY_VALID(polarity));
2264:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
2265:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (CY_SYSPM_PMIC_UNLOCK_KEY == _FLD2VAL(BACKUP_PMIC_CTL_UNLOCK, BACKUP_PMIC_CTL))
2266:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2267:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         BACKUP_PMIC_CTL = 
2268:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         (_VAL2FLD(BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK_KEY) | 
2269:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****          _CLR_SET_FLD32U(BACKUP_PMIC_CTL, BACKUP_PMIC_CTL_POLARITY, (uint32_t) polarity)) &
2270:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         ((uint32_t) ~ _VAL2FLD(BACKUP_PMIC_CTL_PMIC_EN, 1U));
2271:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2272:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2273:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2274:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2275:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2276:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicAlwaysEnable
2277:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2278:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2279:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Enable the external PMIC controller that supplies Vddd (if present) and force 
2280:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * active. This is a Write once API. It ensures that the PMIC controller cannot 
2281:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * be disabled or polarity changed until a next device reset.
2282:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
2283:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For information about the PMIC controller input and output pins and their 
2284:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * assignment in the specific devices, refer to the appropriate device TRM.
2285:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2286:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2287:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicAlwaysEnable
2288:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2289:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2290:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicAlwaysEnable(void)
2291:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2292:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     BACKUP_PMIC_CTL |= _VAL2FLD(BACKUP_PMIC_CTL_PMIC_ALWAYSEN, 1U);
2293:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2294:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2295:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2296:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2297:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicEnableOutput
2298:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2299:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2300:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Enables the PMIC controller output pin. 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 103


2301:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2302:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The function is not effective when the PMIC controller is locked. Call 
2303:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock() before enabling the PMIC controller.
2304:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2305:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For information about the PMIC controller output pin and its assignment in 
2306:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * specific devices, refer to the appropriate device TRM.
2307:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2308:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2309:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicEnableOutput
2310:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2311:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2312:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicEnableOutput(void)
2313:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2314:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (CY_SYSPM_PMIC_UNLOCK_KEY == _FLD2VAL(BACKUP_PMIC_CTL_UNLOCK, BACKUP_PMIC_CTL))
2315:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2316:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         BACKUP_PMIC_CTL |=
2317:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         _VAL2FLD(BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK_KEY) | _VAL2FLD(BACKUP_PMIC_CTL_PMIC_
2318:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2319:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2320:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2321:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2322:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2323:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicDisableOutput
2324:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2325:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2326:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Disables the PMIC controller output pin. 
2327:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2328:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When the PMIC controller output pin is disabled and is unlocked, the PMIC 
2329:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller output pin can be used for the another purpose.
2330:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2331:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The function has no effect when the PMIC is locked. Call 
2332:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock() before enabling the PMIC.
2333:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2334:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For information about the PMIC controller output pin and its assignment in 
2335:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * specific devices, refer to the appropriate device TRM.
2336:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2337:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note
2338:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * After the PMIC controller output is disabled, the PMIC output pin returns to 
2339:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * its GPIO configured state. 
2340:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2341:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning
2342:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC controller output is enabled automatically when you call 
2343:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicLock(). To keep the PMIC controller output disabled, the PMIC
2344:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller must remain unlocked.
2345:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2346:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2347:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicDisableOutput
2348:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2349:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2350:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicDisableOutput(void)
2351:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2352:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (CY_SYSPM_PMIC_UNLOCK_KEY == _FLD2VAL(BACKUP_PMIC_CTL_UNLOCK, BACKUP_PMIC_CTL))
2353:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2354:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         BACKUP_PMIC_CTL = 
2355:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         (BACKUP_PMIC_CTL | _VAL2FLD(BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK_KEY)) &
2356:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         ((uint32_t) ~ _VAL2FLD(BACKUP_PMIC_CTL_PMIC_EN_OUTEN, 1U));
2357:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     } 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 104


2358:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2359:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2360:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2361:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2362:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicLock
2363:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2364:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2365:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Locks the PMIC control controller register so that no changes can be made. 
2366:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The changes are related to PMIC enabling/disabling and PMIC output pin 
2367:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * enabling/disabling.
2368:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2369:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning
2370:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC controller and/or the PMIC output are enabled automatically when 
2371:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * you call Cy_SysPm_PmicLock(). To keep the PMIC or PMIC controller output 
2372:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * disabled, the PMIC controller must remain unlocked.
2373:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2374:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2375:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicLock
2376:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2377:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2378:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicLock(void)
2379:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2380:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     BACKUP_PMIC_CTL = _CLR_SET_FLD32U(BACKUP_PMIC_CTL, BACKUP_PMIC_CTL_UNLOCK, 0U);
2381:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2382:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2383:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2384:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2385:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicUnlock
2386:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2387:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2388:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Unlocks the PMIC control register so that changes can be made. The changes are
2389:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * related to the PMIC controller enabling/disabling and PMIC output pin 
2390:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * enabling/disabling.
2391:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2392:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning
2393:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC controller and/or the PMIC output are enabled automatically when 
2394:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * you call Cy_SysPm_PmicLock(). To keep the PMIC controller or PMIC output 
2395:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * disabled, the PMIC must remain unlocked.
2396:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2397:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2398:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicEnable
2399:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2400:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2401:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicUnlock(void)
2402:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2403:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     BACKUP_PMIC_CTL = _CLR_SET_FLD32U(BACKUP_PMIC_CTL, BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK
 459              		.loc 3 2403 0
 460 0044 1C4A     		ldr	r2, .L15+8
 461 0046 516C     		ldr	r1, [r2, #68]
 462 0048 1C4B     		ldr	r3, .L15+12
 463 004a 0B40     		ands	r3, r1
 464 004c E821     		movs	r1, #232
 465 004e 8901     		lsls	r1, r1, #6
 466 0050 0B43     		orrs	r3, r1
 467 0052 5364     		str	r3, [r2, #68]
 468              	.LBE83:
 469              	.LBE82:
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 105


 470              	.LBB84:
 471              	.LBB85:
2352:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
 472              		.loc 3 2352 0
 473 0054 536C     		ldr	r3, [r2, #68]
 474 0056 1B0A     		lsrs	r3, r3, #8
 475 0058 FF22     		movs	r2, #255
 476 005a 1340     		ands	r3, r2
 477 005c 3A2B     		cmp	r3, #58
 478 005e 07D1     		bne	.L14
2355:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         ((uint32_t) ~ _VAL2FLD(BACKUP_PMIC_CTL_PMIC_EN_OUTEN, 1U));
 479              		.loc 3 2355 0
 480 0060 154A     		ldr	r2, .L15+8
 481 0062 516C     		ldr	r1, [r2, #68]
 482 0064 164B     		ldr	r3, .L15+16
 483 0066 0B40     		ands	r3, r1
 484 0068 E821     		movs	r1, #232
 485 006a 8901     		lsls	r1, r1, #6
 486 006c 0B43     		orrs	r3, r1
2354:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         (BACKUP_PMIC_CTL | _VAL2FLD(BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK_KEY)) &
 487              		.loc 3 2354 0
 488 006e 5364     		str	r3, [r2, #68]
 489              	.L14:
 490              	.LBE85:
 491              	.LBE84:
 272:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 273:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* PMIC Control */
 274:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysPm_UnlockPmic();
 275:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysPm_DisablePmicOutput();
 276:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 277:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Clock */
 278:Generated_Source\PSoC6/cyfitter_cfg.c **** 	ClockInit();
 492              		.loc 1 278 0
 493 0070 FFF7FEFF 		bl	ClockInit
 494              	.LVL38:
 495              	.LBB86:
 279:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 280:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Port1 configuration */
 281:Generated_Source\PSoC6/cyfitter_cfg.c **** 	{
 282:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    const cy_stc_gpio_prt_config_t port1_cfg =
 496              		.loc 1 282 0
 497 0074 01AD     		add	r5, sp, #4
 498 0076 134C     		ldr	r4, .L15+20
 499 0078 2A00     		movs	r2, r5
 500 007a 2300     		movs	r3, r4
 501 007c 1433     		adds	r3, r3, #20
 502 007e 43CB     		ldmia	r3!, {r0, r1, r6}
 503 0080 43C2     		stmia	r2!, {r0, r1, r6}
 504 0082 43CB     		ldmia	r3!, {r0, r1, r6}
 505 0084 43C2     		stmia	r2!, {r0, r1, r6}
 506 0086 43CB     		ldmia	r3!, {r0, r1, r6}
 507 0088 43C2     		stmia	r2!, {r0, r1, r6}
 283:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    {
 284:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .out        = 0x00000002u,
 285:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .intrMask   = 0x00000000u,
 286:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .intrCfg    = 0x00000000u,
 287:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfg        = 0x00000020u,
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 106


 288:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgIn      = 0x00000000u,
 289:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgOut     = 0x00000000u,
 290:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgSIO     = 0x00000000u,
 291:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .sel0Active = 0x00000000u,
 292:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .sel1Active = 0x00000000u,
 293:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    };
 294:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    (void)Cy_GPIO_Port_Init(GPIO_PRT1, &port1_cfg);
 508              		.loc 1 294 0
 509 008a 2900     		movs	r1, r5
 510 008c 0E48     		ldr	r0, .L15+24
 511 008e FFF7FEFF 		bl	Cy_GPIO_Port_Init
 512              	.LVL39:
 513              	.LBE86:
 514              	.LBB87:
 295:Generated_Source\PSoC6/cyfitter_cfg.c **** 	}
 296:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 297:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Port6 configuration */
 298:Generated_Source\PSoC6/cyfitter_cfg.c **** 	{
 299:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    const cy_stc_gpio_prt_config_t port6_cfg =
 515              		.loc 1 299 0
 516 0092 2A00     		movs	r2, r5
 517 0094 2300     		movs	r3, r4
 518 0096 3833     		adds	r3, r3, #56
 519 0098 13CB     		ldmia	r3!, {r0, r1, r4}
 520 009a 13C2     		stmia	r2!, {r0, r1, r4}
 521 009c 13CB     		ldmia	r3!, {r0, r1, r4}
 522 009e 13C2     		stmia	r2!, {r0, r1, r4}
 523 00a0 13CB     		ldmia	r3!, {r0, r1, r4}
 524 00a2 13C2     		stmia	r2!, {r0, r1, r4}
 300:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    {
 301:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .out        = 0x00000000u,
 302:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .intrMask   = 0x00000000u,
 303:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .intrCfg    = 0x00000000u,
 304:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfg        = 0xBA000000u,
 305:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgIn      = 0x00000000u,
 306:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgOut     = 0x00000000u,
 307:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgSIO     = 0x00000000u,
 308:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .sel0Active = 0x00000000u,
 309:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .sel1Active = 0x1D1D0000u,
 310:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    };
 311:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    (void)Cy_GPIO_Port_Init(GPIO_PRT6, &port6_cfg);
 525              		.loc 1 311 0
 526 00a4 2900     		movs	r1, r5
 527 00a6 0948     		ldr	r0, .L15+28
 528 00a8 FFF7FEFF 		bl	Cy_GPIO_Port_Init
 529              	.LVL40:
 530              	.LBE87:
 312:Generated_Source\PSoC6/cyfitter_cfg.c **** 	}
 313:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 314:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 315:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Perform basic analog initialization to defaults */
 316:Generated_Source\PSoC6/cyfitter_cfg.c **** 	AnalogSetDefault();
 317:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 318:Generated_Source\PSoC6/cyfitter_cfg.c **** }
 531              		.loc 1 318 0
 532 00ac 0AB0     		add	sp, sp, #40
 533              		@ sp needed
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 107


 534 00ae 70BD     		pop	{r4, r5, r6, pc}
 535              	.L16:
 536              		.align	2
 537              	.L15:
 538 00b0 00002640 		.word	1076232192
 539 00b4 0C050000 		.word	1292
 540 00b8 00002740 		.word	1076297728
 541 00bc FF00FFFF 		.word	-65281
 542 00c0 FFC5FFDF 		.word	-536885761
 543 00c4 00000000 		.word	.LANCHOR0
 544 00c8 80003240 		.word	1077018752
 545 00cc 00033240 		.word	1077019392
 546              		.cfi_endproc
 547              	.LFE190:
 548              		.size	Cy_SystemInit, .-Cy_SystemInit
 549              		.section	.rodata
 550              		.align	2
 551              		.set	.LANCHOR0,. + 0
 552              	.LC2:
 553 0000 F4010000 		.word	500
 554 0004 1400     		.short	20
 555 0006 04       		.byte	4
 556 0007 01       		.byte	1
 557 0008 0A00     		.short	10
 558 000a 09       		.byte	9
 559 000b 05       		.byte	5
 560 000c 0800     		.short	8
 561 000e 00       		.byte	0
 562 000f 00       		.space	1
 563 0010 6301     		.short	355
 564 0012 0000     		.space	2
 565              	.LC0:
 566 0014 02000000 		.word	2
 567 0018 00000000 		.word	0
 568 001c 00000000 		.word	0
 569 0020 20000000 		.word	32
 570 0024 00000000 		.word	0
 571 0028 00000000 		.word	0
 572 002c 00000000 		.word	0
 573 0030 00000000 		.word	0
 574 0034 00000000 		.word	0
 575              	.LC1:
 576 0038 00000000 		.word	0
 577 003c 00000000 		.word	0
 578 0040 00000000 		.word	0
 579 0044 000000BA 		.word	-1174405120
 580 0048 00000000 		.word	0
 581 004c 00000000 		.word	0
 582 0050 00000000 		.word	0
 583 0054 00000000 		.word	0
 584 0058 00001D1D 		.word	488439808
 585              		.text
 586              	.Letext0:
 587              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 588              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 589              		.file 6 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_srss.h"
 590              		.file 7 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_backup.h"
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 108


 591              		.file 8 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_gpio.h"
 592              		.file 9 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 593              		.file 10 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 594              		.file 11 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 595              		.file 12 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/gpio/cy_gpio.h"
 596              		.file 13 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/systick/cy_systick.h"
 597              		.section	.debug_info,"",%progbits
 598              	.Ldebug_info0:
 599 0000 58190000 		.4byte	0x1958
 600 0004 0400     		.2byte	0x4
 601 0006 00000000 		.4byte	.Ldebug_abbrev0
 602 000a 04       		.byte	0x4
 603 000b 01       		.uleb128 0x1
 604 000c 7F0F0000 		.4byte	.LASF384
 605 0010 0C       		.byte	0xc
 606 0011 5C0E0000 		.4byte	.LASF385
 607 0015 BE070000 		.4byte	.LASF386
 608 0019 00000000 		.4byte	.Ldebug_ranges0+0
 609 001d 00000000 		.4byte	0
 610 0021 00000000 		.4byte	.Ldebug_line0
 611 0025 02       		.uleb128 0x2
 612 0026 04       		.byte	0x4
 613 0027 05       		.byte	0x5
 614 0028 696E7400 		.ascii	"int\000"
 615 002c 03       		.uleb128 0x3
 616 002d 04       		.byte	0x4
 617 002e 07       		.byte	0x7
 618 002f F90D0000 		.4byte	.LASF0
 619 0033 03       		.uleb128 0x3
 620 0034 08       		.byte	0x8
 621 0035 05       		.byte	0x5
 622 0036 080F0000 		.4byte	.LASF1
 623 003a 03       		.uleb128 0x3
 624 003b 08       		.byte	0x8
 625 003c 04       		.byte	0x4
 626 003d CE110000 		.4byte	.LASF2
 627 0041 03       		.uleb128 0x3
 628 0042 01       		.byte	0x1
 629 0043 06       		.byte	0x6
 630 0044 2F190000 		.4byte	.LASF3
 631 0048 04       		.uleb128 0x4
 632 0049 29150000 		.4byte	.LASF5
 633 004d 04       		.byte	0x4
 634 004e 1D       		.byte	0x1d
 635 004f 53000000 		.4byte	0x53
 636 0053 03       		.uleb128 0x3
 637 0054 01       		.byte	0x1
 638 0055 08       		.byte	0x8
 639 0056 D7160000 		.4byte	.LASF4
 640 005a 04       		.uleb128 0x4
 641 005b 11100000 		.4byte	.LASF6
 642 005f 04       		.byte	0x4
 643 0060 29       		.byte	0x29
 644 0061 65000000 		.4byte	0x65
 645 0065 03       		.uleb128 0x3
 646 0066 02       		.byte	0x2
 647 0067 05       		.byte	0x5
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 109


 648 0068 F4030000 		.4byte	.LASF7
 649 006c 04       		.uleb128 0x4
 650 006d 18090000 		.4byte	.LASF8
 651 0071 04       		.byte	0x4
 652 0072 2B       		.byte	0x2b
 653 0073 77000000 		.4byte	0x77
 654 0077 03       		.uleb128 0x3
 655 0078 02       		.byte	0x2
 656 0079 07       		.byte	0x7
 657 007a BB110000 		.4byte	.LASF9
 658 007e 03       		.uleb128 0x3
 659 007f 04       		.byte	0x4
 660 0080 05       		.byte	0x5
 661 0081 26000000 		.4byte	.LASF10
 662 0085 04       		.uleb128 0x4
 663 0086 E5160000 		.4byte	.LASF11
 664 008a 04       		.byte	0x4
 665 008b 41       		.byte	0x41
 666 008c 90000000 		.4byte	0x90
 667 0090 03       		.uleb128 0x3
 668 0091 04       		.byte	0x4
 669 0092 07       		.byte	0x7
 670 0093 48160000 		.4byte	.LASF12
 671 0097 03       		.uleb128 0x3
 672 0098 08       		.byte	0x8
 673 0099 07       		.byte	0x7
 674 009a 6B070000 		.4byte	.LASF13
 675 009e 03       		.uleb128 0x3
 676 009f 04       		.byte	0x4
 677 00a0 07       		.byte	0x7
 678 00a1 99120000 		.4byte	.LASF14
 679 00a5 03       		.uleb128 0x3
 680 00a6 01       		.byte	0x1
 681 00a7 08       		.byte	0x8
 682 00a8 A80D0000 		.4byte	.LASF15
 683 00ac 04       		.uleb128 0x4
 684 00ad 250E0000 		.4byte	.LASF16
 685 00b1 05       		.byte	0x5
 686 00b2 18       		.byte	0x18
 687 00b3 48000000 		.4byte	0x48
 688 00b7 04       		.uleb128 0x4
 689 00b8 20070000 		.4byte	.LASF17
 690 00bc 05       		.byte	0x5
 691 00bd 20       		.byte	0x20
 692 00be 5A000000 		.4byte	0x5a
 693 00c2 04       		.uleb128 0x4
 694 00c3 DA110000 		.4byte	.LASF18
 695 00c7 05       		.byte	0x5
 696 00c8 24       		.byte	0x24
 697 00c9 6C000000 		.4byte	0x6c
 698 00cd 04       		.uleb128 0x4
 699 00ce F4050000 		.4byte	.LASF19
 700 00d2 05       		.byte	0x5
 701 00d3 30       		.byte	0x30
 702 00d4 85000000 		.4byte	0x85
 703 00d8 05       		.uleb128 0x5
 704 00d9 CD000000 		.4byte	0xcd
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 110


 705 00dd 06       		.uleb128 0x6
 706 00de D8000000 		.4byte	0xd8
 707 00e2 07       		.uleb128 0x7
 708 00e3 DD000000 		.4byte	0xdd
 709 00e7 F2000000 		.4byte	0xf2
 710 00eb 08       		.uleb128 0x8
 711 00ec 9E000000 		.4byte	0x9e
 712 00f0 01       		.byte	0x1
 713 00f1 00       		.byte	0
 714 00f2 07       		.uleb128 0x7
 715 00f3 DD000000 		.4byte	0xdd
 716 00f7 02010000 		.4byte	0x102
 717 00fb 08       		.uleb128 0x8
 718 00fc 9E000000 		.4byte	0x9e
 719 0100 07       		.byte	0x7
 720 0101 00       		.byte	0
 721 0102 07       		.uleb128 0x7
 722 0103 D8000000 		.4byte	0xd8
 723 0107 12010000 		.4byte	0x112
 724 010b 08       		.uleb128 0x8
 725 010c 9E000000 		.4byte	0x9e
 726 0110 0F       		.byte	0xf
 727 0111 00       		.byte	0
 728 0112 07       		.uleb128 0x7
 729 0113 DD000000 		.4byte	0xdd
 730 0117 22010000 		.4byte	0x122
 731 011b 08       		.uleb128 0x8
 732 011c 9E000000 		.4byte	0x9e
 733 0120 2F       		.byte	0x2f
 734 0121 00       		.byte	0
 735 0122 07       		.uleb128 0x7
 736 0123 D8000000 		.4byte	0xd8
 737 0127 32010000 		.4byte	0x132
 738 012b 08       		.uleb128 0x8
 739 012c 9E000000 		.4byte	0x9e
 740 0130 3F       		.byte	0x3f
 741 0131 00       		.byte	0
 742 0132 07       		.uleb128 0x7
 743 0133 DD000000 		.4byte	0xdd
 744 0137 42010000 		.4byte	0x142
 745 013b 08       		.uleb128 0x8
 746 013c 9E000000 		.4byte	0x9e
 747 0140 04       		.byte	0x4
 748 0141 00       		.byte	0
 749 0142 07       		.uleb128 0x7
 750 0143 DD000000 		.4byte	0xdd
 751 0147 52010000 		.4byte	0x152
 752 014b 08       		.uleb128 0x8
 753 014c 9E000000 		.4byte	0x9e
 754 0150 0F       		.byte	0xf
 755 0151 00       		.byte	0
 756 0152 07       		.uleb128 0x7
 757 0153 DD000000 		.4byte	0xdd
 758 0157 62010000 		.4byte	0x162
 759 015b 08       		.uleb128 0x8
 760 015c 9E000000 		.4byte	0x9e
 761 0160 1A       		.byte	0x1a
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 111


 762 0161 00       		.byte	0
 763 0162 07       		.uleb128 0x7
 764 0163 DD000000 		.4byte	0xdd
 765 0167 72010000 		.4byte	0x172
 766 016b 08       		.uleb128 0x8
 767 016c 9E000000 		.4byte	0x9e
 768 0170 1C       		.byte	0x1c
 769 0171 00       		.byte	0
 770 0172 09       		.uleb128 0x9
 771 0173 40       		.byte	0x40
 772 0174 06       		.byte	0x6
 773 0175 22       		.byte	0x22
 774 0176 0B020000 		.4byte	0x20b
 775 017a 0A       		.uleb128 0xa
 776 017b 2F000000 		.4byte	.LASF20
 777 017f 06       		.byte	0x6
 778 0180 23       		.byte	0x23
 779 0181 DD000000 		.4byte	0xdd
 780 0185 00       		.byte	0
 781 0186 0A       		.uleb128 0xa
 782 0187 D30E0000 		.4byte	.LASF21
 783 018b 06       		.byte	0x6
 784 018c 24       		.byte	0x24
 785 018d D8000000 		.4byte	0xd8
 786 0191 04       		.byte	0x4
 787 0192 0A       		.uleb128 0xa
 788 0193 C6050000 		.4byte	.LASF22
 789 0197 06       		.byte	0x6
 790 0198 25       		.byte	0x25
 791 0199 D8000000 		.4byte	0xd8
 792 019d 08       		.byte	0x8
 793 019e 0A       		.uleb128 0xa
 794 019f 221A0000 		.4byte	.LASF23
 795 01a3 06       		.byte	0x6
 796 01a4 26       		.byte	0x26
 797 01a5 D8000000 		.4byte	0xd8
 798 01a9 0C       		.byte	0xc
 799 01aa 0A       		.uleb128 0xa
 800 01ab 98180000 		.4byte	.LASF24
 801 01af 06       		.byte	0x6
 802 01b0 27       		.byte	0x27
 803 01b1 D8000000 		.4byte	0xd8
 804 01b5 10       		.byte	0x10
 805 01b6 0A       		.uleb128 0xa
 806 01b7 4F180000 		.4byte	.LASF25
 807 01bb 06       		.byte	0x6
 808 01bc 28       		.byte	0x28
 809 01bd D8000000 		.4byte	0xd8
 810 01c1 14       		.byte	0x14
 811 01c2 0A       		.uleb128 0xa
 812 01c3 A5110000 		.4byte	.LASF26
 813 01c7 06       		.byte	0x6
 814 01c8 29       		.byte	0x29
 815 01c9 D8000000 		.4byte	0xd8
 816 01cd 18       		.byte	0x18
 817 01ce 0A       		.uleb128 0xa
 818 01cf 98140000 		.4byte	.LASF27
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 112


 819 01d3 06       		.byte	0x6
 820 01d4 2A       		.byte	0x2a
 821 01d5 D8000000 		.4byte	0xd8
 822 01d9 1C       		.byte	0x1c
 823 01da 0A       		.uleb128 0xa
 824 01db A30B0000 		.4byte	.LASF28
 825 01df 06       		.byte	0x6
 826 01e0 2B       		.byte	0x2b
 827 01e1 D8000000 		.4byte	0xd8
 828 01e5 20       		.byte	0x20
 829 01e6 0A       		.uleb128 0xa
 830 01e7 BB060000 		.4byte	.LASF29
 831 01eb 06       		.byte	0x6
 832 01ec 2C       		.byte	0x2c
 833 01ed DD000000 		.4byte	0xdd
 834 01f1 24       		.byte	0x24
 835 01f2 0A       		.uleb128 0xa
 836 01f3 B0110000 		.4byte	.LASF30
 837 01f7 06       		.byte	0x6
 838 01f8 2D       		.byte	0x2d
 839 01f9 D8000000 		.4byte	0xd8
 840 01fd 28       		.byte	0x28
 841 01fe 0A       		.uleb128 0xa
 842 01ff 16070000 		.4byte	.LASF31
 843 0203 06       		.byte	0x6
 844 0204 2E       		.byte	0x2e
 845 0205 10020000 		.4byte	0x210
 846 0209 2C       		.byte	0x2c
 847 020a 00       		.byte	0
 848 020b 05       		.uleb128 0x5
 849 020c 32010000 		.4byte	0x132
 850 0210 06       		.uleb128 0x6
 851 0211 0B020000 		.4byte	0x20b
 852 0215 04       		.uleb128 0x4
 853 0216 10010000 		.4byte	.LASF32
 854 021a 06       		.byte	0x6
 855 021b 2F       		.byte	0x2f
 856 021c 72010000 		.4byte	0x172
 857 0220 0B       		.uleb128 0xb
 858 0221 30FF     		.2byte	0xff30
 859 0223 06       		.byte	0x6
 860 0224 34       		.byte	0x34
 861 0225 94050000 		.4byte	0x594
 862 0229 0A       		.uleb128 0xa
 863 022a 80050000 		.4byte	.LASF33
 864 022e 06       		.byte	0x6
 865 022f 35       		.byte	0x35
 866 0230 D8000000 		.4byte	0xd8
 867 0234 00       		.byte	0
 868 0235 0A       		.uleb128 0xa
 869 0236 28110000 		.4byte	.LASF34
 870 023a 06       		.byte	0x6
 871 023b 36       		.byte	0x36
 872 023c D8000000 		.4byte	0xd8
 873 0240 04       		.byte	0x4
 874 0241 0A       		.uleb128 0xa
 875 0242 CE0D0000 		.4byte	.LASF35
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 113


 876 0246 06       		.byte	0x6
 877 0247 37       		.byte	0x37
 878 0248 D8000000 		.4byte	0xd8
 879 024c 08       		.byte	0x8
 880 024d 0A       		.uleb128 0xa
 881 024e 2F000000 		.4byte	.LASF20
 882 0252 06       		.byte	0x6
 883 0253 38       		.byte	0x38
 884 0254 99050000 		.4byte	0x599
 885 0258 0C       		.byte	0xc
 886 0259 0A       		.uleb128 0xa
 887 025a BA130000 		.4byte	.LASF36
 888 025e 06       		.byte	0x6
 889 025f 39       		.byte	0x39
 890 0260 D8000000 		.4byte	0xd8
 891 0264 14       		.byte	0x14
 892 0265 0A       		.uleb128 0xa
 893 0266 23090000 		.4byte	.LASF37
 894 026a 06       		.byte	0x6
 895 026b 3A       		.byte	0x3a
 896 026c D8000000 		.4byte	0xd8
 897 0270 18       		.byte	0x18
 898 0271 0A       		.uleb128 0xa
 899 0272 C4010000 		.4byte	.LASF38
 900 0276 06       		.byte	0x6
 901 0277 3B       		.byte	0x3b
 902 0278 DD000000 		.4byte	0xdd
 903 027c 1C       		.byte	0x1c
 904 027d 0A       		.uleb128 0xa
 905 027e 16070000 		.4byte	.LASF31
 906 0282 06       		.byte	0x6
 907 0283 3C       		.byte	0x3c
 908 0284 B3050000 		.4byte	0x5b3
 909 0288 20       		.byte	0x20
 910 0289 0A       		.uleb128 0xa
 911 028a 9A050000 		.4byte	.LASF39
 912 028e 06       		.byte	0x6
 913 028f 3D       		.byte	0x3d
 914 0290 B8050000 		.4byte	0x5b8
 915 0294 80       		.byte	0x80
 916 0295 0A       		.uleb128 0xa
 917 0296 F7120000 		.4byte	.LASF40
 918 029a 06       		.byte	0x6
 919 029b 3E       		.byte	0x3e
 920 029c C2050000 		.4byte	0x5c2
 921 02a0 C0       		.byte	0xc0
 922 02a1 0C       		.uleb128 0xc
 923 02a2 CF160000 		.4byte	.LASF41
 924 02a6 06       		.byte	0x6
 925 02a7 3F       		.byte	0x3f
 926 02a8 D8000000 		.4byte	0xd8
 927 02ac 8001     		.2byte	0x180
 928 02ae 0C       		.uleb128 0xc
 929 02af F10D0000 		.4byte	.LASF42
 930 02b3 06       		.byte	0x6
 931 02b4 40       		.byte	0x40
 932 02b5 D8000000 		.4byte	0xd8
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 114


 933 02b9 8401     		.2byte	0x184
 934 02bb 0C       		.uleb128 0xc
 935 02bc B40E0000 		.4byte	.LASF43
 936 02c0 06       		.byte	0x6
 937 02c1 41       		.byte	0x41
 938 02c2 D8000000 		.4byte	0xd8
 939 02c6 8801     		.2byte	0x188
 940 02c8 0C       		.uleb128 0xc
 941 02c9 01130000 		.4byte	.LASF44
 942 02cd 06       		.byte	0x6
 943 02ce 42       		.byte	0x42
 944 02cf CC050000 		.4byte	0x5cc
 945 02d3 8C01     		.2byte	0x18c
 946 02d5 0C       		.uleb128 0xc
 947 02d6 3C140000 		.4byte	.LASF45
 948 02da 06       		.byte	0x6
 949 02db 43       		.byte	0x43
 950 02dc D1050000 		.4byte	0x5d1
 951 02e0 0002     		.2byte	0x200
 952 02e2 0C       		.uleb128 0xc
 953 02e3 F9190000 		.4byte	.LASF46
 954 02e7 06       		.byte	0x6
 955 02e8 44       		.byte	0x44
 956 02e9 E1050000 		.4byte	0x5e1
 957 02ed 0003     		.2byte	0x300
 958 02ef 0C       		.uleb128 0xc
 959 02f0 4F130000 		.4byte	.LASF47
 960 02f4 06       		.byte	0x6
 961 02f5 45       		.byte	0x45
 962 02f6 E6050000 		.4byte	0x5e6
 963 02fa 4003     		.2byte	0x340
 964 02fc 0C       		.uleb128 0xc
 965 02fd 60120000 		.4byte	.LASF48
 966 0301 06       		.byte	0x6
 967 0302 46       		.byte	0x46
 968 0303 EB050000 		.4byte	0x5eb
 969 0307 8003     		.2byte	0x380
 970 0309 0C       		.uleb128 0xc
 971 030a 0B130000 		.4byte	.LASF49
 972 030e 06       		.byte	0x6
 973 030f 47       		.byte	0x47
 974 0310 05060000 		.4byte	0x605
 975 0314 C003     		.2byte	0x3c0
 976 0316 0C       		.uleb128 0xc
 977 0317 FE030000 		.4byte	.LASF50
 978 031b 06       		.byte	0x6
 979 031c 48       		.byte	0x48
 980 031d D8000000 		.4byte	0xd8
 981 0321 0005     		.2byte	0x500
 982 0323 0C       		.uleb128 0xc
 983 0324 2D0E0000 		.4byte	.LASF51
 984 0328 06       		.byte	0x6
 985 0329 49       		.byte	0x49
 986 032a D8000000 		.4byte	0xd8
 987 032e 0405     		.2byte	0x504
 988 0330 0C       		.uleb128 0xc
 989 0331 15130000 		.4byte	.LASF52
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 115


 990 0335 06       		.byte	0x6
 991 0336 4A       		.byte	0x4a
 992 0337 DD000000 		.4byte	0xdd
 993 033b 0805     		.2byte	0x508
 994 033d 0C       		.uleb128 0xc
 995 033e 74020000 		.4byte	.LASF53
 996 0342 06       		.byte	0x6
 997 0343 4B       		.byte	0x4b
 998 0344 D8000000 		.4byte	0xd8
 999 0348 0C05     		.2byte	0x50c
 1000 034a 0C       		.uleb128 0xc
 1001 034b 8D020000 		.4byte	.LASF54
 1002 034f 06       		.byte	0x6
 1003 0350 4C       		.byte	0x4c
 1004 0351 D8000000 		.4byte	0xd8
 1005 0355 1005     		.2byte	0x510
 1006 0357 0C       		.uleb128 0xc
 1007 0358 6F0F0000 		.4byte	.LASF55
 1008 035c 06       		.byte	0x6
 1009 035d 4D       		.byte	0x4d
 1010 035e D8000000 		.4byte	0xd8
 1011 0362 1405     		.2byte	0x514
 1012 0364 0C       		.uleb128 0xc
 1013 0365 A9030000 		.4byte	.LASF56
 1014 0369 06       		.byte	0x6
 1015 036a 4E       		.byte	0x4e
 1016 036b D8000000 		.4byte	0xd8
 1017 036f 1805     		.2byte	0x518
 1018 0371 0C       		.uleb128 0xc
 1019 0372 FF0A0000 		.4byte	.LASF57
 1020 0376 06       		.byte	0x6
 1021 0377 4F       		.byte	0x4f
 1022 0378 D8000000 		.4byte	0xd8
 1023 037c 1C05     		.2byte	0x51c
 1024 037e 0C       		.uleb128 0xc
 1025 037f 0C0B0000 		.4byte	.LASF58
 1026 0383 06       		.byte	0x6
 1027 0384 50       		.byte	0x50
 1028 0385 DD000000 		.4byte	0xdd
 1029 0389 2005     		.2byte	0x520
 1030 038b 0C       		.uleb128 0xc
 1031 038c 1F130000 		.4byte	.LASF59
 1032 0390 06       		.byte	0x6
 1033 0391 51       		.byte	0x51
 1034 0392 0F060000 		.4byte	0x60f
 1035 0396 2405     		.2byte	0x524
 1036 0398 0C       		.uleb128 0xc
 1037 0399 F00A0000 		.4byte	.LASF60
 1038 039d 06       		.byte	0x6
 1039 039e 52       		.byte	0x52
 1040 039f D8000000 		.4byte	0xd8
 1041 03a3 2C05     		.2byte	0x52c
 1042 03a5 0C       		.uleb128 0xc
 1043 03a6 E7090000 		.4byte	.LASF61
 1044 03aa 06       		.byte	0x6
 1045 03ab 53       		.byte	0x53
 1046 03ac DD000000 		.4byte	0xdd
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 116


 1047 03b0 3005     		.2byte	0x530
 1048 03b2 0C       		.uleb128 0xc
 1049 03b3 29130000 		.4byte	.LASF62
 1050 03b7 06       		.byte	0x6
 1051 03b8 54       		.byte	0x54
 1052 03b9 19060000 		.4byte	0x619
 1053 03bd 3405     		.2byte	0x534
 1054 03bf 0C       		.uleb128 0xc
 1055 03c0 44110000 		.4byte	.LASF63
 1056 03c4 06       		.byte	0x6
 1057 03c5 55       		.byte	0x55
 1058 03c6 D8000000 		.4byte	0xd8
 1059 03ca 3C05     		.2byte	0x53c
 1060 03cc 0C       		.uleb128 0xc
 1061 03cd 33130000 		.4byte	.LASF64
 1062 03d1 06       		.byte	0x6
 1063 03d2 56       		.byte	0x56
 1064 03d3 23060000 		.4byte	0x623
 1065 03d7 4005     		.2byte	0x540
 1066 03d9 0C       		.uleb128 0xc
 1067 03da A7090000 		.4byte	.LASF65
 1068 03de 06       		.byte	0x6
 1069 03df 57       		.byte	0x57
 1070 03e0 D8000000 		.4byte	0xd8
 1071 03e4 8005     		.2byte	0x580
 1072 03e6 0C       		.uleb128 0xc
 1073 03e7 C00A0000 		.4byte	.LASF66
 1074 03eb 06       		.byte	0x6
 1075 03ec 58       		.byte	0x58
 1076 03ed D8000000 		.4byte	0xd8
 1077 03f1 8405     		.2byte	0x584
 1078 03f3 0C       		.uleb128 0xc
 1079 03f4 D00A0000 		.4byte	.LASF67
 1080 03f8 06       		.byte	0x6
 1081 03f9 59       		.byte	0x59
 1082 03fa D8000000 		.4byte	0xd8
 1083 03fe 8805     		.2byte	0x588
 1084 0400 0C       		.uleb128 0xc
 1085 0401 E00A0000 		.4byte	.LASF68
 1086 0405 06       		.byte	0x6
 1087 0406 5A       		.byte	0x5a
 1088 0407 D8000000 		.4byte	0xd8
 1089 040b 8C05     		.2byte	0x58c
 1090 040d 0C       		.uleb128 0xc
 1091 040e 45020000 		.4byte	.LASF69
 1092 0412 06       		.byte	0x6
 1093 0413 5B       		.byte	0x5b
 1094 0414 D8000000 		.4byte	0xd8
 1095 0418 9005     		.2byte	0x590
 1096 041a 0C       		.uleb128 0xc
 1097 041b 3D130000 		.4byte	.LASF70
 1098 041f 06       		.byte	0x6
 1099 0420 5C       		.byte	0x5c
 1100 0421 2D060000 		.4byte	0x62d
 1101 0425 9405     		.2byte	0x594
 1102 0427 0C       		.uleb128 0xc
 1103 0428 E9100000 		.4byte	.LASF71
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 117


 1104 042c 06       		.byte	0x6
 1105 042d 5D       		.byte	0x5d
 1106 042e 42060000 		.4byte	0x642
 1107 0432 0006     		.2byte	0x600
 1108 0434 0C       		.uleb128 0xc
 1109 0435 62170000 		.4byte	.LASF72
 1110 0439 06       		.byte	0x6
 1111 043a 5E       		.byte	0x5e
 1112 043b DD000000 		.4byte	0xdd
 1113 043f 3C06     		.2byte	0x63c
 1114 0441 0C       		.uleb128 0xc
 1115 0442 010C0000 		.4byte	.LASF73
 1116 0446 06       		.byte	0x6
 1117 0447 5F       		.byte	0x5f
 1118 0448 47060000 		.4byte	0x647
 1119 044c 4006     		.2byte	0x640
 1120 044e 0C       		.uleb128 0xc
 1121 044f 6D170000 		.4byte	.LASF74
 1122 0453 06       		.byte	0x6
 1123 0454 60       		.byte	0x60
 1124 0455 61060000 		.4byte	0x661
 1125 0459 7C06     		.2byte	0x67c
 1126 045b 0C       		.uleb128 0xc
 1127 045c C3190000 		.4byte	.LASF75
 1128 0460 06       		.byte	0x6
 1129 0461 61       		.byte	0x61
 1130 0462 D8000000 		.4byte	0xd8
 1131 0466 0007     		.2byte	0x700
 1132 0468 0C       		.uleb128 0xc
 1133 0469 170E0000 		.4byte	.LASF76
 1134 046d 06       		.byte	0x6
 1135 046e 62       		.byte	0x62
 1136 046f D8000000 		.4byte	0xd8
 1137 0473 0407     		.2byte	0x704
 1138 0475 0C       		.uleb128 0xc
 1139 0476 2E020000 		.4byte	.LASF77
 1140 047a 06       		.byte	0x6
 1141 047b 63       		.byte	0x63
 1142 047c D8000000 		.4byte	0xd8
 1143 0480 0807     		.2byte	0x708
 1144 0482 0C       		.uleb128 0xc
 1145 0483 A9130000 		.4byte	.LASF78
 1146 0487 06       		.byte	0x6
 1147 0488 64       		.byte	0x64
 1148 0489 DD000000 		.4byte	0xdd
 1149 048d 0C07     		.2byte	0x70c
 1150 048f 0C       		.uleb128 0xc
 1151 0490 DF040000 		.4byte	.LASF79
 1152 0494 06       		.byte	0x6
 1153 0495 65       		.byte	0x65
 1154 0496 D8000000 		.4byte	0xd8
 1155 049a 1007     		.2byte	0x710
 1156 049c 0C       		.uleb128 0xc
 1157 049d 78170000 		.4byte	.LASF80
 1158 04a1 06       		.byte	0x6
 1159 04a2 66       		.byte	0x66
 1160 04a3 7B060000 		.4byte	0x67b
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 118


 1161 04a7 1407     		.2byte	0x714
 1162 04a9 0C       		.uleb128 0xc
 1163 04aa 3E160000 		.4byte	.LASF81
 1164 04ae 06       		.byte	0x6
 1165 04af 67       		.byte	0x67
 1166 04b0 D8000000 		.4byte	0xd8
 1167 04b4 0008     		.2byte	0x800
 1168 04b6 0C       		.uleb128 0xc
 1169 04b7 D3010000 		.4byte	.LASF82
 1170 04bb 06       		.byte	0x6
 1171 04bc 68       		.byte	0x68
 1172 04bd D8000000 		.4byte	0xd8
 1173 04c1 0408     		.2byte	0x804
 1174 04c3 0C       		.uleb128 0xc
 1175 04c4 83170000 		.4byte	.LASF83
 1176 04c8 06       		.byte	0x6
 1177 04c9 69       		.byte	0x69
 1178 04ca 96060000 		.4byte	0x696
 1179 04ce 0808     		.2byte	0x808
 1180 04d0 0C       		.uleb128 0xc
 1181 04d1 6A110000 		.4byte	.LASF84
 1182 04d5 06       		.byte	0x6
 1183 04d6 6A       		.byte	0x6a
 1184 04d7 D8000000 		.4byte	0xd8
 1185 04db 007F     		.2byte	0x7f00
 1186 04dd 0C       		.uleb128 0xc
 1187 04de AA040000 		.4byte	.LASF85
 1188 04e2 06       		.byte	0x6
 1189 04e3 6B       		.byte	0x6b
 1190 04e4 D8000000 		.4byte	0xd8
 1191 04e8 047F     		.2byte	0x7f04
 1192 04ea 0C       		.uleb128 0xc
 1193 04eb 5F140000 		.4byte	.LASF86
 1194 04ef 06       		.byte	0x6
 1195 04f0 6C       		.byte	0x6c
 1196 04f1 D8000000 		.4byte	0xd8
 1197 04f5 087F     		.2byte	0x7f08
 1198 04f7 0C       		.uleb128 0xc
 1199 04f8 3B190000 		.4byte	.LASF87
 1200 04fc 06       		.byte	0x6
 1201 04fd 6D       		.byte	0x6d
 1202 04fe D8000000 		.4byte	0xd8
 1203 0502 0C7F     		.2byte	0x7f0c
 1204 0504 0C       		.uleb128 0xc
 1205 0505 8E170000 		.4byte	.LASF88
 1206 0509 06       		.byte	0x6
 1207 050a 6E       		.byte	0x6e
 1208 050b A0060000 		.4byte	0x6a0
 1209 050f 107F     		.2byte	0x7f10
 1210 0511 0C       		.uleb128 0xc
 1211 0512 88050000 		.4byte	.LASF89
 1212 0516 06       		.byte	0x6
 1213 0517 6F       		.byte	0x6f
 1214 0518 D8000000 		.4byte	0xd8
 1215 051c 307F     		.2byte	0x7f30
 1216 051e 0C       		.uleb128 0xc
 1217 051f 99170000 		.4byte	.LASF90
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 119


 1218 0523 06       		.byte	0x6
 1219 0524 70       		.byte	0x70
 1220 0525 BB060000 		.4byte	0x6bb
 1221 0529 347F     		.2byte	0x7f34
 1222 052b 0C       		.uleb128 0xc
 1223 052c 5A070000 		.4byte	.LASF91
 1224 0530 06       		.byte	0x6
 1225 0531 71       		.byte	0x71
 1226 0532 D8000000 		.4byte	0xd8
 1227 0536 10FF     		.2byte	0xff10
 1228 0538 0C       		.uleb128 0xc
 1229 0539 A4170000 		.4byte	.LASF92
 1230 053d 06       		.byte	0x6
 1231 053e 72       		.byte	0x72
 1232 053f DD000000 		.4byte	0xdd
 1233 0543 14FF     		.2byte	0xff14
 1234 0545 0C       		.uleb128 0xc
 1235 0546 AA060000 		.4byte	.LASF93
 1236 054a 06       		.byte	0x6
 1237 054b 73       		.byte	0x73
 1238 054c D8000000 		.4byte	0xd8
 1239 0550 18FF     		.2byte	0xff18
 1240 0552 0C       		.uleb128 0xc
 1241 0553 B6180000 		.4byte	.LASF94
 1242 0557 06       		.byte	0x6
 1243 0558 74       		.byte	0x74
 1244 0559 D8000000 		.4byte	0xd8
 1245 055d 1CFF     		.2byte	0xff1c
 1246 055f 0C       		.uleb128 0xc
 1247 0560 3B070000 		.4byte	.LASF95
 1248 0564 06       		.byte	0x6
 1249 0565 75       		.byte	0x75
 1250 0566 D8000000 		.4byte	0xd8
 1251 056a 20FF     		.2byte	0xff20
 1252 056c 0C       		.uleb128 0xc
 1253 056d 97130000 		.4byte	.LASF96
 1254 0571 06       		.byte	0x6
 1255 0572 76       		.byte	0x76
 1256 0573 D8000000 		.4byte	0xd8
 1257 0577 24FF     		.2byte	0xff24
 1258 0579 0C       		.uleb128 0xc
 1259 057a 730C0000 		.4byte	.LASF97
 1260 057e 06       		.byte	0x6
 1261 057f 77       		.byte	0x77
 1262 0580 D8000000 		.4byte	0xd8
 1263 0584 28FF     		.2byte	0xff28
 1264 0586 0C       		.uleb128 0xc
 1265 0587 860C0000 		.4byte	.LASF98
 1266 058b 06       		.byte	0x6
 1267 058c 78       		.byte	0x78
 1268 058d D8000000 		.4byte	0xd8
 1269 0591 2CFF     		.2byte	0xff2c
 1270 0593 00       		.byte	0
 1271 0594 05       		.uleb128 0x5
 1272 0595 E2000000 		.4byte	0xe2
 1273 0599 06       		.uleb128 0x6
 1274 059a 94050000 		.4byte	0x594
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 120


 1275 059e 07       		.uleb128 0x7
 1276 059f DD000000 		.4byte	0xdd
 1277 05a3 AE050000 		.4byte	0x5ae
 1278 05a7 08       		.uleb128 0x8
 1279 05a8 9E000000 		.4byte	0x9e
 1280 05ac 17       		.byte	0x17
 1281 05ad 00       		.byte	0
 1282 05ae 05       		.uleb128 0x5
 1283 05af 9E050000 		.4byte	0x59e
 1284 05b3 06       		.uleb128 0x6
 1285 05b4 AE050000 		.4byte	0x5ae
 1286 05b8 05       		.uleb128 0x5
 1287 05b9 02010000 		.4byte	0x102
 1288 05bd 05       		.uleb128 0x5
 1289 05be 12010000 		.4byte	0x112
 1290 05c2 06       		.uleb128 0x6
 1291 05c3 BD050000 		.4byte	0x5bd
 1292 05c7 05       		.uleb128 0x5
 1293 05c8 62010000 		.4byte	0x162
 1294 05cc 06       		.uleb128 0x6
 1295 05cd C7050000 		.4byte	0x5c7
 1296 05d1 07       		.uleb128 0x7
 1297 05d2 15020000 		.4byte	0x215
 1298 05d6 E1050000 		.4byte	0x5e1
 1299 05da 08       		.uleb128 0x8
 1300 05db 9E000000 		.4byte	0x9e
 1301 05df 03       		.byte	0x3
 1302 05e0 00       		.byte	0
 1303 05e1 05       		.uleb128 0x5
 1304 05e2 02010000 		.4byte	0x102
 1305 05e6 05       		.uleb128 0x5
 1306 05e7 02010000 		.4byte	0x102
 1307 05eb 05       		.uleb128 0x5
 1308 05ec 02010000 		.4byte	0x102
 1309 05f0 07       		.uleb128 0x7
 1310 05f1 DD000000 		.4byte	0xdd
 1311 05f5 00060000 		.4byte	0x600
 1312 05f9 08       		.uleb128 0x8
 1313 05fa 9E000000 		.4byte	0x9e
 1314 05fe 4F       		.byte	0x4f
 1315 05ff 00       		.byte	0
 1316 0600 05       		.uleb128 0x5
 1317 0601 F0050000 		.4byte	0x5f0
 1318 0605 06       		.uleb128 0x6
 1319 0606 00060000 		.4byte	0x600
 1320 060a 05       		.uleb128 0x5
 1321 060b E2000000 		.4byte	0xe2
 1322 060f 06       		.uleb128 0x6
 1323 0610 0A060000 		.4byte	0x60a
 1324 0614 05       		.uleb128 0x5
 1325 0615 E2000000 		.4byte	0xe2
 1326 0619 06       		.uleb128 0x6
 1327 061a 14060000 		.4byte	0x614
 1328 061e 05       		.uleb128 0x5
 1329 061f 42010000 		.4byte	0x142
 1330 0623 06       		.uleb128 0x6
 1331 0624 1E060000 		.4byte	0x61e
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 121


 1332 0628 05       		.uleb128 0x5
 1333 0629 52010000 		.4byte	0x152
 1334 062d 06       		.uleb128 0x6
 1335 062e 28060000 		.4byte	0x628
 1336 0632 07       		.uleb128 0x7
 1337 0633 D8000000 		.4byte	0xd8
 1338 0637 42060000 		.4byte	0x642
 1339 063b 08       		.uleb128 0x8
 1340 063c 9E000000 		.4byte	0x9e
 1341 0640 0E       		.byte	0xe
 1342 0641 00       		.byte	0
 1343 0642 05       		.uleb128 0x5
 1344 0643 32060000 		.4byte	0x632
 1345 0647 05       		.uleb128 0x5
 1346 0648 32060000 		.4byte	0x632
 1347 064c 07       		.uleb128 0x7
 1348 064d DD000000 		.4byte	0xdd
 1349 0651 5C060000 		.4byte	0x65c
 1350 0655 08       		.uleb128 0x8
 1351 0656 9E000000 		.4byte	0x9e
 1352 065a 20       		.byte	0x20
 1353 065b 00       		.byte	0
 1354 065c 05       		.uleb128 0x5
 1355 065d 4C060000 		.4byte	0x64c
 1356 0661 06       		.uleb128 0x6
 1357 0662 5C060000 		.4byte	0x65c
 1358 0666 07       		.uleb128 0x7
 1359 0667 DD000000 		.4byte	0xdd
 1360 066b 76060000 		.4byte	0x676
 1361 066f 08       		.uleb128 0x8
 1362 0670 9E000000 		.4byte	0x9e
 1363 0674 3A       		.byte	0x3a
 1364 0675 00       		.byte	0
 1365 0676 05       		.uleb128 0x5
 1366 0677 66060000 		.4byte	0x666
 1367 067b 06       		.uleb128 0x6
 1368 067c 76060000 		.4byte	0x676
 1369 0680 07       		.uleb128 0x7
 1370 0681 DD000000 		.4byte	0xdd
 1371 0685 91060000 		.4byte	0x691
 1372 0689 0D       		.uleb128 0xd
 1373 068a 9E000000 		.4byte	0x9e
 1374 068e BD1D     		.2byte	0x1dbd
 1375 0690 00       		.byte	0
 1376 0691 05       		.uleb128 0x5
 1377 0692 80060000 		.4byte	0x680
 1378 0696 06       		.uleb128 0x6
 1379 0697 91060000 		.4byte	0x691
 1380 069b 05       		.uleb128 0x5
 1381 069c F2000000 		.4byte	0xf2
 1382 06a0 06       		.uleb128 0x6
 1383 06a1 9B060000 		.4byte	0x69b
 1384 06a5 07       		.uleb128 0x7
 1385 06a6 DD000000 		.4byte	0xdd
 1386 06aa B6060000 		.4byte	0x6b6
 1387 06ae 0D       		.uleb128 0xd
 1388 06af 9E000000 		.4byte	0x9e
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 122


 1389 06b3 F61F     		.2byte	0x1ff6
 1390 06b5 00       		.byte	0
 1391 06b6 05       		.uleb128 0x5
 1392 06b7 A5060000 		.4byte	0x6a5
 1393 06bb 06       		.uleb128 0x6
 1394 06bc B6060000 		.4byte	0x6b6
 1395 06c0 04       		.uleb128 0x4
 1396 06c1 520F0000 		.4byte	.LASF99
 1397 06c5 06       		.byte	0x6
 1398 06c6 79       		.byte	0x79
 1399 06c7 20020000 		.4byte	0x220
 1400 06cb 0B       		.uleb128 0xb
 1401 06cc 04FF     		.2byte	0xff04
 1402 06ce 07       		.byte	0x7
 1403 06cf 21       		.byte	0x21
 1404 06d0 EC070000 		.4byte	0x7ec
 1405 06d4 0E       		.uleb128 0xe
 1406 06d5 43544C00 		.ascii	"CTL\000"
 1407 06d9 07       		.byte	0x7
 1408 06da 22       		.byte	0x22
 1409 06db D8000000 		.4byte	0xd8
 1410 06df 00       		.byte	0
 1411 06e0 0A       		.uleb128 0xa
 1412 06e1 2F000000 		.4byte	.LASF20
 1413 06e5 07       		.byte	0x7
 1414 06e6 23       		.byte	0x23
 1415 06e7 DD000000 		.4byte	0xdd
 1416 06eb 04       		.byte	0x4
 1417 06ec 0A       		.uleb128 0xa
 1418 06ed 7B110000 		.4byte	.LASF100
 1419 06f1 07       		.byte	0x7
 1420 06f2 24       		.byte	0x24
 1421 06f3 D8000000 		.4byte	0xd8
 1422 06f7 08       		.byte	0x8
 1423 06f8 0A       		.uleb128 0xa
 1424 06f9 EC140000 		.4byte	.LASF101
 1425 06fd 07       		.byte	0x7
 1426 06fe 25       		.byte	0x25
 1427 06ff D8000000 		.4byte	0xd8
 1428 0703 0C       		.byte	0xc
 1429 0704 0A       		.uleb128 0xa
 1430 0705 3D1A0000 		.4byte	.LASF102
 1431 0709 07       		.byte	0x7
 1432 070a 26       		.byte	0x26
 1433 070b DD000000 		.4byte	0xdd
 1434 070f 10       		.byte	0x10
 1435 0710 0A       		.uleb128 0xa
 1436 0711 14040000 		.4byte	.LASF103
 1437 0715 07       		.byte	0x7
 1438 0716 27       		.byte	0x27
 1439 0717 D8000000 		.4byte	0xd8
 1440 071b 14       		.byte	0x14
 1441 071c 0A       		.uleb128 0xa
 1442 071d 46180000 		.4byte	.LASF104
 1443 0721 07       		.byte	0x7
 1444 0722 28       		.byte	0x28
 1445 0723 D8000000 		.4byte	0xd8
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 123


 1446 0727 18       		.byte	0x18
 1447 0728 0A       		.uleb128 0xa
 1448 0729 BE090000 		.4byte	.LASF105
 1449 072d 07       		.byte	0x7
 1450 072e 29       		.byte	0x29
 1451 072f D8000000 		.4byte	0xd8
 1452 0733 1C       		.byte	0x1c
 1453 0734 0A       		.uleb128 0xa
 1454 0735 E50B0000 		.4byte	.LASF106
 1455 0739 07       		.byte	0x7
 1456 073a 2A       		.byte	0x2a
 1457 073b D8000000 		.4byte	0xd8
 1458 073f 20       		.byte	0x20
 1459 0740 0A       		.uleb128 0xa
 1460 0741 CD190000 		.4byte	.LASF107
 1461 0745 07       		.byte	0x7
 1462 0746 2B       		.byte	0x2b
 1463 0747 D8000000 		.4byte	0xd8
 1464 074b 24       		.byte	0x24
 1465 074c 0A       		.uleb128 0xa
 1466 074d E91A0000 		.4byte	.LASF108
 1467 0751 07       		.byte	0x7
 1468 0752 2C       		.byte	0x2c
 1469 0753 D8000000 		.4byte	0xd8
 1470 0757 28       		.byte	0x28
 1471 0758 0A       		.uleb128 0xa
 1472 0759 A5060000 		.4byte	.LASF109
 1473 075d 07       		.byte	0x7
 1474 075e 2D       		.byte	0x2d
 1475 075f D8000000 		.4byte	0xd8
 1476 0763 2C       		.byte	0x2c
 1477 0764 0A       		.uleb128 0xa
 1478 0765 51040000 		.4byte	.LASF110
 1479 0769 07       		.byte	0x7
 1480 076a 2E       		.byte	0x2e
 1481 076b D8000000 		.4byte	0xd8
 1482 076f 30       		.byte	0x30
 1483 0770 0A       		.uleb128 0xa
 1484 0771 8E180000 		.4byte	.LASF111
 1485 0775 07       		.byte	0x7
 1486 0776 2F       		.byte	0x2f
 1487 0777 D8000000 		.4byte	0xd8
 1488 077b 34       		.byte	0x34
 1489 077c 0A       		.uleb128 0xa
 1490 077d A0150000 		.4byte	.LASF112
 1491 0781 07       		.byte	0x7
 1492 0782 30       		.byte	0x30
 1493 0783 DD000000 		.4byte	0xdd
 1494 0787 38       		.byte	0x38
 1495 0788 0A       		.uleb128 0xa
 1496 0789 94160000 		.4byte	.LASF113
 1497 078d 07       		.byte	0x7
 1498 078e 31       		.byte	0x31
 1499 078f DD000000 		.4byte	0xdd
 1500 0793 3C       		.byte	0x3c
 1501 0794 0A       		.uleb128 0xa
 1502 0795 2C0C0000 		.4byte	.LASF114
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 124


 1503 0799 07       		.byte	0x7
 1504 079a 32       		.byte	0x32
 1505 079b DD000000 		.4byte	0xdd
 1506 079f 40       		.byte	0x40
 1507 07a0 0A       		.uleb128 0xa
 1508 07a1 97070000 		.4byte	.LASF115
 1509 07a5 07       		.byte	0x7
 1510 07a6 33       		.byte	0x33
 1511 07a7 D8000000 		.4byte	0xd8
 1512 07ab 44       		.byte	0x44
 1513 07ac 0A       		.uleb128 0xa
 1514 07ad 50140000 		.4byte	.LASF116
 1515 07b1 07       		.byte	0x7
 1516 07b2 34       		.byte	0x34
 1517 07b3 D8000000 		.4byte	0xd8
 1518 07b7 48       		.byte	0x48
 1519 07b8 0A       		.uleb128 0xa
 1520 07b9 16070000 		.4byte	.LASF31
 1521 07bd 07       		.byte	0x7
 1522 07be 35       		.byte	0x35
 1523 07bf 02080000 		.4byte	0x802
 1524 07c3 4C       		.byte	0x4c
 1525 07c4 0C       		.uleb128 0xc
 1526 07c5 AF0E0000 		.4byte	.LASF117
 1527 07c9 07       		.byte	0x7
 1528 07ca 36       		.byte	0x36
 1529 07cb 07080000 		.4byte	0x807
 1530 07cf 0010     		.2byte	0x1000
 1531 07d1 0C       		.uleb128 0xc
 1532 07d2 F7120000 		.4byte	.LASF40
 1533 07d6 07       		.byte	0x7
 1534 07d7 37       		.byte	0x37
 1535 07d8 22080000 		.4byte	0x822
 1536 07dc 0011     		.2byte	0x1100
 1537 07de 0C       		.uleb128 0xc
 1538 07df AD0D0000 		.4byte	.LASF118
 1539 07e3 07       		.byte	0x7
 1540 07e4 38       		.byte	0x38
 1541 07e5 D8000000 		.4byte	0xd8
 1542 07e9 00FF     		.2byte	0xff00
 1543 07eb 00       		.byte	0
 1544 07ec 07       		.uleb128 0x7
 1545 07ed DD000000 		.4byte	0xdd
 1546 07f1 FD070000 		.4byte	0x7fd
 1547 07f5 0D       		.uleb128 0xd
 1548 07f6 9E000000 		.4byte	0x9e
 1549 07fa EC03     		.2byte	0x3ec
 1550 07fc 00       		.byte	0
 1551 07fd 05       		.uleb128 0x5
 1552 07fe EC070000 		.4byte	0x7ec
 1553 0802 06       		.uleb128 0x6
 1554 0803 FD070000 		.4byte	0x7fd
 1555 0807 05       		.uleb128 0x5
 1556 0808 22010000 		.4byte	0x122
 1557 080c 07       		.uleb128 0x7
 1558 080d DD000000 		.4byte	0xdd
 1559 0811 1D080000 		.4byte	0x81d
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 125


 1560 0815 0D       		.uleb128 0xd
 1561 0816 9E000000 		.4byte	0x9e
 1562 081a 7F3B     		.2byte	0x3b7f
 1563 081c 00       		.byte	0
 1564 081d 05       		.uleb128 0x5
 1565 081e 0C080000 		.4byte	0x80c
 1566 0822 06       		.uleb128 0x6
 1567 0823 1D080000 		.4byte	0x81d
 1568 0827 04       		.uleb128 0x4
 1569 0828 8E0D0000 		.4byte	.LASF119
 1570 082c 07       		.byte	0x7
 1571 082d 39       		.byte	0x39
 1572 082e CB060000 		.4byte	0x6cb
 1573 0832 09       		.uleb128 0x9
 1574 0833 80       		.byte	0x80
 1575 0834 08       		.byte	0x8
 1576 0835 22       		.byte	0x22
 1577 0836 06090000 		.4byte	0x906
 1578 083a 0E       		.uleb128 0xe
 1579 083b 4F555400 		.ascii	"OUT\000"
 1580 083f 08       		.byte	0x8
 1581 0840 23       		.byte	0x23
 1582 0841 D8000000 		.4byte	0xd8
 1583 0845 00       		.byte	0
 1584 0846 0A       		.uleb128 0xa
 1585 0847 0E070000 		.4byte	.LASF120
 1586 084b 08       		.byte	0x8
 1587 084c 24       		.byte	0x24
 1588 084d D8000000 		.4byte	0xd8
 1589 0851 04       		.byte	0x4
 1590 0852 0A       		.uleb128 0xa
 1591 0853 A20A0000 		.4byte	.LASF121
 1592 0857 08       		.byte	0x8
 1593 0858 25       		.byte	0x25
 1594 0859 D8000000 		.4byte	0xd8
 1595 085d 08       		.byte	0x8
 1596 085e 0A       		.uleb128 0xa
 1597 085f 0C150000 		.4byte	.LASF122
 1598 0863 08       		.byte	0x8
 1599 0864 26       		.byte	0x26
 1600 0865 D8000000 		.4byte	0xd8
 1601 0869 0C       		.byte	0xc
 1602 086a 0E       		.uleb128 0xe
 1603 086b 494E00   		.ascii	"IN\000"
 1604 086e 08       		.byte	0x8
 1605 086f 27       		.byte	0x27
 1606 0870 DD000000 		.4byte	0xdd
 1607 0874 10       		.byte	0x10
 1608 0875 0A       		.uleb128 0xa
 1609 0876 A5060000 		.4byte	.LASF109
 1610 087a 08       		.byte	0x8
 1611 087b 28       		.byte	0x28
 1612 087c D8000000 		.4byte	0xd8
 1613 0880 14       		.byte	0x14
 1614 0881 0A       		.uleb128 0xa
 1615 0882 8E180000 		.4byte	.LASF111
 1616 0886 08       		.byte	0x8
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 126


 1617 0887 29       		.byte	0x29
 1618 0888 D8000000 		.4byte	0xd8
 1619 088c 18       		.byte	0x18
 1620 088d 0A       		.uleb128 0xa
 1621 088e A0150000 		.4byte	.LASF112
 1622 0892 08       		.byte	0x8
 1623 0893 2A       		.byte	0x2a
 1624 0894 DD000000 		.4byte	0xdd
 1625 0898 1C       		.byte	0x1c
 1626 0899 0A       		.uleb128 0xa
 1627 089a 51040000 		.4byte	.LASF110
 1628 089e 08       		.byte	0x8
 1629 089f 2B       		.byte	0x2b
 1630 08a0 D8000000 		.4byte	0xd8
 1631 08a4 20       		.byte	0x20
 1632 08a5 0A       		.uleb128 0xa
 1633 08a6 40170000 		.4byte	.LASF123
 1634 08aa 08       		.byte	0x8
 1635 08ab 2C       		.byte	0x2c
 1636 08ac D8000000 		.4byte	0xd8
 1637 08b0 24       		.byte	0x24
 1638 08b1 0E       		.uleb128 0xe
 1639 08b2 43464700 		.ascii	"CFG\000"
 1640 08b6 08       		.byte	0x8
 1641 08b7 2D       		.byte	0x2d
 1642 08b8 D8000000 		.4byte	0xd8
 1643 08bc 28       		.byte	0x28
 1644 08bd 0A       		.uleb128 0xa
 1645 08be 67050000 		.4byte	.LASF124
 1646 08c2 08       		.byte	0x8
 1647 08c3 2E       		.byte	0x2e
 1648 08c4 D8000000 		.4byte	0xd8
 1649 08c8 2C       		.byte	0x2c
 1650 08c9 0A       		.uleb128 0xa
 1651 08ca B6090000 		.4byte	.LASF125
 1652 08ce 08       		.byte	0x8
 1653 08cf 2F       		.byte	0x2f
 1654 08d0 D8000000 		.4byte	0xd8
 1655 08d4 30       		.byte	0x30
 1656 08d5 0A       		.uleb128 0xa
 1657 08d6 3D020000 		.4byte	.LASF126
 1658 08da 08       		.byte	0x8
 1659 08db 30       		.byte	0x30
 1660 08dc D8000000 		.4byte	0xd8
 1661 08e0 34       		.byte	0x34
 1662 08e1 0A       		.uleb128 0xa
 1663 08e2 2F000000 		.4byte	.LASF20
 1664 08e6 08       		.byte	0x8
 1665 08e7 31       		.byte	0x31
 1666 08e8 DD000000 		.4byte	0xdd
 1667 08ec 38       		.byte	0x38
 1668 08ed 0A       		.uleb128 0xa
 1669 08ee 8A140000 		.4byte	.LASF127
 1670 08f2 08       		.byte	0x8
 1671 08f3 32       		.byte	0x32
 1672 08f4 D8000000 		.4byte	0xd8
 1673 08f8 3C       		.byte	0x3c
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 127


 1674 08f9 0A       		.uleb128 0xa
 1675 08fa 16070000 		.4byte	.LASF31
 1676 08fe 08       		.byte	0x8
 1677 08ff 33       		.byte	0x33
 1678 0900 0B090000 		.4byte	0x90b
 1679 0904 40       		.byte	0x40
 1680 0905 00       		.byte	0
 1681 0906 05       		.uleb128 0x5
 1682 0907 42010000 		.4byte	0x142
 1683 090b 06       		.uleb128 0x6
 1684 090c 06090000 		.4byte	0x906
 1685 0910 04       		.uleb128 0x4
 1686 0911 FB130000 		.4byte	.LASF128
 1687 0915 08       		.byte	0x8
 1688 0916 34       		.byte	0x34
 1689 0917 32080000 		.4byte	0x832
 1690 091b 0B       		.uleb128 0xb
 1691 091c 2440     		.2byte	0x4024
 1692 091e 08       		.byte	0x8
 1693 091f 39       		.byte	0x39
 1694 0920 A6090000 		.4byte	0x9a6
 1695 0924 0E       		.uleb128 0xe
 1696 0925 50525400 		.ascii	"PRT\000"
 1697 0929 08       		.byte	0x8
 1698 092a 3A       		.byte	0x3a
 1699 092b A6090000 		.4byte	0x9a6
 1700 092f 00       		.byte	0
 1701 0930 0C       		.uleb128 0xc
 1702 0931 43000000 		.4byte	.LASF129
 1703 0935 08       		.byte	0x8
 1704 0936 3B       		.byte	0x3b
 1705 0937 DD000000 		.4byte	0xdd
 1706 093b 0040     		.2byte	0x4000
 1707 093d 0C       		.uleb128 0xc
 1708 093e 4F000000 		.4byte	.LASF130
 1709 0942 08       		.byte	0x8
 1710 0943 3C       		.byte	0x3c
 1711 0944 DD000000 		.4byte	0xdd
 1712 0948 0440     		.2byte	0x4004
 1713 094a 0C       		.uleb128 0xc
 1714 094b 5B000000 		.4byte	.LASF131
 1715 094f 08       		.byte	0x8
 1716 0950 3D       		.byte	0x3d
 1717 0951 DD000000 		.4byte	0xdd
 1718 0955 0840     		.2byte	0x4008
 1719 0957 0C       		.uleb128 0xc
 1720 0958 67000000 		.4byte	.LASF132
 1721 095c 08       		.byte	0x8
 1722 095d 3E       		.byte	0x3e
 1723 095e DD000000 		.4byte	0xdd
 1724 0962 0C40     		.2byte	0x400c
 1725 0964 0C       		.uleb128 0xc
 1726 0965 38000000 		.4byte	.LASF133
 1727 0969 08       		.byte	0x8
 1728 096a 3F       		.byte	0x3f
 1729 096b DD000000 		.4byte	0xdd
 1730 096f 1040     		.2byte	0x4010
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 128


 1731 0971 0C       		.uleb128 0xc
 1732 0972 EF0B0000 		.4byte	.LASF134
 1733 0976 08       		.byte	0x8
 1734 0977 40       		.byte	0x40
 1735 0978 D8000000 		.4byte	0xd8
 1736 097c 1440     		.2byte	0x4014
 1737 097e 0C       		.uleb128 0xc
 1738 097f 21190000 		.4byte	.LASF135
 1739 0983 08       		.byte	0x8
 1740 0984 41       		.byte	0x41
 1741 0985 D8000000 		.4byte	0xd8
 1742 0989 1840     		.2byte	0x4018
 1743 098b 0C       		.uleb128 0xc
 1744 098c 82110000 		.4byte	.LASF136
 1745 0990 08       		.byte	0x8
 1746 0991 42       		.byte	0x42
 1747 0992 DD000000 		.4byte	0xdd
 1748 0996 1C40     		.2byte	0x401c
 1749 0998 0C       		.uleb128 0xc
 1750 0999 EC110000 		.4byte	.LASF137
 1751 099d 08       		.byte	0x8
 1752 099e 43       		.byte	0x43
 1753 099f D8000000 		.4byte	0xd8
 1754 09a3 2040     		.2byte	0x4020
 1755 09a5 00       		.byte	0
 1756 09a6 07       		.uleb128 0x7
 1757 09a7 10090000 		.4byte	0x910
 1758 09ab B6090000 		.4byte	0x9b6
 1759 09af 08       		.uleb128 0x8
 1760 09b0 9E000000 		.4byte	0x9e
 1761 09b4 7F       		.byte	0x7f
 1762 09b5 00       		.byte	0
 1763 09b6 04       		.uleb128 0x4
 1764 09b7 67060000 		.4byte	.LASF138
 1765 09bb 08       		.byte	0x8
 1766 09bc 44       		.byte	0x44
 1767 09bd 1B090000 		.4byte	0x91b
 1768 09c1 0F       		.uleb128 0xf
 1769 09c2 73000000 		.4byte	.LASF139
 1770 09c6 09       		.byte	0x9
 1771 09c7 2806     		.2byte	0x628
 1772 09c9 C0060000 		.4byte	0x6c0
 1773 09cd 0F       		.uleb128 0xf
 1774 09ce 1A000000 		.4byte	.LASF140
 1775 09d2 09       		.byte	0x9
 1776 09d3 2906     		.2byte	0x629
 1777 09d5 27080000 		.4byte	0x827
 1778 09d9 0F       		.uleb128 0xf
 1779 09da 13190000 		.4byte	.LASF141
 1780 09de 09       		.byte	0x9
 1781 09df 3106     		.2byte	0x631
 1782 09e1 10090000 		.4byte	0x910
 1783 09e5 0F       		.uleb128 0xf
 1784 09e6 F0160000 		.4byte	.LASF142
 1785 09ea 09       		.byte	0x9
 1786 09eb 3206     		.2byte	0x632
 1787 09ed B6090000 		.4byte	0x9b6
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 129


 1788 09f1 09       		.uleb128 0x9
 1789 09f2 B8       		.byte	0xb8
 1790 09f3 0A       		.byte	0xa
 1791 09f4 34       		.byte	0x34
 1792 09f5 020E0000 		.4byte	0xe02
 1793 09f9 0A       		.uleb128 0xa
 1794 09fa 83020000 		.4byte	.LASF143
 1795 09fe 0A       		.byte	0xa
 1796 09ff 37       		.byte	0x37
 1797 0a00 CD000000 		.4byte	0xcd
 1798 0a04 00       		.byte	0
 1799 0a05 0A       		.uleb128 0xa
 1800 0a06 9D0D0000 		.4byte	.LASF144
 1801 0a0a 0A       		.byte	0xa
 1802 0a0b 38       		.byte	0x38
 1803 0a0c CD000000 		.4byte	0xcd
 1804 0a10 04       		.byte	0x4
 1805 0a11 0A       		.uleb128 0xa
 1806 0a12 07010000 		.4byte	.LASF145
 1807 0a16 0A       		.byte	0xa
 1808 0a17 39       		.byte	0x39
 1809 0a18 CD000000 		.4byte	0xcd
 1810 0a1c 08       		.byte	0x8
 1811 0a1d 0A       		.uleb128 0xa
 1812 0a1e DE000000 		.4byte	.LASF146
 1813 0a22 0A       		.byte	0xa
 1814 0a23 3A       		.byte	0x3a
 1815 0a24 CD000000 		.4byte	0xcd
 1816 0a28 0C       		.byte	0xc
 1817 0a29 0A       		.uleb128 0xa
 1818 0a2a E3110000 		.4byte	.LASF147
 1819 0a2e 0A       		.byte	0xa
 1820 0a2f 3B       		.byte	0x3b
 1821 0a30 CD000000 		.4byte	0xcd
 1822 0a34 10       		.byte	0x10
 1823 0a35 0A       		.uleb128 0xa
 1824 0a36 8E100000 		.4byte	.LASF148
 1825 0a3a 0A       		.byte	0xa
 1826 0a3b 3C       		.byte	0x3c
 1827 0a3c CD000000 		.4byte	0xcd
 1828 0a40 14       		.byte	0x14
 1829 0a41 0A       		.uleb128 0xa
 1830 0a42 F80B0000 		.4byte	.LASF149
 1831 0a46 0A       		.byte	0xa
 1832 0a47 3D       		.byte	0x3d
 1833 0a48 CD000000 		.4byte	0xcd
 1834 0a4c 18       		.byte	0x18
 1835 0a4d 0A       		.uleb128 0xa
 1836 0a4e F0190000 		.4byte	.LASF150
 1837 0a52 0A       		.byte	0xa
 1838 0a53 3E       		.byte	0x3e
 1839 0a54 CD000000 		.4byte	0xcd
 1840 0a58 1C       		.byte	0x1c
 1841 0a59 0A       		.uleb128 0xa
 1842 0a5a 160F0000 		.4byte	.LASF151
 1843 0a5e 0A       		.byte	0xa
 1844 0a5f 3F       		.byte	0x3f
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 130


 1845 0a60 CD000000 		.4byte	0xcd
 1846 0a64 20       		.byte	0x20
 1847 0a65 0A       		.uleb128 0xa
 1848 0a66 2D0F0000 		.4byte	.LASF152
 1849 0a6a 0A       		.byte	0xa
 1850 0a6b 40       		.byte	0x40
 1851 0a6c CD000000 		.4byte	0xcd
 1852 0a70 24       		.byte	0x24
 1853 0a71 0A       		.uleb128 0xa
 1854 0a72 6A130000 		.4byte	.LASF153
 1855 0a76 0A       		.byte	0xa
 1856 0a77 43       		.byte	0x43
 1857 0a78 AC000000 		.4byte	0xac
 1858 0a7c 28       		.byte	0x28
 1859 0a7d 0A       		.uleb128 0xa
 1860 0a7e EE060000 		.4byte	.LASF154
 1861 0a82 0A       		.byte	0xa
 1862 0a83 44       		.byte	0x44
 1863 0a84 AC000000 		.4byte	0xac
 1864 0a88 29       		.byte	0x29
 1865 0a89 0A       		.uleb128 0xa
 1866 0a8a 7B120000 		.4byte	.LASF155
 1867 0a8e 0A       		.byte	0xa
 1868 0a8f 45       		.byte	0x45
 1869 0a90 AC000000 		.4byte	0xac
 1870 0a94 2A       		.byte	0x2a
 1871 0a95 0A       		.uleb128 0xa
 1872 0a96 C7130000 		.4byte	.LASF156
 1873 0a9a 0A       		.byte	0xa
 1874 0a9b 46       		.byte	0x46
 1875 0a9c AC000000 		.4byte	0xac
 1876 0aa0 2B       		.byte	0x2b
 1877 0aa1 0A       		.uleb128 0xa
 1878 0aa2 8B130000 		.4byte	.LASF157
 1879 0aa6 0A       		.byte	0xa
 1880 0aa7 47       		.byte	0x47
 1881 0aa8 AC000000 		.4byte	0xac
 1882 0aac 2C       		.byte	0x2c
 1883 0aad 0A       		.uleb128 0xa
 1884 0aae 31160000 		.4byte	.LASF158
 1885 0ab2 0A       		.byte	0xa
 1886 0ab3 48       		.byte	0x48
 1887 0ab4 AC000000 		.4byte	0xac
 1888 0ab8 2D       		.byte	0x2d
 1889 0ab9 0A       		.uleb128 0xa
 1890 0aba 70120000 		.4byte	.LASF159
 1891 0abe 0A       		.byte	0xa
 1892 0abf 49       		.byte	0x49
 1893 0ac0 AC000000 		.4byte	0xac
 1894 0ac4 2E       		.byte	0x2e
 1895 0ac5 0A       		.uleb128 0xa
 1896 0ac6 D7190000 		.4byte	.LASF160
 1897 0aca 0A       		.byte	0xa
 1898 0acb 4A       		.byte	0x4a
 1899 0acc AC000000 		.4byte	0xac
 1900 0ad0 2F       		.byte	0x2f
 1901 0ad1 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 131


 1902 0ad2 D3040000 		.4byte	.LASF161
 1903 0ad6 0A       		.byte	0xa
 1904 0ad7 4B       		.byte	0x4b
 1905 0ad8 AC000000 		.4byte	0xac
 1906 0adc 30       		.byte	0x30
 1907 0add 0A       		.uleb128 0xa
 1908 0ade F8100000 		.4byte	.LASF162
 1909 0ae2 0A       		.byte	0xa
 1910 0ae3 4E       		.byte	0x4e
 1911 0ae4 AC000000 		.4byte	0xac
 1912 0ae8 31       		.byte	0x31
 1913 0ae9 0A       		.uleb128 0xa
 1914 0aea 4D190000 		.4byte	.LASF163
 1915 0aee 0A       		.byte	0xa
 1916 0aef 4F       		.byte	0x4f
 1917 0af0 AC000000 		.4byte	0xac
 1918 0af4 32       		.byte	0x32
 1919 0af5 0A       		.uleb128 0xa
 1920 0af6 C4100000 		.4byte	.LASF164
 1921 0afa 0A       		.byte	0xa
 1922 0afb 50       		.byte	0x50
 1923 0afc AC000000 		.4byte	0xac
 1924 0b00 33       		.byte	0x33
 1925 0b01 0A       		.uleb128 0xa
 1926 0b02 16160000 		.4byte	.LASF165
 1927 0b06 0A       		.byte	0xa
 1928 0b07 51       		.byte	0x51
 1929 0b08 AC000000 		.4byte	0xac
 1930 0b0c 34       		.byte	0x34
 1931 0b0d 0A       		.uleb128 0xa
 1932 0b0e AB070000 		.4byte	.LASF166
 1933 0b12 0A       		.byte	0xa
 1934 0b13 52       		.byte	0x52
 1935 0b14 B7000000 		.4byte	0xb7
 1936 0b18 36       		.byte	0x36
 1937 0b19 0A       		.uleb128 0xa
 1938 0b1a 09040000 		.4byte	.LASF167
 1939 0b1e 0A       		.byte	0xa
 1940 0b1f 53       		.byte	0x53
 1941 0b20 B7000000 		.4byte	0xb7
 1942 0b24 38       		.byte	0x38
 1943 0b25 0A       		.uleb128 0xa
 1944 0b26 D4030000 		.4byte	.LASF168
 1945 0b2a 0A       		.byte	0xa
 1946 0b2b 54       		.byte	0x54
 1947 0b2c B7000000 		.4byte	0xb7
 1948 0b30 3A       		.byte	0x3a
 1949 0b31 0A       		.uleb128 0xa
 1950 0b32 2E1A0000 		.4byte	.LASF169
 1951 0b36 0A       		.byte	0xa
 1952 0b37 55       		.byte	0x55
 1953 0b38 AC000000 		.4byte	0xac
 1954 0b3c 3C       		.byte	0x3c
 1955 0b3d 0A       		.uleb128 0xa
 1956 0b3e 450A0000 		.4byte	.LASF170
 1957 0b42 0A       		.byte	0xa
 1958 0b43 56       		.byte	0x56
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 132


 1959 0b44 AC000000 		.4byte	0xac
 1960 0b48 3D       		.byte	0x3d
 1961 0b49 0A       		.uleb128 0xa
 1962 0b4a 39120000 		.4byte	.LASF171
 1963 0b4e 0A       		.byte	0xa
 1964 0b4f 57       		.byte	0x57
 1965 0b50 AC000000 		.4byte	0xac
 1966 0b54 3E       		.byte	0x3e
 1967 0b55 0A       		.uleb128 0xa
 1968 0b56 B9000000 		.4byte	.LASF172
 1969 0b5a 0A       		.byte	0xa
 1970 0b5b 58       		.byte	0x58
 1971 0b5c AC000000 		.4byte	0xac
 1972 0b60 3F       		.byte	0x3f
 1973 0b61 0A       		.uleb128 0xa
 1974 0b62 F6010000 		.4byte	.LASF173
 1975 0b66 0A       		.byte	0xa
 1976 0b67 59       		.byte	0x59
 1977 0b68 AC000000 		.4byte	0xac
 1978 0b6c 40       		.byte	0x40
 1979 0b6d 0A       		.uleb128 0xa
 1980 0b6e 18110000 		.4byte	.LASF174
 1981 0b72 0A       		.byte	0xa
 1982 0b73 5A       		.byte	0x5a
 1983 0b74 AC000000 		.4byte	0xac
 1984 0b78 41       		.byte	0x41
 1985 0b79 0A       		.uleb128 0xa
 1986 0b7a F3180000 		.4byte	.LASF175
 1987 0b7e 0A       		.byte	0xa
 1988 0b7f 5B       		.byte	0x5b
 1989 0b80 AC000000 		.4byte	0xac
 1990 0b84 42       		.byte	0x42
 1991 0b85 0A       		.uleb128 0xa
 1992 0b86 B20D0000 		.4byte	.LASF176
 1993 0b8a 0A       		.byte	0xa
 1994 0b8b 5C       		.byte	0x5c
 1995 0b8c AC000000 		.4byte	0xac
 1996 0b90 43       		.byte	0x43
 1997 0b91 0A       		.uleb128 0xa
 1998 0b92 BD0D0000 		.4byte	.LASF177
 1999 0b96 0A       		.byte	0xa
 2000 0b97 5D       		.byte	0x5d
 2001 0b98 AC000000 		.4byte	0xac
 2002 0b9c 44       		.byte	0x44
 2003 0b9d 0A       		.uleb128 0xa
 2004 0b9e D5130000 		.4byte	.LASF178
 2005 0ba2 0A       		.byte	0xa
 2006 0ba3 5E       		.byte	0x5e
 2007 0ba4 CD000000 		.4byte	0xcd
 2008 0ba8 48       		.byte	0x48
 2009 0ba9 0A       		.uleb128 0xa
 2010 0baa 5A040000 		.4byte	.LASF179
 2011 0bae 0A       		.byte	0xa
 2012 0baf 5F       		.byte	0x5f
 2013 0bb0 CD000000 		.4byte	0xcd
 2014 0bb4 4C       		.byte	0x4c
 2015 0bb5 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 133


 2016 0bb6 A5180000 		.4byte	.LASF180
 2017 0bba 0A       		.byte	0xa
 2018 0bbb 60       		.byte	0x60
 2019 0bbc AC000000 		.4byte	0xac
 2020 0bc0 50       		.byte	0x50
 2021 0bc1 0A       		.uleb128 0xa
 2022 0bc2 190B0000 		.4byte	.LASF181
 2023 0bc6 0A       		.byte	0xa
 2024 0bc7 61       		.byte	0x61
 2025 0bc8 AC000000 		.4byte	0xac
 2026 0bcc 51       		.byte	0x51
 2027 0bcd 0A       		.uleb128 0xa
 2028 0bce 5F0F0000 		.4byte	.LASF182
 2029 0bd2 0A       		.byte	0xa
 2030 0bd3 62       		.byte	0x62
 2031 0bd4 AC000000 		.4byte	0xac
 2032 0bd8 52       		.byte	0x52
 2033 0bd9 0A       		.uleb128 0xa
 2034 0bda FC060000 		.4byte	.LASF183
 2035 0bde 0A       		.byte	0xa
 2036 0bdf 63       		.byte	0x63
 2037 0be0 AC000000 		.4byte	0xac
 2038 0be4 53       		.byte	0x53
 2039 0be5 0A       		.uleb128 0xa
 2040 0be6 C1140000 		.4byte	.LASF184
 2041 0bea 0A       		.byte	0xa
 2042 0beb 64       		.byte	0x64
 2043 0bec AC000000 		.4byte	0xac
 2044 0bf0 54       		.byte	0x54
 2045 0bf1 0A       		.uleb128 0xa
 2046 0bf2 5F0C0000 		.4byte	.LASF185
 2047 0bf6 0A       		.byte	0xa
 2048 0bf7 65       		.byte	0x65
 2049 0bf8 AC000000 		.4byte	0xac
 2050 0bfc 55       		.byte	0x55
 2051 0bfd 0A       		.uleb128 0xa
 2052 0bfe FF180000 		.4byte	.LASF186
 2053 0c02 0A       		.byte	0xa
 2054 0c03 66       		.byte	0x66
 2055 0c04 AC000000 		.4byte	0xac
 2056 0c08 56       		.byte	0x56
 2057 0c09 0A       		.uleb128 0xa
 2058 0c0a 85120000 		.4byte	.LASF187
 2059 0c0e 0A       		.byte	0xa
 2060 0c0f 67       		.byte	0x67
 2061 0c10 AC000000 		.4byte	0xac
 2062 0c14 57       		.byte	0x57
 2063 0c15 0A       		.uleb128 0xa
 2064 0c16 F6090000 		.4byte	.LASF188
 2065 0c1a 0A       		.byte	0xa
 2066 0c1b 68       		.byte	0x68
 2067 0c1c AC000000 		.4byte	0xac
 2068 0c20 58       		.byte	0x58
 2069 0c21 0A       		.uleb128 0xa
 2070 0c22 441A0000 		.4byte	.LASF189
 2071 0c26 0A       		.byte	0xa
 2072 0c27 69       		.byte	0x69
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 134


 2073 0c28 AC000000 		.4byte	0xac
 2074 0c2c 59       		.byte	0x59
 2075 0c2d 0A       		.uleb128 0xa
 2076 0c2e CB170000 		.4byte	.LASF190
 2077 0c32 0A       		.byte	0xa
 2078 0c33 6E       		.byte	0x6e
 2079 0c34 C2000000 		.4byte	0xc2
 2080 0c38 5A       		.byte	0x5a
 2081 0c39 0A       		.uleb128 0xa
 2082 0c3a 3A010000 		.4byte	.LASF191
 2083 0c3e 0A       		.byte	0xa
 2084 0c3f 6F       		.byte	0x6f
 2085 0c40 C2000000 		.4byte	0xc2
 2086 0c44 5C       		.byte	0x5c
 2087 0c45 0A       		.uleb128 0xa
 2088 0c46 1E0F0000 		.4byte	.LASF192
 2089 0c4a 0A       		.byte	0xa
 2090 0c4b 70       		.byte	0x70
 2091 0c4c AC000000 		.4byte	0xac
 2092 0c50 5E       		.byte	0x5e
 2093 0c51 0A       		.uleb128 0xa
 2094 0c52 5B190000 		.4byte	.LASF193
 2095 0c56 0A       		.byte	0xa
 2096 0c57 71       		.byte	0x71
 2097 0c58 AC000000 		.4byte	0xac
 2098 0c5c 5F       		.byte	0x5f
 2099 0c5d 0A       		.uleb128 0xa
 2100 0c5e AF0C0000 		.4byte	.LASF194
 2101 0c62 0A       		.byte	0xa
 2102 0c63 72       		.byte	0x72
 2103 0c64 AC000000 		.4byte	0xac
 2104 0c68 60       		.byte	0x60
 2105 0c69 0A       		.uleb128 0xa
 2106 0c6a 060E0000 		.4byte	.LASF195
 2107 0c6e 0A       		.byte	0xa
 2108 0c6f 73       		.byte	0x73
 2109 0c70 CD000000 		.4byte	0xcd
 2110 0c74 64       		.byte	0x64
 2111 0c75 0A       		.uleb128 0xa
 2112 0c76 2B0B0000 		.4byte	.LASF196
 2113 0c7a 0A       		.byte	0xa
 2114 0c7b 76       		.byte	0x76
 2115 0c7c C2000000 		.4byte	0xc2
 2116 0c80 68       		.byte	0x68
 2117 0c81 0A       		.uleb128 0xa
 2118 0c82 F9110000 		.4byte	.LASF197
 2119 0c86 0A       		.byte	0xa
 2120 0c87 77       		.byte	0x77
 2121 0c88 C2000000 		.4byte	0xc2
 2122 0c8c 6A       		.byte	0x6a
 2123 0c8d 0A       		.uleb128 0xa
 2124 0c8e B5100000 		.4byte	.LASF198
 2125 0c92 0A       		.byte	0xa
 2126 0c93 78       		.byte	0x78
 2127 0c94 C2000000 		.4byte	0xc2
 2128 0c98 6C       		.byte	0x6c
 2129 0c99 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 135


 2130 0c9a BE040000 		.4byte	.LASF199
 2131 0c9e 0A       		.byte	0xa
 2132 0c9f 79       		.byte	0x79
 2133 0ca0 C2000000 		.4byte	0xc2
 2134 0ca4 6E       		.byte	0x6e
 2135 0ca5 0A       		.uleb128 0xa
 2136 0ca6 9B0E0000 		.4byte	.LASF200
 2137 0caa 0A       		.byte	0xa
 2138 0cab 7B       		.byte	0x7b
 2139 0cac AC000000 		.4byte	0xac
 2140 0cb0 70       		.byte	0x70
 2141 0cb1 0A       		.uleb128 0xa
 2142 0cb2 20050000 		.4byte	.LASF201
 2143 0cb6 0A       		.byte	0xa
 2144 0cb7 7C       		.byte	0x7c
 2145 0cb8 AC000000 		.4byte	0xac
 2146 0cbc 71       		.byte	0x71
 2147 0cbd 0A       		.uleb128 0xa
 2148 0cbe 27040000 		.4byte	.LASF202
 2149 0cc2 0A       		.byte	0xa
 2150 0cc3 7D       		.byte	0x7d
 2151 0cc4 AC000000 		.4byte	0xac
 2152 0cc8 72       		.byte	0x72
 2153 0cc9 0A       		.uleb128 0xa
 2154 0cca 03020000 		.4byte	.LASF203
 2155 0cce 0A       		.byte	0xa
 2156 0ccf 7E       		.byte	0x7e
 2157 0cd0 AC000000 		.4byte	0xac
 2158 0cd4 73       		.byte	0x73
 2159 0cd5 0A       		.uleb128 0xa
 2160 0cd6 E5120000 		.4byte	.LASF204
 2161 0cda 0A       		.byte	0xa
 2162 0cdb 80       		.byte	0x80
 2163 0cdc C2000000 		.4byte	0xc2
 2164 0ce0 74       		.byte	0x74
 2165 0ce1 0A       		.uleb128 0xa
 2166 0ce2 92110000 		.4byte	.LASF205
 2167 0ce6 0A       		.byte	0xa
 2168 0ce7 81       		.byte	0x81
 2169 0ce8 C2000000 		.4byte	0xc2
 2170 0cec 76       		.byte	0x76
 2171 0ced 0A       		.uleb128 0xa
 2172 0cee BE0E0000 		.4byte	.LASF206
 2173 0cf2 0A       		.byte	0xa
 2174 0cf3 82       		.byte	0x82
 2175 0cf4 C2000000 		.4byte	0xc2
 2176 0cf8 78       		.byte	0x78
 2177 0cf9 0A       		.uleb128 0xa
 2178 0cfa 82070000 		.4byte	.LASF207
 2179 0cfe 0A       		.byte	0xa
 2180 0cff 83       		.byte	0x83
 2181 0d00 C2000000 		.4byte	0xc2
 2182 0d04 7A       		.byte	0x7a
 2183 0d05 0A       		.uleb128 0xa
 2184 0d06 56150000 		.4byte	.LASF208
 2185 0d0a 0A       		.byte	0xa
 2186 0d0b 86       		.byte	0x86
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 136


 2187 0d0c AC000000 		.4byte	0xac
 2188 0d10 7C       		.byte	0x7c
 2189 0d11 0A       		.uleb128 0xa
 2190 0d12 CA180000 		.4byte	.LASF209
 2191 0d16 0A       		.byte	0xa
 2192 0d17 87       		.byte	0x87
 2193 0d18 AC000000 		.4byte	0xac
 2194 0d1c 7D       		.byte	0x7d
 2195 0d1d 0A       		.uleb128 0xa
 2196 0d1e 28070000 		.4byte	.LASF210
 2197 0d22 0A       		.byte	0xa
 2198 0d23 88       		.byte	0x88
 2199 0d24 AC000000 		.4byte	0xac
 2200 0d28 7E       		.byte	0x7e
 2201 0d29 0A       		.uleb128 0xa
 2202 0d2a 74060000 		.4byte	.LASF211
 2203 0d2e 0A       		.byte	0xa
 2204 0d2f 89       		.byte	0x89
 2205 0d30 AC000000 		.4byte	0xac
 2206 0d34 7F       		.byte	0x7f
 2207 0d35 0A       		.uleb128 0xa
 2208 0d36 77130000 		.4byte	.LASF212
 2209 0d3a 0A       		.byte	0xa
 2210 0d3b 8A       		.byte	0x8a
 2211 0d3c AC000000 		.4byte	0xac
 2212 0d40 80       		.byte	0x80
 2213 0d41 0A       		.uleb128 0xa
 2214 0d42 A2000000 		.4byte	.LASF213
 2215 0d46 0A       		.byte	0xa
 2216 0d47 8D       		.byte	0x8d
 2217 0d48 CD000000 		.4byte	0xcd
 2218 0d4c 84       		.byte	0x84
 2219 0d4d 0A       		.uleb128 0xa
 2220 0d4e 89150000 		.4byte	.LASF214
 2221 0d52 0A       		.byte	0xa
 2222 0d53 8E       		.byte	0x8e
 2223 0d54 CD000000 		.4byte	0xcd
 2224 0d58 88       		.byte	0x88
 2225 0d59 0A       		.uleb128 0xa
 2226 0d5a 03110000 		.4byte	.LASF215
 2227 0d5e 0A       		.byte	0xa
 2228 0d5f 8F       		.byte	0x8f
 2229 0d60 CD000000 		.4byte	0xcd
 2230 0d64 8C       		.byte	0x8c
 2231 0d65 0A       		.uleb128 0xa
 2232 0d66 BA160000 		.4byte	.LASF216
 2233 0d6a 0A       		.byte	0xa
 2234 0d6b 90       		.byte	0x90
 2235 0d6c CD000000 		.4byte	0xcd
 2236 0d70 90       		.byte	0x90
 2237 0d71 0A       		.uleb128 0xa
 2238 0d72 14150000 		.4byte	.LASF217
 2239 0d76 0A       		.byte	0xa
 2240 0d77 91       		.byte	0x91
 2241 0d78 CD000000 		.4byte	0xcd
 2242 0d7c 94       		.byte	0x94
 2243 0d7d 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 137


 2244 0d7e 51050000 		.4byte	.LASF218
 2245 0d82 0A       		.byte	0xa
 2246 0d83 92       		.byte	0x92
 2247 0d84 CD000000 		.4byte	0xcd
 2248 0d88 98       		.byte	0x98
 2249 0d89 0A       		.uleb128 0xa
 2250 0d8a C7150000 		.4byte	.LASF219
 2251 0d8e 0A       		.byte	0xa
 2252 0d8f 93       		.byte	0x93
 2253 0d90 CD000000 		.4byte	0xcd
 2254 0d94 9C       		.byte	0x9c
 2255 0d95 0A       		.uleb128 0xa
 2256 0d96 490C0000 		.4byte	.LASF220
 2257 0d9a 0A       		.byte	0xa
 2258 0d9b 94       		.byte	0x94
 2259 0d9c CD000000 		.4byte	0xcd
 2260 0da0 A0       		.byte	0xa0
 2261 0da1 0A       		.uleb128 0xa
 2262 0da2 25010000 		.4byte	.LASF221
 2263 0da6 0A       		.byte	0xa
 2264 0da7 95       		.byte	0x95
 2265 0da8 C2000000 		.4byte	0xc2
 2266 0dac A4       		.byte	0xa4
 2267 0dad 0A       		.uleb128 0xa
 2268 0dae B6120000 		.4byte	.LASF222
 2269 0db2 0A       		.byte	0xa
 2270 0db3 96       		.byte	0x96
 2271 0db4 C2000000 		.4byte	0xc2
 2272 0db8 A6       		.byte	0xa6
 2273 0db9 0A       		.uleb128 0xa
 2274 0dba 7E160000 		.4byte	.LASF223
 2275 0dbe 0A       		.byte	0xa
 2276 0dbf 97       		.byte	0x97
 2277 0dc0 C2000000 		.4byte	0xc2
 2278 0dc4 A8       		.byte	0xa8
 2279 0dc5 0A       		.uleb128 0xa
 2280 0dc6 E00E0000 		.4byte	.LASF224
 2281 0dca 0A       		.byte	0xa
 2282 0dcb 98       		.byte	0x98
 2283 0dcc C2000000 		.4byte	0xc2
 2284 0dd0 AA       		.byte	0xaa
 2285 0dd1 0A       		.uleb128 0xa
 2286 0dd2 68040000 		.4byte	.LASF225
 2287 0dd6 0A       		.byte	0xa
 2288 0dd7 99       		.byte	0x99
 2289 0dd8 C2000000 		.4byte	0xc2
 2290 0ddc AC       		.byte	0xac
 2291 0ddd 0A       		.uleb128 0xa
 2292 0dde 36110000 		.4byte	.LASF226
 2293 0de2 0A       		.byte	0xa
 2294 0de3 9A       		.byte	0x9a
 2295 0de4 C2000000 		.4byte	0xc2
 2296 0de8 AE       		.byte	0xae
 2297 0de9 0A       		.uleb128 0xa
 2298 0dea 9C040000 		.4byte	.LASF227
 2299 0dee 0A       		.byte	0xa
 2300 0def 9D       		.byte	0x9d
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 138


 2301 0df0 C2000000 		.4byte	0xc2
 2302 0df4 B0       		.byte	0xb0
 2303 0df5 0A       		.uleb128 0xa
 2304 0df6 FA160000 		.4byte	.LASF228
 2305 0dfa 0A       		.byte	0xa
 2306 0dfb 9E       		.byte	0x9e
 2307 0dfc CD000000 		.4byte	0xcd
 2308 0e00 B4       		.byte	0xb4
 2309 0e01 00       		.byte	0
 2310 0e02 04       		.uleb128 0x4
 2311 0e03 71190000 		.4byte	.LASF229
 2312 0e07 0A       		.byte	0xa
 2313 0e08 9F       		.byte	0x9f
 2314 0e09 F1090000 		.4byte	0x9f1
 2315 0e0d 0F       		.uleb128 0xf
 2316 0e0e 49140000 		.4byte	.LASF230
 2317 0e12 0B       		.byte	0xb
 2318 0e13 F601     		.2byte	0x1f6
 2319 0e15 A5000000 		.4byte	0xa5
 2320 0e19 03       		.uleb128 0x3
 2321 0e1a 04       		.byte	0x4
 2322 0e1b 04       		.byte	0x4
 2323 0e1c CD060000 		.4byte	.LASF231
 2324 0e20 03       		.uleb128 0x3
 2325 0e21 08       		.byte	0x8
 2326 0e22 04       		.byte	0x4
 2327 0e23 E9190000 		.4byte	.LASF232
 2328 0e27 0F       		.uleb128 0xf
 2329 0e28 E3190000 		.4byte	.LASF233
 2330 0e2c 0B       		.byte	0xb
 2331 0e2d EA03     		.2byte	0x3ea
 2332 0e2f AC000000 		.4byte	0xac
 2333 0e33 09       		.uleb128 0x9
 2334 0e34 24       		.byte	0x24
 2335 0e35 0C       		.byte	0xc
 2336 0e36 EF       		.byte	0xef
 2337 0e37 A80E0000 		.4byte	0xea8
 2338 0e3b 0E       		.uleb128 0xe
 2339 0e3c 6F757400 		.ascii	"out\000"
 2340 0e40 0C       		.byte	0xc
 2341 0e41 F1       		.byte	0xf1
 2342 0e42 CD000000 		.4byte	0xcd
 2343 0e46 00       		.byte	0
 2344 0e47 0A       		.uleb128 0xa
 2345 0e48 E01A0000 		.4byte	.LASF234
 2346 0e4c 0C       		.byte	0xc
 2347 0e4d F2       		.byte	0xf2
 2348 0e4e CD000000 		.4byte	0xcd
 2349 0e52 04       		.byte	0x4
 2350 0e53 0A       		.uleb128 0xa
 2351 0e54 540B0000 		.4byte	.LASF235
 2352 0e58 0C       		.byte	0xc
 2353 0e59 F3       		.byte	0xf3
 2354 0e5a CD000000 		.4byte	0xcd
 2355 0e5e 08       		.byte	0x8
 2356 0e5f 0E       		.uleb128 0xe
 2357 0e60 63666700 		.ascii	"cfg\000"
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 139


 2358 0e64 0C       		.byte	0xc
 2359 0e65 F4       		.byte	0xf4
 2360 0e66 CD000000 		.4byte	0xcd
 2361 0e6a 0C       		.byte	0xc
 2362 0e6b 0A       		.uleb128 0xa
 2363 0e6c 01010000 		.4byte	.LASF236
 2364 0e70 0C       		.byte	0xc
 2365 0e71 F5       		.byte	0xf5
 2366 0e72 CD000000 		.4byte	0xcd
 2367 0e76 10       		.byte	0x10
 2368 0e77 0A       		.uleb128 0xa
 2369 0e78 DA0D0000 		.4byte	.LASF237
 2370 0e7c 0C       		.byte	0xc
 2371 0e7d F6       		.byte	0xf6
 2372 0e7e CD000000 		.4byte	0xcd
 2373 0e82 14       		.byte	0x14
 2374 0e83 0A       		.uleb128 0xa
 2375 0e84 54020000 		.4byte	.LASF238
 2376 0e88 0C       		.byte	0xc
 2377 0e89 F7       		.byte	0xf7
 2378 0e8a CD000000 		.4byte	0xcd
 2379 0e8e 18       		.byte	0x18
 2380 0e8f 0A       		.uleb128 0xa
 2381 0e90 5F130000 		.4byte	.LASF239
 2382 0e94 0C       		.byte	0xc
 2383 0e95 F8       		.byte	0xf8
 2384 0e96 CD000000 		.4byte	0xcd
 2385 0e9a 1C       		.byte	0x1c
 2386 0e9b 0A       		.uleb128 0xa
 2387 0e9c A0070000 		.4byte	.LASF240
 2388 0ea0 0C       		.byte	0xc
 2389 0ea1 F9       		.byte	0xf9
 2390 0ea2 CD000000 		.4byte	0xcd
 2391 0ea6 20       		.byte	0x20
 2392 0ea7 00       		.byte	0
 2393 0ea8 04       		.uleb128 0x4
 2394 0ea9 27170000 		.4byte	.LASF241
 2395 0ead 0C       		.byte	0xc
 2396 0eae FA       		.byte	0xfa
 2397 0eaf 330E0000 		.4byte	0xe33
 2398 0eb3 10       		.uleb128 0x10
 2399 0eb4 01       		.byte	0x1
 2400 0eb5 53000000 		.4byte	0x53
 2401 0eb9 03       		.byte	0x3
 2402 0eba 4E05     		.2byte	0x54e
 2403 0ebc D90E0000 		.4byte	0xed9
 2404 0ec0 11       		.uleb128 0x11
 2405 0ec1 C5000000 		.4byte	.LASF242
 2406 0ec5 00       		.byte	0
 2407 0ec6 11       		.uleb128 0x11
 2408 0ec7 A3010000 		.4byte	.LASF243
 2409 0ecb 01       		.byte	0x1
 2410 0ecc 11       		.uleb128 0x11
 2411 0ecd 081A0000 		.4byte	.LASF244
 2412 0ed1 00       		.byte	0
 2413 0ed2 11       		.uleb128 0x11
 2414 0ed3 00000000 		.4byte	.LASF245
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 140


 2415 0ed7 01       		.byte	0x1
 2416 0ed8 00       		.byte	0
 2417 0ed9 10       		.uleb128 0x10
 2418 0eda 04       		.byte	0x4
 2419 0edb 2C000000 		.4byte	0x2c
 2420 0edf 02       		.byte	0x2
 2421 0ee0 5C02     		.2byte	0x25c
 2422 0ee2 080F0000 		.4byte	0xf08
 2423 0ee6 11       		.uleb128 0x11
 2424 0ee7 76040000 		.4byte	.LASF246
 2425 0eeb 00       		.byte	0
 2426 0eec 12       		.uleb128 0x12
 2427 0eed A2120000 		.4byte	.LASF247
 2428 0ef1 01004A00 		.4byte	0x4a0001
 2429 0ef5 12       		.uleb128 0x12
 2430 0ef6 5F010000 		.4byte	.LASF248
 2431 0efa 02004A00 		.4byte	0x4a0002
 2432 0efe 12       		.uleb128 0x12
 2433 0eff 0B120000 		.4byte	.LASF249
 2434 0f03 03004A00 		.4byte	0x4a0003
 2435 0f07 00       		.byte	0
 2436 0f08 0F       		.uleb128 0xf
 2437 0f09 AA0A0000 		.4byte	.LASF250
 2438 0f0d 02       		.byte	0x2
 2439 0f0e 6102     		.2byte	0x261
 2440 0f10 D90E0000 		.4byte	0xed9
 2441 0f14 10       		.uleb128 0x10
 2442 0f15 02       		.byte	0x2
 2443 0f16 77000000 		.4byte	0x77
 2444 0f1a 02       		.byte	0x2
 2445 0f1b BE02     		.2byte	0x2be
 2446 0f1d 630F0000 		.4byte	0xf63
 2447 0f21 11       		.uleb128 0x11
 2448 0f22 23140000 		.4byte	.LASF251
 2449 0f26 00       		.byte	0
 2450 0f27 11       		.uleb128 0x11
 2451 0f28 49170000 		.4byte	.LASF252
 2452 0f2c 01       		.byte	0x1
 2453 0f2d 11       		.uleb128 0x11
 2454 0f2e 820E0000 		.4byte	.LASF253
 2455 0f32 02       		.byte	0x2
 2456 0f33 11       		.uleb128 0x11
 2457 0f34 D1140000 		.4byte	.LASF254
 2458 0f38 03       		.byte	0x3
 2459 0f39 11       		.uleb128 0x11
 2460 0f3a 3A150000 		.4byte	.LASF255
 2461 0f3e 04       		.byte	0x4
 2462 0f3f 13       		.uleb128 0x13
 2463 0f40 4E060000 		.4byte	.LASF256
 2464 0f44 0001     		.2byte	0x100
 2465 0f46 13       		.uleb128 0x13
 2466 0f47 47120000 		.4byte	.LASF257
 2467 0f4b 1001     		.2byte	0x110
 2468 0f4d 13       		.uleb128 0x13
 2469 0f4e CC0B0000 		.4byte	.LASF258
 2470 0f52 1101     		.2byte	0x111
 2471 0f54 13       		.uleb128 0x13
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 141


 2472 0f55 0A1B0000 		.4byte	.LASF259
 2473 0f59 1201     		.2byte	0x112
 2474 0f5b 13       		.uleb128 0x13
 2475 0f5c 6C0A0000 		.4byte	.LASF260
 2476 0f60 1301     		.2byte	0x113
 2477 0f62 00       		.byte	0
 2478 0f63 10       		.uleb128 0x10
 2479 0f64 01       		.byte	0x1
 2480 0f65 53000000 		.4byte	0x53
 2481 0f69 02       		.byte	0x2
 2482 0f6a E802     		.2byte	0x2e8
 2483 0f6c 890F0000 		.4byte	0xf89
 2484 0f70 11       		.uleb128 0x11
 2485 0f71 61160000 		.4byte	.LASF261
 2486 0f75 00       		.byte	0
 2487 0f76 11       		.uleb128 0x11
 2488 0f77 6B150000 		.4byte	.LASF262
 2489 0f7b 01       		.byte	0x1
 2490 0f7c 11       		.uleb128 0x11
 2491 0f7d F8150000 		.4byte	.LASF263
 2492 0f81 02       		.byte	0x2
 2493 0f82 11       		.uleb128 0x11
 2494 0f83 0A0A0000 		.4byte	.LASF264
 2495 0f87 03       		.byte	0x3
 2496 0f88 00       		.byte	0
 2497 0f89 0F       		.uleb128 0xf
 2498 0f8a 100C0000 		.4byte	.LASF265
 2499 0f8e 02       		.byte	0x2
 2500 0f8f ED02     		.2byte	0x2ed
 2501 0f91 630F0000 		.4byte	0xf63
 2502 0f95 10       		.uleb128 0x10
 2503 0f96 01       		.byte	0x1
 2504 0f97 53000000 		.4byte	0x53
 2505 0f9b 02       		.byte	0x2
 2506 0f9c F302     		.2byte	0x2f3
 2507 0f9e C10F0000 		.4byte	0xfc1
 2508 0fa2 11       		.uleb128 0x11
 2509 0fa3 110D0000 		.4byte	.LASF266
 2510 0fa7 00       		.byte	0
 2511 0fa8 11       		.uleb128 0x11
 2512 0fa9 2A0D0000 		.4byte	.LASF267
 2513 0fad 01       		.byte	0x1
 2514 0fae 11       		.uleb128 0x11
 2515 0faf 430D0000 		.4byte	.LASF268
 2516 0fb3 02       		.byte	0x2
 2517 0fb4 11       		.uleb128 0x11
 2518 0fb5 5C0D0000 		.4byte	.LASF269
 2519 0fb9 03       		.byte	0x3
 2520 0fba 11       		.uleb128 0x11
 2521 0fbb 750D0000 		.4byte	.LASF270
 2522 0fbf 04       		.byte	0x4
 2523 0fc0 00       		.byte	0
 2524 0fc1 0F       		.uleb128 0xf
 2525 0fc2 320C0000 		.4byte	.LASF271
 2526 0fc6 02       		.byte	0x2
 2527 0fc7 F902     		.2byte	0x2f9
 2528 0fc9 950F0000 		.4byte	0xf95
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 142


 2529 0fcd 14       		.uleb128 0x14
 2530 0fce 14       		.byte	0x14
 2531 0fcf 02       		.byte	0x2
 2532 0fd0 0203     		.2byte	0x302
 2533 0fd2 59100000 		.4byte	0x1059
 2534 0fd6 15       		.uleb128 0x15
 2535 0fd7 CB040000 		.4byte	.LASF272
 2536 0fdb 02       		.byte	0x2
 2537 0fdc 0403     		.2byte	0x304
 2538 0fde CD000000 		.4byte	0xcd
 2539 0fe2 00       		.byte	0
 2540 0fe3 15       		.uleb128 0x15
 2541 0fe4 AA020000 		.4byte	.LASF273
 2542 0fe8 02       		.byte	0x2
 2543 0fe9 0503     		.2byte	0x305
 2544 0feb C2000000 		.4byte	0xc2
 2545 0fef 04       		.byte	0x4
 2546 0ff0 15       		.uleb128 0x15
 2547 0ff1 56140000 		.4byte	.LASF274
 2548 0ff5 02       		.byte	0x2
 2549 0ff6 0603     		.2byte	0x306
 2550 0ff8 C10F0000 		.4byte	0xfc1
 2551 0ffc 06       		.byte	0x6
 2552 0ffd 15       		.uleb128 0x15
 2553 0ffe E10D0000 		.4byte	.LASF275
 2554 1002 02       		.byte	0x2
 2555 1003 0703     		.2byte	0x307
 2556 1005 59100000 		.4byte	0x1059
 2557 1009 07       		.byte	0x7
 2558 100a 15       		.uleb128 0x15
 2559 100b 9C020000 		.4byte	.LASF276
 2560 100f 02       		.byte	0x2
 2561 1010 0803     		.2byte	0x308
 2562 1012 C2000000 		.4byte	0xc2
 2563 1016 08       		.byte	0x8
 2564 1017 15       		.uleb128 0x15
 2565 1018 B8070000 		.4byte	.LASF277
 2566 101c 02       		.byte	0x2
 2567 101d 0903     		.2byte	0x309
 2568 101f AC000000 		.4byte	0xac
 2569 1023 0A       		.byte	0xa
 2570 1024 15       		.uleb128 0x15
 2571 1025 B4160000 		.4byte	.LASF278
 2572 1029 02       		.byte	0x2
 2573 102a 0A03     		.2byte	0x30a
 2574 102c AC000000 		.4byte	0xac
 2575 1030 0B       		.byte	0xb
 2576 1031 15       		.uleb128 0x15
 2577 1032 4C070000 		.4byte	.LASF279
 2578 1036 02       		.byte	0x2
 2579 1037 0B03     		.2byte	0x30b
 2580 1039 C2000000 		.4byte	0xc2
 2581 103d 0C       		.byte	0xc
 2582 103e 15       		.uleb128 0x15
 2583 103f E9030000 		.4byte	.LASF280
 2584 1043 02       		.byte	0x2
 2585 1044 0C03     		.2byte	0x30c
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 143


 2586 1046 890F0000 		.4byte	0xf89
 2587 104a 0E       		.byte	0xe
 2588 104b 15       		.uleb128 0x15
 2589 104c BB010000 		.4byte	.LASF281
 2590 1050 02       		.byte	0x2
 2591 1051 0D03     		.2byte	0x30d
 2592 1053 C2000000 		.4byte	0xc2
 2593 1057 10       		.byte	0x10
 2594 1058 00       		.byte	0
 2595 1059 03       		.uleb128 0x3
 2596 105a 01       		.byte	0x1
 2597 105b 02       		.byte	0x2
 2598 105c 5C0B0000 		.4byte	.LASF282
 2599 1060 0F       		.uleb128 0xf
 2600 1061 DD150000 		.4byte	.LASF283
 2601 1065 02       		.byte	0x2
 2602 1066 0E03     		.2byte	0x30e
 2603 1068 CD0F0000 		.4byte	0xfcd
 2604 106c 10       		.uleb128 0x10
 2605 106d 01       		.byte	0x1
 2606 106e 53000000 		.4byte	0x53
 2607 1072 02       		.byte	0x2
 2608 1073 AC05     		.2byte	0x5ac
 2609 1075 DA100000 		.4byte	0x10da
 2610 1079 11       		.uleb128 0x11
 2611 107a 00080000 		.4byte	.LASF284
 2612 107e 00       		.byte	0
 2613 107f 11       		.uleb128 0x11
 2614 1080 1C080000 		.4byte	.LASF285
 2615 1084 01       		.byte	0x1
 2616 1085 11       		.uleb128 0x11
 2617 1086 38080000 		.4byte	.LASF286
 2618 108a 02       		.byte	0x2
 2619 108b 11       		.uleb128 0x11
 2620 108c 54080000 		.4byte	.LASF287
 2621 1090 03       		.byte	0x3
 2622 1091 11       		.uleb128 0x11
 2623 1092 70080000 		.4byte	.LASF288
 2624 1096 04       		.byte	0x4
 2625 1097 11       		.uleb128 0x11
 2626 1098 8C080000 		.4byte	.LASF289
 2627 109c 05       		.byte	0x5
 2628 109d 11       		.uleb128 0x11
 2629 109e A8080000 		.4byte	.LASF290
 2630 10a2 06       		.byte	0x6
 2631 10a3 11       		.uleb128 0x11
 2632 10a4 C4080000 		.4byte	.LASF291
 2633 10a8 07       		.byte	0x7
 2634 10a9 11       		.uleb128 0x11
 2635 10aa E0080000 		.4byte	.LASF292
 2636 10ae 08       		.byte	0x8
 2637 10af 11       		.uleb128 0x11
 2638 10b0 FC080000 		.4byte	.LASF293
 2639 10b4 09       		.byte	0x9
 2640 10b5 11       		.uleb128 0x11
 2641 10b6 31060000 		.4byte	.LASF294
 2642 10ba 0A       		.byte	0xa
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 144


 2643 10bb 11       		.uleb128 0x11
 2644 10bc 37100000 		.4byte	.LASF295
 2645 10c0 0B       		.byte	0xb
 2646 10c1 11       		.uleb128 0x11
 2647 10c2 54100000 		.4byte	.LASF296
 2648 10c6 0C       		.byte	0xc
 2649 10c7 11       		.uleb128 0x11
 2650 10c8 71100000 		.4byte	.LASF297
 2651 10cc 0D       		.byte	0xd
 2652 10cd 11       		.uleb128 0x11
 2653 10ce 88060000 		.4byte	.LASF298
 2654 10d2 0E       		.byte	0xe
 2655 10d3 11       		.uleb128 0x11
 2656 10d4 98100000 		.4byte	.LASF299
 2657 10d8 0F       		.byte	0xf
 2658 10d9 00       		.byte	0
 2659 10da 0F       		.uleb128 0xf
 2660 10db 3B0B0000 		.4byte	.LASF300
 2661 10df 02       		.byte	0x2
 2662 10e0 BD05     		.2byte	0x5bd
 2663 10e2 6C100000 		.4byte	0x106c
 2664 10e6 10       		.uleb128 0x10
 2665 10e7 01       		.byte	0x1
 2666 10e8 53000000 		.4byte	0x53
 2667 10ec 02       		.byte	0x2
 2668 10ed C505     		.2byte	0x5c5
 2669 10ef 0C110000 		.4byte	0x110c
 2670 10f3 11       		.uleb128 0x11
 2671 10f4 70140000 		.4byte	.LASF301
 2672 10f8 00       		.byte	0
 2673 10f9 11       		.uleb128 0x11
 2674 10fa 290A0000 		.4byte	.LASF302
 2675 10fe 01       		.byte	0x1
 2676 10ff 11       		.uleb128 0x11
 2677 1100 500A0000 		.4byte	.LASF303
 2678 1104 02       		.byte	0x2
 2679 1105 11       		.uleb128 0x11
 2680 1106 860A0000 		.4byte	.LASF304
 2681 110a 03       		.byte	0x3
 2682 110b 00       		.byte	0
 2683 110c 0F       		.uleb128 0xf
 2684 110d ED040000 		.4byte	.LASF305
 2685 1111 02       		.byte	0x2
 2686 1112 CA05     		.2byte	0x5ca
 2687 1114 E6100000 		.4byte	0x10e6
 2688 1118 10       		.uleb128 0x10
 2689 1119 01       		.byte	0x1
 2690 111a 53000000 		.4byte	0x53
 2691 111e 02       		.byte	0x2
 2692 111f 2B09     		.2byte	0x92b
 2693 1121 3E110000 		.4byte	0x113e
 2694 1125 11       		.uleb128 0x11
 2695 1126 F31A0000 		.4byte	.LASF306
 2696 112a 00       		.byte	0
 2697 112b 11       		.uleb128 0x11
 2698 112c 8C010000 		.4byte	.LASF307
 2699 1130 01       		.byte	0x1
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 145


 2700 1131 11       		.uleb128 0x11
 2701 1132 0E170000 		.4byte	.LASF308
 2702 1136 02       		.byte	0x2
 2703 1137 11       		.uleb128 0x11
 2704 1138 DB180000 		.4byte	.LASF309
 2705 113c 03       		.byte	0x3
 2706 113d 00       		.byte	0
 2707 113e 0F       		.uleb128 0xf
 2708 113f 9B160000 		.4byte	.LASF310
 2709 1143 02       		.byte	0x2
 2710 1144 3009     		.2byte	0x930
 2711 1146 18110000 		.4byte	0x1118
 2712 114a 10       		.uleb128 0x10
 2713 114b 02       		.byte	0x2
 2714 114c 77000000 		.4byte	0x77
 2715 1150 02       		.byte	0x2
 2716 1151 6E09     		.2byte	0x96e
 2717 1153 79110000 		.4byte	0x1179
 2718 1157 11       		.uleb128 0x11
 2719 1158 A7140000 		.4byte	.LASF311
 2720 115c 00       		.byte	0
 2721 115d 11       		.uleb128 0x11
 2722 115e 6C0B0000 		.4byte	.LASF312
 2723 1162 01       		.byte	0x1
 2724 1163 13       		.uleb128 0x13
 2725 1164 69090000 		.4byte	.LASF313
 2726 1168 0101     		.2byte	0x101
 2727 116a 13       		.uleb128 0x13
 2728 116b 88090000 		.4byte	.LASF314
 2729 116f 0102     		.2byte	0x201
 2730 1171 13       		.uleb128 0x13
 2731 1172 C8090000 		.4byte	.LASF315
 2732 1176 0103     		.2byte	0x301
 2733 1178 00       		.byte	0
 2734 1179 0F       		.uleb128 0xf
 2735 117a 4D090000 		.4byte	.LASF316
 2736 117e 02       		.byte	0x2
 2737 117f 7409     		.2byte	0x974
 2738 1181 4A110000 		.4byte	0x114a
 2739 1185 10       		.uleb128 0x10
 2740 1186 01       		.byte	0x1
 2741 1187 53000000 		.4byte	0x53
 2742 118b 02       		.byte	0x2
 2743 118c 020A     		.2byte	0xa02
 2744 118e F3110000 		.4byte	0x11f3
 2745 1192 11       		.uleb128 0x11
 2746 1193 D1020000 		.4byte	.LASF317
 2747 1197 00       		.byte	0
 2748 1198 11       		.uleb128 0x11
 2749 1199 EC020000 		.4byte	.LASF318
 2750 119d 01       		.byte	0x1
 2751 119e 11       		.uleb128 0x11
 2752 119f 07030000 		.4byte	.LASF319
 2753 11a3 02       		.byte	0x2
 2754 11a4 11       		.uleb128 0x11
 2755 11a5 22030000 		.4byte	.LASF320
 2756 11a9 03       		.byte	0x3
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 146


 2757 11aa 11       		.uleb128 0x11
 2758 11ab 3D030000 		.4byte	.LASF321
 2759 11af 04       		.byte	0x4
 2760 11b0 11       		.uleb128 0x11
 2761 11b1 58030000 		.4byte	.LASF322
 2762 11b5 05       		.byte	0x5
 2763 11b6 11       		.uleb128 0x11
 2764 11b7 73030000 		.4byte	.LASF323
 2765 11bb 06       		.byte	0x6
 2766 11bc 11       		.uleb128 0x11
 2767 11bd 8E030000 		.4byte	.LASF324
 2768 11c1 07       		.byte	0x7
 2769 11c2 11       		.uleb128 0x11
 2770 11c3 C51A0000 		.4byte	.LASF325
 2771 11c7 08       		.byte	0x8
 2772 11c8 11       		.uleb128 0x11
 2773 11c9 B9030000 		.4byte	.LASF326
 2774 11cd 09       		.byte	0x9
 2775 11ce 11       		.uleb128 0x11
 2776 11cf AF170000 		.4byte	.LASF327
 2777 11d3 0A       		.byte	0xa
 2778 11d4 11       		.uleb128 0x11
 2779 11d5 1B100000 		.4byte	.LASF328
 2780 11d9 0B       		.byte	0xb
 2781 11da 11       		.uleb128 0x11
 2782 11db D6170000 		.4byte	.LASF329
 2783 11df 0C       		.byte	0xc
 2784 11e0 11       		.uleb128 0x11
 2785 11e1 F2170000 		.4byte	.LASF330
 2786 11e5 0D       		.byte	0xd
 2787 11e6 11       		.uleb128 0x11
 2788 11e7 0E180000 		.4byte	.LASF331
 2789 11eb 0E       		.byte	0xe
 2790 11ec 11       		.uleb128 0x11
 2791 11ed 2A180000 		.4byte	.LASF332
 2792 11f1 0F       		.byte	0xf
 2793 11f2 00       		.byte	0
 2794 11f3 0F       		.uleb128 0xf
 2795 11f4 71010000 		.4byte	.LASF333
 2796 11f8 02       		.byte	0x2
 2797 11f9 130A     		.2byte	0xa13
 2798 11fb 85110000 		.4byte	0x1185
 2799 11ff 10       		.uleb128 0x10
 2800 1200 01       		.byte	0x1
 2801 1201 53000000 		.4byte	0x53
 2802 1205 02       		.byte	0x2
 2803 1206 1B0A     		.2byte	0xa1b
 2804 1208 2B120000 		.4byte	0x122b
 2805 120c 11       		.uleb128 0x11
 2806 120d 54110000 		.4byte	.LASF334
 2807 1211 00       		.byte	0
 2808 1212 11       		.uleb128 0x11
 2809 1213 711A0000 		.4byte	.LASF335
 2810 1217 01       		.byte	0x1
 2811 1218 11       		.uleb128 0x11
 2812 1219 861A0000 		.4byte	.LASF336
 2813 121d 02       		.byte	0x2
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 147


 2814 121e 11       		.uleb128 0x11
 2815 121f 9B1A0000 		.4byte	.LASF337
 2816 1223 03       		.byte	0x3
 2817 1224 11       		.uleb128 0x11
 2818 1225 23120000 		.4byte	.LASF338
 2819 1229 04       		.byte	0x4
 2820 122a 00       		.byte	0
 2821 122b 0F       		.uleb128 0xf
 2822 122c FD050000 		.4byte	.LASF339
 2823 1230 02       		.byte	0x2
 2824 1231 210A     		.2byte	0xa21
 2825 1233 FF110000 		.4byte	0x11ff
 2826 1237 10       		.uleb128 0x10
 2827 1238 01       		.byte	0x1
 2828 1239 53000000 		.4byte	0x53
 2829 123d 02       		.byte	0x2
 2830 123e B20A     		.2byte	0xab2
 2831 1240 51120000 		.4byte	0x1251
 2832 1244 11       		.uleb128 0x11
 2833 1245 8D000000 		.4byte	.LASF340
 2834 1249 00       		.byte	0
 2835 124a 11       		.uleb128 0x11
 2836 124b 0C140000 		.4byte	.LASF341
 2837 124f 01       		.byte	0x1
 2838 1250 00       		.byte	0
 2839 1251 0F       		.uleb128 0xf
 2840 1252 EE0E0000 		.4byte	.LASF342
 2841 1256 02       		.byte	0x2
 2842 1257 B50A     		.2byte	0xab5
 2843 1259 37120000 		.4byte	0x1237
 2844 125d 16       		.uleb128 0x16
 2845 125e 01       		.byte	0x1
 2846 125f 53000000 		.4byte	0x53
 2847 1263 0D       		.byte	0xd
 2848 1264 7B       		.byte	0x7b
 2849 1265 88120000 		.4byte	0x1288
 2850 1269 11       		.uleb128 0x11
 2851 126a A7050000 		.4byte	.LASF343
 2852 126e 00       		.byte	0
 2853 126f 11       		.uleb128 0x11
 2854 1270 B1020000 		.4byte	.LASF344
 2855 1274 01       		.byte	0x1
 2856 1275 11       		.uleb128 0x11
 2857 1276 D4050000 		.4byte	.LASF345
 2858 127a 02       		.byte	0x2
 2859 127b 11       		.uleb128 0x11
 2860 127c A1190000 		.4byte	.LASF346
 2861 1280 03       		.byte	0x3
 2862 1281 11       		.uleb128 0x11
 2863 1282 81190000 		.4byte	.LASF347
 2864 1286 04       		.byte	0x4
 2865 1287 00       		.byte	0
 2866 1288 17       		.uleb128 0x17
 2867 1289 990C0000 		.4byte	.LASF348
 2868 128d 02       		.byte	0x2
 2869 128e 0606     		.2byte	0x606
 2870 1290 080F0000 		.4byte	0xf08
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 148


 2871 1294 03       		.byte	0x3
 2872 1295 B2120000 		.4byte	0x12b2
 2873 1299 18       		.uleb128 0x18
 2874 129a 87000000 		.4byte	.LASF350
 2875 129e 02       		.byte	0x2
 2876 129f 0606     		.2byte	0x606
 2877 12a1 CD000000 		.4byte	0xcd
 2878 12a5 19       		.uleb128 0x19
 2879 12a6 5A160000 		.4byte	.LASF352
 2880 12aa 02       		.byte	0x2
 2881 12ab 0806     		.2byte	0x608
 2882 12ad 080F0000 		.4byte	0xf08
 2883 12b1 00       		.byte	0
 2884 12b2 17       		.uleb128 0x17
 2885 12b3 420E0000 		.4byte	.LASF349
 2886 12b7 02       		.byte	0x2
 2887 12b8 8606     		.2byte	0x686
 2888 12ba 080F0000 		.4byte	0xf08
 2889 12be 03       		.byte	0x3
 2890 12bf E8120000 		.4byte	0x12e8
 2891 12c3 18       		.uleb128 0x18
 2892 12c4 87000000 		.4byte	.LASF350
 2893 12c8 02       		.byte	0x2
 2894 12c9 8606     		.2byte	0x686
 2895 12cb CD000000 		.4byte	0xcd
 2896 12cf 18       		.uleb128 0x18
 2897 12d0 47130000 		.4byte	.LASF351
 2898 12d4 02       		.byte	0x2
 2899 12d5 8606     		.2byte	0x686
 2900 12d7 0C110000 		.4byte	0x110c
 2901 12db 19       		.uleb128 0x19
 2902 12dc 5A160000 		.4byte	.LASF352
 2903 12e0 02       		.byte	0x2
 2904 12e1 8806     		.2byte	0x688
 2905 12e3 080F0000 		.4byte	0xf08
 2906 12e7 00       		.byte	0
 2907 12e8 17       		.uleb128 0x17
 2908 12e9 D0100000 		.4byte	.LASF353
 2909 12ed 02       		.byte	0x2
 2910 12ee 4906     		.2byte	0x649
 2911 12f0 080F0000 		.4byte	0xf08
 2912 12f4 03       		.byte	0x3
 2913 12f5 1E130000 		.4byte	0x131e
 2914 12f9 18       		.uleb128 0x18
 2915 12fa 87000000 		.4byte	.LASF350
 2916 12fe 02       		.byte	0x2
 2917 12ff 4906     		.2byte	0x649
 2918 1301 CD000000 		.4byte	0xcd
 2919 1305 18       		.uleb128 0x18
 2920 1306 33150000 		.4byte	.LASF354
 2921 130a 02       		.byte	0x2
 2922 130b 4906     		.2byte	0x649
 2923 130d DA100000 		.4byte	0x10da
 2924 1311 19       		.uleb128 0x19
 2925 1312 5A160000 		.4byte	.LASF352
 2926 1316 02       		.byte	0x2
 2927 1317 4B06     		.2byte	0x64b
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 149


 2928 1319 080F0000 		.4byte	0xf08
 2929 131d 00       		.byte	0
 2930 131e 1A       		.uleb128 0x1a
 2931 131f 35050000 		.4byte	.LASF355
 2932 1323 02       		.byte	0x2
 2933 1324 0609     		.2byte	0x906
 2934 1326 03       		.byte	0x3
 2935 1327 38130000 		.4byte	0x1338
 2936 132b 18       		.uleb128 0x18
 2937 132c 47130000 		.4byte	.LASF351
 2938 1330 02       		.byte	0x2
 2939 1331 0609     		.2byte	0x906
 2940 1333 AC000000 		.4byte	0xac
 2941 1337 00       		.byte	0
 2942 1338 1A       		.uleb128 0x1a
 2943 1339 31090000 		.4byte	.LASF356
 2944 133d 02       		.byte	0x2
 2945 133e FF06     		.2byte	0x6ff
 2946 1340 03       		.byte	0x3
 2947 1341 52130000 		.4byte	0x1352
 2948 1345 18       		.uleb128 0x18
 2949 1346 47130000 		.4byte	.LASF351
 2950 134a 02       		.byte	0x2
 2951 134b FF06     		.2byte	0x6ff
 2952 134d AC000000 		.4byte	0xac
 2953 1351 00       		.byte	0
 2954 1352 1A       		.uleb128 0x1a
 2955 1353 59180000 		.4byte	.LASF357
 2956 1357 02       		.byte	0x2
 2957 1358 CA06     		.2byte	0x6ca
 2958 135a 03       		.byte	0x3
 2959 135b 6C130000 		.4byte	0x136c
 2960 135f 18       		.uleb128 0x18
 2961 1360 47130000 		.4byte	.LASF351
 2962 1364 02       		.byte	0x2
 2963 1365 CA06     		.2byte	0x6ca
 2964 1367 AC000000 		.4byte	0xac
 2965 136b 00       		.byte	0
 2966 136c 1A       		.uleb128 0x1a
 2967 136d 75180000 		.4byte	.LASF358
 2968 1371 02       		.byte	0x2
 2969 1372 4809     		.2byte	0x948
 2970 1374 03       		.byte	0x3
 2971 1375 86130000 		.4byte	0x1386
 2972 1379 18       		.uleb128 0x18
 2973 137a 33150000 		.4byte	.LASF354
 2974 137e 02       		.byte	0x2
 2975 137f 4809     		.2byte	0x948
 2976 1381 3E110000 		.4byte	0x113e
 2977 1385 00       		.byte	0
 2978 1386 1A       		.uleb128 0x1a
 2979 1387 581A0000 		.4byte	.LASF359
 2980 138b 02       		.byte	0x2
 2981 138c 2704     		.2byte	0x427
 2982 138e 03       		.byte	0x3
 2983 138f 9F130000 		.4byte	0x139f
 2984 1393 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 150


 2985 1394 6F6E00   		.ascii	"on\000"
 2986 1397 02       		.byte	0x2
 2987 1398 2704     		.2byte	0x427
 2988 139a 59100000 		.4byte	0x1059
 2989 139e 00       		.byte	0
 2990 139f 1C       		.uleb128 0x1c
 2991 13a0 E7130000 		.4byte	.LASF361
 2992 13a4 02       		.byte	0x2
 2993 13a5 F403     		.2byte	0x3f4
 2994 13a7 03       		.byte	0x3
 2995 13a8 1A       		.uleb128 0x1a
 2996 13a9 380F0000 		.4byte	.LASF360
 2997 13ad 02       		.byte	0x2
 2998 13ae D00A     		.2byte	0xad0
 2999 13b0 03       		.byte	0x3
 3000 13b1 C2130000 		.4byte	0x13c2
 3001 13b5 18       		.uleb128 0x18
 3002 13b6 33150000 		.4byte	.LASF354
 3003 13ba 02       		.byte	0x2
 3004 13bb D00A     		.2byte	0xad0
 3005 13bd 51120000 		.4byte	0x1251
 3006 13c1 00       		.byte	0
 3007 13c2 1C       		.uleb128 0x1c
 3008 13c3 DE010000 		.4byte	.LASF362
 3009 13c7 02       		.byte	0x2
 3010 13c8 8F0A     		.2byte	0xa8f
 3011 13ca 03       		.byte	0x3
 3012 13cb 1A       		.uleb128 0x1a
 3013 13cc 04050000 		.4byte	.LASF363
 3014 13d0 02       		.byte	0x2
 3015 13d1 6D0A     		.2byte	0xa6d
 3016 13d3 03       		.byte	0x3
 3017 13d4 E5130000 		.4byte	0x13e5
 3018 13d8 18       		.uleb128 0x18
 3019 13d9 47130000 		.4byte	.LASF351
 3020 13dd 02       		.byte	0x2
 3021 13de 6D0A     		.2byte	0xa6d
 3022 13e0 2B120000 		.4byte	0x122b
 3023 13e4 00       		.byte	0
 3024 13e5 1A       		.uleb128 0x1a
 3025 13e6 D3060000 		.4byte	.LASF364
 3026 13ea 02       		.byte	0x2
 3027 13eb 470A     		.2byte	0xa47
 3028 13ed 03       		.byte	0x3
 3029 13ee FF130000 		.4byte	0x13ff
 3030 13f2 18       		.uleb128 0x18
 3031 13f3 33150000 		.4byte	.LASF354
 3032 13f7 02       		.byte	0x2
 3033 13f8 470A     		.2byte	0xa47
 3034 13fa F3110000 		.4byte	0x11f3
 3035 13fe 00       		.byte	0
 3036 13ff 1C       		.uleb128 0x1c
 3037 1400 5B020000 		.4byte	.LASF365
 3038 1404 02       		.byte	0x2
 3039 1405 DF09     		.2byte	0x9df
 3040 1407 03       		.byte	0x3
 3041 1408 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 151


 3042 1409 14060000 		.4byte	.LASF366
 3043 140d 02       		.byte	0x2
 3044 140e BE09     		.2byte	0x9be
 3045 1410 03       		.byte	0x3
 3046 1411 22140000 		.4byte	0x1422
 3047 1415 18       		.uleb128 0x18
 3048 1416 47130000 		.4byte	.LASF351
 3049 141a 02       		.byte	0x2
 3050 141b BE09     		.2byte	0x9be
 3051 141d AC000000 		.4byte	0xac
 3052 1421 00       		.byte	0
 3053 1422 1A       		.uleb128 0x1a
 3054 1423 43010000 		.4byte	.LASF367
 3055 1427 02       		.byte	0x2
 3056 1428 9509     		.2byte	0x995
 3057 142a 03       		.byte	0x3
 3058 142b 3C140000 		.4byte	0x143c
 3059 142f 18       		.uleb128 0x18
 3060 1430 33150000 		.4byte	.LASF354
 3061 1434 02       		.byte	0x2
 3062 1435 9509     		.2byte	0x995
 3063 1437 79110000 		.4byte	0x1179
 3064 143b 00       		.byte	0
 3065 143c 17       		.uleb128 0x17
 3066 143d B01A0000 		.4byte	.LASF368
 3067 1441 02       		.byte	0x2
 3068 1442 0B04     		.2byte	0x40b
 3069 1444 080F0000 		.4byte	0xf08
 3070 1448 03       		.byte	0x3
 3071 1449 5A140000 		.4byte	0x145a
 3072 144d 19       		.uleb128 0x19
 3073 144e 5A160000 		.4byte	.LASF352
 3074 1452 02       		.byte	0x2
 3075 1453 0D04     		.2byte	0x40d
 3076 1455 080F0000 		.4byte	0xf08
 3077 1459 00       		.byte	0
 3078 145a 1C       		.uleb128 0x1c
 3079 145b AC150000 		.4byte	.LASF369
 3080 145f 03       		.byte	0x3
 3081 1460 2E09     		.2byte	0x92e
 3082 1462 03       		.byte	0x3
 3083 1463 1C       		.uleb128 0x1c
 3084 1464 3D040000 		.4byte	.LASF370
 3085 1468 03       		.byte	0x3
 3086 1469 6109     		.2byte	0x961
 3087 146b 03       		.byte	0x3
 3088 146c 1D       		.uleb128 0x1d
 3089 146d 1A020000 		.4byte	.LASF387
 3090 1471 01       		.byte	0x1
 3091 1472 82       		.byte	0x82
 3092 1473 00000000 		.4byte	.LFB187
 3093 1477 02000000 		.4byte	.LFE187-.LFB187
 3094 147b 01       		.uleb128 0x1
 3095 147c 9C       		.byte	0x9c
 3096 147d 8F140000 		.4byte	0x148f
 3097 1481 1E       		.uleb128 0x1e
 3098 1482 27160000 		.4byte	.LASF388
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 152


 3099 1486 01       		.byte	0x1
 3100 1487 82       		.byte	0x82
 3101 1488 270E0000 		.4byte	0xe27
 3102 148c 01       		.uleb128 0x1
 3103 148d 50       		.byte	0x50
 3104 148e 00       		.byte	0
 3105 148f 1F       		.uleb128 0x1f
 3106 1490 8A160000 		.4byte	.LASF389
 3107 1494 01       		.byte	0x1
 3108 1495 94       		.byte	0x94
 3109 1496 00000000 		.4byte	.LFB188
 3110 149a A4010000 		.4byte	.LFE188-.LFB188
 3111 149e 01       		.uleb128 0x1
 3112 149f 9C       		.byte	0x9c
 3113 14a0 AE170000 		.4byte	0x17ae
 3114 14a4 20       		.uleb128 0x20
 3115 14a5 3B0E0000 		.4byte	.LASF371
 3116 14a9 01       		.byte	0x1
 3117 14aa 96       		.byte	0x96
 3118 14ab CD000000 		.4byte	0xcd
 3119 14af 00000000 		.4byte	.LLST0
 3120 14b3 21       		.uleb128 0x21
 3121 14b4 6C130000 		.4byte	0x136c
 3122 14b8 04000000 		.4byte	.LBB45
 3123 14bc 0E000000 		.4byte	.LBE45-.LBB45
 3124 14c0 01       		.byte	0x1
 3125 14c1 99       		.byte	0x99
 3126 14c2 D0140000 		.4byte	0x14d0
 3127 14c6 22       		.uleb128 0x22
 3128 14c7 79130000 		.4byte	0x1379
 3129 14cb 34000000 		.4byte	.LLST1
 3130 14cf 00       		.byte	0
 3131 14d0 21       		.uleb128 0x21
 3132 14d1 52130000 		.4byte	0x1352
 3133 14d5 12000000 		.4byte	.LBB47
 3134 14d9 14000000 		.4byte	.LBE47-.LBB47
 3135 14dd 01       		.byte	0x1
 3136 14de 9C       		.byte	0x9c
 3137 14df ED140000 		.4byte	0x14ed
 3138 14e3 22       		.uleb128 0x22
 3139 14e4 5F130000 		.4byte	0x135f
 3140 14e8 48000000 		.4byte	.LLST2
 3141 14ec 00       		.byte	0
 3142 14ed 21       		.uleb128 0x21
 3143 14ee 38130000 		.4byte	0x1338
 3144 14f2 26000000 		.4byte	.LBB49
 3145 14f6 18000000 		.4byte	.LBE49-.LBB49
 3146 14fa 01       		.byte	0x1
 3147 14fb 9D       		.byte	0x9d
 3148 14fc 0A150000 		.4byte	0x150a
 3149 1500 22       		.uleb128 0x22
 3150 1501 45130000 		.4byte	0x1345
 3151 1505 5C000000 		.4byte	.LLST3
 3152 1509 00       		.byte	0
 3153 150a 21       		.uleb128 0x21
 3154 150b 1E130000 		.4byte	0x131e
 3155 150f 3E000000 		.4byte	.LBB51
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 153


 3156 1513 0E000000 		.4byte	.LBE51-.LBB51
 3157 1517 01       		.byte	0x1
 3158 1518 9E       		.byte	0x9e
 3159 1519 27150000 		.4byte	0x1527
 3160 151d 22       		.uleb128 0x22
 3161 151e 2B130000 		.4byte	0x132b
 3162 1522 70000000 		.4byte	.LLST4
 3163 1526 00       		.byte	0
 3164 1527 21       		.uleb128 0x21
 3165 1528 E8120000 		.4byte	0x12e8
 3166 152c 4C000000 		.4byte	.LBB53
 3167 1530 18000000 		.4byte	.LBE53-.LBB53
 3168 1534 01       		.byte	0x1
 3169 1535 A1       		.byte	0xa1
 3170 1536 60150000 		.4byte	0x1560
 3171 153a 22       		.uleb128 0x22
 3172 153b 05130000 		.4byte	0x1305
 3173 153f 84000000 		.4byte	.LLST5
 3174 1543 22       		.uleb128 0x22
 3175 1544 F9120000 		.4byte	0x12f9
 3176 1548 84000000 		.4byte	.LLST5
 3177 154c 23       		.uleb128 0x23
 3178 154d 4C000000 		.4byte	.LBB54
 3179 1551 18000000 		.4byte	.LBE54-.LBB54
 3180 1555 24       		.uleb128 0x24
 3181 1556 11130000 		.4byte	0x1311
 3182 155a 98000000 		.4byte	.LLST7
 3183 155e 00       		.byte	0
 3184 155f 00       		.byte	0
 3185 1560 21       		.uleb128 0x21
 3186 1561 B2120000 		.4byte	0x12b2
 3187 1565 64000000 		.4byte	.LBB55
 3188 1569 16000000 		.4byte	.LBE55-.LBB55
 3189 156d 01       		.byte	0x1
 3190 156e A2       		.byte	0xa2
 3191 156f 99150000 		.4byte	0x1599
 3192 1573 22       		.uleb128 0x22
 3193 1574 CF120000 		.4byte	0x12cf
 3194 1578 B0000000 		.4byte	.LLST8
 3195 157c 22       		.uleb128 0x22
 3196 157d C3120000 		.4byte	0x12c3
 3197 1581 B0000000 		.4byte	.LLST8
 3198 1585 23       		.uleb128 0x23
 3199 1586 64000000 		.4byte	.LBB56
 3200 158a 16000000 		.4byte	.LBE56-.LBB56
 3201 158e 24       		.uleb128 0x24
 3202 158f DB120000 		.4byte	0x12db
 3203 1593 C4000000 		.4byte	.LLST10
 3204 1597 00       		.byte	0
 3205 1598 00       		.byte	0
 3206 1599 21       		.uleb128 0x21
 3207 159a 88120000 		.4byte	0x1288
 3208 159e 7A000000 		.4byte	.LBB57
 3209 15a2 18000000 		.4byte	.LBE57-.LBB57
 3210 15a6 01       		.byte	0x1
 3211 15a7 A3       		.byte	0xa3
 3212 15a8 C9150000 		.4byte	0x15c9
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 154


 3213 15ac 22       		.uleb128 0x22
 3214 15ad 99120000 		.4byte	0x1299
 3215 15b1 DC000000 		.4byte	.LLST11
 3216 15b5 23       		.uleb128 0x23
 3217 15b6 7A000000 		.4byte	.LBB58
 3218 15ba 18000000 		.4byte	.LBE58-.LBB58
 3219 15be 24       		.uleb128 0x24
 3220 15bf A5120000 		.4byte	0x12a5
 3221 15c3 F0000000 		.4byte	.LLST12
 3222 15c7 00       		.byte	0
 3223 15c8 00       		.byte	0
 3224 15c9 25       		.uleb128 0x25
 3225 15ca BA000000 		.4byte	.LBB59
 3226 15ce 1E000000 		.4byte	.LBE59-.LBB59
 3227 15d2 08160000 		.4byte	0x1608
 3228 15d6 26       		.uleb128 0x26
 3229 15d7 1D040000 		.4byte	.LASF372
 3230 15db 01       		.byte	0x1
 3231 15dc AC       		.byte	0xac
 3232 15dd AE170000 		.4byte	0x17ae
 3233 15e1 02       		.uleb128 0x2
 3234 15e2 91       		.byte	0x91
 3235 15e3 5C       		.sleb128 -36
 3236 15e4 27       		.uleb128 0x27
 3237 15e5 CE000000 		.4byte	.LVL14
 3238 15e9 F0180000 		.4byte	0x18f0
 3239 15ed F8150000 		.4byte	0x15f8
 3240 15f1 28       		.uleb128 0x28
 3241 15f2 01       		.uleb128 0x1
 3242 15f3 50       		.byte	0x50
 3243 15f4 02       		.uleb128 0x2
 3244 15f5 91       		.byte	0x91
 3245 15f6 5C       		.sleb128 -36
 3246 15f7 00       		.byte	0
 3247 15f8 29       		.uleb128 0x29
 3248 15f9 D8000000 		.4byte	.LVL16
 3249 15fd 6C140000 		.4byte	0x146c
 3250 1601 28       		.uleb128 0x28
 3251 1602 01       		.uleb128 0x1
 3252 1603 50       		.byte	0x50
 3253 1604 01       		.uleb128 0x1
 3254 1605 34       		.byte	0x34
 3255 1606 00       		.byte	0
 3256 1607 00       		.byte	0
 3257 1608 21       		.uleb128 0x21
 3258 1609 22140000 		.4byte	0x1422
 3259 160d F6000000 		.4byte	.LBB60
 3260 1611 0C000000 		.4byte	.LBE60-.LBB60
 3261 1615 01       		.byte	0x1
 3262 1616 C7       		.byte	0xc7
 3263 1617 25160000 		.4byte	0x1625
 3264 161b 22       		.uleb128 0x22
 3265 161c 2F140000 		.4byte	0x142f
 3266 1620 08010000 		.4byte	.LLST13
 3267 1624 00       		.byte	0
 3268 1625 21       		.uleb128 0x21
 3269 1626 08140000 		.4byte	0x1408
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 155


 3270 162a 02010000 		.4byte	.LBB62
 3271 162e 08000000 		.4byte	.LBE62-.LBB62
 3272 1632 01       		.byte	0x1
 3273 1633 C8       		.byte	0xc8
 3274 1634 42160000 		.4byte	0x1642
 3275 1638 22       		.uleb128 0x22
 3276 1639 15140000 		.4byte	0x1415
 3277 163d 1C010000 		.4byte	.LLST14
 3278 1641 00       		.byte	0
 3279 1642 2A       		.uleb128 0x2a
 3280 1643 FF130000 		.4byte	0x13ff
 3281 1647 0A010000 		.4byte	.LBB64
 3282 164b 0A000000 		.4byte	.LBE64-.LBB64
 3283 164f 01       		.byte	0x1
 3284 1650 C9       		.byte	0xc9
 3285 1651 21       		.uleb128 0x21
 3286 1652 E5130000 		.4byte	0x13e5
 3287 1656 14010000 		.4byte	.LBB66
 3288 165a 0A000000 		.4byte	.LBE66-.LBB66
 3289 165e 01       		.byte	0x1
 3290 165f CA       		.byte	0xca
 3291 1660 6E160000 		.4byte	0x166e
 3292 1664 22       		.uleb128 0x22
 3293 1665 F2130000 		.4byte	0x13f2
 3294 1669 30010000 		.4byte	.LLST15
 3295 166d 00       		.byte	0
 3296 166e 21       		.uleb128 0x21
 3297 166f CB130000 		.4byte	0x13cb
 3298 1673 1E010000 		.4byte	.LBB68
 3299 1677 0E000000 		.4byte	.LBE68-.LBB68
 3300 167b 01       		.byte	0x1
 3301 167c CB       		.byte	0xcb
 3302 167d 8B160000 		.4byte	0x168b
 3303 1681 22       		.uleb128 0x22
 3304 1682 D8130000 		.4byte	0x13d8
 3305 1686 44010000 		.4byte	.LLST16
 3306 168a 00       		.byte	0
 3307 168b 2A       		.uleb128 0x2a
 3308 168c C2130000 		.4byte	0x13c2
 3309 1690 2C010000 		.4byte	.LBB70
 3310 1694 0A000000 		.4byte	.LBE70-.LBB70
 3311 1698 01       		.byte	0x1
 3312 1699 CC       		.byte	0xcc
 3313 169a 21       		.uleb128 0x21
 3314 169b A8130000 		.4byte	0x13a8
 3315 169f 36010000 		.4byte	.LBB72
 3316 16a3 10000000 		.4byte	.LBE72-.LBB72
 3317 16a7 01       		.byte	0x1
 3318 16a8 CD       		.byte	0xcd
 3319 16a9 B7160000 		.4byte	0x16b7
 3320 16ad 22       		.uleb128 0x22
 3321 16ae B5130000 		.4byte	0x13b5
 3322 16b2 58010000 		.4byte	.LLST17
 3323 16b6 00       		.byte	0
 3324 16b7 2A       		.uleb128 0x2a
 3325 16b8 9F130000 		.4byte	0x139f
 3326 16bc 4C010000 		.4byte	.LBB74
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 156


 3327 16c0 08000000 		.4byte	.LBE74-.LBB74
 3328 16c4 01       		.byte	0x1
 3329 16c5 CF       		.byte	0xcf
 3330 16c6 21       		.uleb128 0x21
 3331 16c7 86130000 		.4byte	0x1386
 3332 16cb 54010000 		.4byte	.LBB76
 3333 16cf 0A000000 		.4byte	.LBE76-.LBB76
 3334 16d3 01       		.byte	0x1
 3335 16d4 D0       		.byte	0xd0
 3336 16d5 E3160000 		.4byte	0x16e3
 3337 16d9 22       		.uleb128 0x22
 3338 16da 93130000 		.4byte	0x1393
 3339 16de 6C010000 		.4byte	.LLST18
 3340 16e2 00       		.byte	0
 3341 16e3 27       		.uleb128 0x27
 3342 16e4 9A000000 		.4byte	.LVL9
 3343 16e8 FC180000 		.4byte	0x18fc
 3344 16ec FB160000 		.4byte	0x16fb
 3345 16f0 28       		.uleb128 0x28
 3346 16f1 01       		.uleb128 0x1
 3347 16f2 50       		.byte	0x50
 3348 16f3 01       		.uleb128 0x1
 3349 16f4 31       		.byte	0x31
 3350 16f5 28       		.uleb128 0x28
 3351 16f6 01       		.uleb128 0x1
 3352 16f7 51       		.byte	0x51
 3353 16f8 01       		.uleb128 0x1
 3354 16f9 30       		.byte	0x30
 3355 16fa 00       		.byte	0
 3356 16fb 27       		.uleb128 0x27
 3357 16fc A2000000 		.4byte	.LVL10
 3358 1700 FC180000 		.4byte	0x18fc
 3359 1704 13170000 		.4byte	0x1713
 3360 1708 28       		.uleb128 0x28
 3361 1709 01       		.uleb128 0x1
 3362 170a 50       		.byte	0x50
 3363 170b 01       		.uleb128 0x1
 3364 170c 32       		.byte	0x32
 3365 170d 28       		.uleb128 0x28
 3366 170e 01       		.uleb128 0x1
 3367 170f 51       		.byte	0x51
 3368 1710 01       		.uleb128 0x1
 3369 1711 30       		.byte	0x30
 3370 1712 00       		.byte	0
 3371 1713 27       		.uleb128 0x27
 3372 1714 AA000000 		.4byte	.LVL11
 3373 1718 FC180000 		.4byte	0x18fc
 3374 171c 2B170000 		.4byte	0x172b
 3375 1720 28       		.uleb128 0x28
 3376 1721 01       		.uleb128 0x1
 3377 1722 50       		.byte	0x50
 3378 1723 01       		.uleb128 0x1
 3379 1724 33       		.byte	0x33
 3380 1725 28       		.uleb128 0x28
 3381 1726 01       		.uleb128 0x1
 3382 1727 51       		.byte	0x51
 3383 1728 01       		.uleb128 0x1
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 157


 3384 1729 30       		.byte	0x30
 3385 172a 00       		.byte	0
 3386 172b 27       		.uleb128 0x27
 3387 172c B2000000 		.4byte	.LVL12
 3388 1730 FC180000 		.4byte	0x18fc
 3389 1734 43170000 		.4byte	0x1743
 3390 1738 28       		.uleb128 0x28
 3391 1739 01       		.uleb128 0x1
 3392 173a 50       		.byte	0x50
 3393 173b 01       		.uleb128 0x1
 3394 173c 34       		.byte	0x34
 3395 173d 28       		.uleb128 0x28
 3396 173e 01       		.uleb128 0x1
 3397 173f 51       		.byte	0x51
 3398 1740 01       		.uleb128 0x1
 3399 1741 30       		.byte	0x30
 3400 1742 00       		.byte	0
 3401 1743 27       		.uleb128 0x27
 3402 1744 BA000000 		.4byte	.LVL13
 3403 1748 FC180000 		.4byte	0x18fc
 3404 174c 5B170000 		.4byte	0x175b
 3405 1750 28       		.uleb128 0x28
 3406 1751 01       		.uleb128 0x1
 3407 1752 50       		.byte	0x50
 3408 1753 01       		.uleb128 0x1
 3409 1754 30       		.byte	0x30
 3410 1755 28       		.uleb128 0x28
 3411 1756 01       		.uleb128 0x1
 3412 1757 51       		.byte	0x51
 3413 1758 01       		.uleb128 0x1
 3414 1759 30       		.byte	0x30
 3415 175a 00       		.byte	0
 3416 175b 27       		.uleb128 0x27
 3417 175c EC000000 		.4byte	.LVL18
 3418 1760 08190000 		.4byte	0x1908
 3419 1764 72170000 		.4byte	0x1772
 3420 1768 28       		.uleb128 0x28
 3421 1769 01       		.uleb128 0x1
 3422 176a 50       		.byte	0x50
 3423 176b 05       		.uleb128 0x5
 3424 176c 0C       		.byte	0xc
 3425 176d 400D0300 		.4byte	0x30d40
 3426 1771 00       		.byte	0
 3427 1772 27       		.uleb128 0x27
 3428 1773 F6000000 		.4byte	.LVL20
 3429 1777 6C140000 		.4byte	0x146c
 3430 177b 85170000 		.4byte	0x1785
 3431 177f 28       		.uleb128 0x28
 3432 1780 01       		.uleb128 0x1
 3433 1781 50       		.byte	0x50
 3434 1782 01       		.uleb128 0x1
 3435 1783 34       		.byte	0x34
 3436 1784 00       		.byte	0
 3437 1785 27       		.uleb128 0x27
 3438 1786 4C010000 		.4byte	.LVL29
 3439 178a 14190000 		.4byte	0x1914
 3440 178e 98170000 		.4byte	0x1798
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 158


 3441 1792 28       		.uleb128 0x28
 3442 1793 01       		.uleb128 0x1
 3443 1794 50       		.byte	0x50
 3444 1795 01       		.uleb128 0x1
 3445 1796 30       		.byte	0x30
 3446 1797 00       		.byte	0
 3447 1798 29       		.uleb128 0x29
 3448 1799 66010000 		.4byte	.LVL32
 3449 179d 1F190000 		.4byte	0x191f
 3450 17a1 28       		.uleb128 0x28
 3451 17a2 01       		.uleb128 0x1
 3452 17a3 50       		.byte	0x50
 3453 17a4 01       		.uleb128 0x1
 3454 17a5 30       		.byte	0x30
 3455 17a6 28       		.uleb128 0x28
 3456 17a7 01       		.uleb128 0x1
 3457 17a8 51       		.byte	0x51
 3458 17a9 02       		.uleb128 0x2
 3459 17aa 08       		.byte	0x8
 3460 17ab 64       		.byte	0x64
 3461 17ac 00       		.byte	0
 3462 17ad 00       		.byte	0
 3463 17ae 06       		.uleb128 0x6
 3464 17af 60100000 		.4byte	0x1060
 3465 17b3 2B       		.uleb128 0x2b
 3466 17b4 030D0000 		.4byte	.LASF390
 3467 17b8 01       		.byte	0x1
 3468 17b9 0201     		.2byte	0x102
 3469 17bb 00000000 		.4byte	.LFB190
 3470 17bf D0000000 		.4byte	.LFE190-.LFB190
 3471 17c3 01       		.uleb128 0x1
 3472 17c4 9C       		.byte	0x9c
 3473 17c5 D5180000 		.4byte	0x18d5
 3474 17c9 2C       		.uleb128 0x2c
 3475 17ca 3C140000 		.4byte	0x143c
 3476 17ce 18000000 		.4byte	.LBB78
 3477 17d2 18000000 		.4byte	.LBE78-.LBB78
 3478 17d6 01       		.byte	0x1
 3479 17d7 0A01     		.2byte	0x10a
 3480 17d9 F1170000 		.4byte	0x17f1
 3481 17dd 23       		.uleb128 0x23
 3482 17de 18000000 		.4byte	.LBB79
 3483 17e2 18000000 		.4byte	.LBE79-.LBB79
 3484 17e6 24       		.uleb128 0x24
 3485 17e7 4D140000 		.4byte	0x144d
 3486 17eb 80010000 		.4byte	.LLST19
 3487 17ef 00       		.byte	0
 3488 17f0 00       		.byte	0
 3489 17f1 2D       		.uleb128 0x2d
 3490 17f2 9F130000 		.4byte	0x139f
 3491 17f6 30000000 		.4byte	.LBB80
 3492 17fa 0E000000 		.4byte	.LBE80-.LBB80
 3493 17fe 01       		.byte	0x1
 3494 17ff 0B01     		.2byte	0x10b
 3495 1801 2D       		.uleb128 0x2d
 3496 1802 63140000 		.4byte	0x1463
 3497 1806 44000000 		.4byte	.LBB82
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 159


 3498 180a 10000000 		.4byte	.LBE82-.LBB82
 3499 180e 01       		.byte	0x1
 3500 180f 1201     		.2byte	0x112
 3501 1811 2D       		.uleb128 0x2d
 3502 1812 5A140000 		.4byte	0x145a
 3503 1816 54000000 		.4byte	.LBB84
 3504 181a 1C000000 		.4byte	.LBE84-.LBB84
 3505 181e 01       		.byte	0x1
 3506 181f 1301     		.2byte	0x113
 3507 1821 25       		.uleb128 0x25
 3508 1822 74000000 		.4byte	.LBB86
 3509 1826 1E000000 		.4byte	.LBE86-.LBB86
 3510 182a 57180000 		.4byte	0x1857
 3511 182e 2E       		.uleb128 0x2e
 3512 182f F90C0000 		.4byte	.LASF373
 3513 1833 01       		.byte	0x1
 3514 1834 1A01     		.2byte	0x11a
 3515 1836 D5180000 		.4byte	0x18d5
 3516 183a 02       		.uleb128 0x2
 3517 183b 91       		.byte	0x91
 3518 183c 4C       		.sleb128 -52
 3519 183d 29       		.uleb128 0x29
 3520 183e 92000000 		.4byte	.LVL39
 3521 1842 2B190000 		.4byte	0x192b
 3522 1846 28       		.uleb128 0x28
 3523 1847 01       		.uleb128 0x1
 3524 1848 50       		.byte	0x50
 3525 1849 05       		.uleb128 0x5
 3526 184a 0C       		.byte	0xc
 3527 184b 80003240 		.4byte	0x40320080
 3528 184f 28       		.uleb128 0x28
 3529 1850 01       		.uleb128 0x1
 3530 1851 51       		.byte	0x51
 3531 1852 02       		.uleb128 0x2
 3532 1853 75       		.byte	0x75
 3533 1854 00       		.sleb128 0
 3534 1855 00       		.byte	0
 3535 1856 00       		.byte	0
 3536 1857 25       		.uleb128 0x25
 3537 1858 92000000 		.4byte	.LBB87
 3538 185c 1A000000 		.4byte	.LBE87-.LBB87
 3539 1860 8D180000 		.4byte	0x188d
 3540 1864 2E       		.uleb128 0x2e
 3541 1865 620B0000 		.4byte	.LASF374
 3542 1869 01       		.byte	0x1
 3543 186a 2B01     		.2byte	0x12b
 3544 186c D5180000 		.4byte	0x18d5
 3545 1870 02       		.uleb128 0x2
 3546 1871 91       		.byte	0x91
 3547 1872 4C       		.sleb128 -52
 3548 1873 29       		.uleb128 0x29
 3549 1874 AC000000 		.4byte	.LVL40
 3550 1878 2B190000 		.4byte	0x192b
 3551 187c 28       		.uleb128 0x28
 3552 187d 01       		.uleb128 0x1
 3553 187e 50       		.byte	0x50
 3554 187f 05       		.uleb128 0x5
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 160


 3555 1880 0C       		.byte	0xc
 3556 1881 00033240 		.4byte	0x40320300
 3557 1885 28       		.uleb128 0x28
 3558 1886 01       		.uleb128 0x1
 3559 1887 51       		.byte	0x51
 3560 1888 02       		.uleb128 0x2
 3561 1889 75       		.byte	0x75
 3562 188a 00       		.sleb128 0
 3563 188b 00       		.byte	0
 3564 188c 00       		.byte	0
 3565 188d 27       		.uleb128 0x27
 3566 188e 0C000000 		.4byte	.LVL33
 3567 1892 1F190000 		.4byte	0x191f
 3568 1896 A6180000 		.4byte	0x18a6
 3569 189a 28       		.uleb128 0x28
 3570 189b 01       		.uleb128 0x1
 3571 189c 50       		.byte	0x50
 3572 189d 01       		.uleb128 0x1
 3573 189e 30       		.byte	0x30
 3574 189f 28       		.uleb128 0x28
 3575 18a0 01       		.uleb128 0x1
 3576 18a1 51       		.byte	0x51
 3577 18a2 02       		.uleb128 0x2
 3578 18a3 08       		.byte	0x8
 3579 18a4 96       		.byte	0x96
 3580 18a5 00       		.byte	0
 3581 18a6 2F       		.uleb128 0x2f
 3582 18a7 10000000 		.4byte	.LVL34
 3583 18ab 37190000 		.4byte	0x1937
 3584 18af 2F       		.uleb128 0x2f
 3585 18b0 18000000 		.4byte	.LVL35
 3586 18b4 43190000 		.4byte	0x1943
 3587 18b8 27       		.uleb128 0x27
 3588 18b9 44000000 		.4byte	.LVL37
 3589 18bd 4F190000 		.4byte	0x194f
 3590 18c1 CB180000 		.4byte	0x18cb
 3591 18c5 28       		.uleb128 0x28
 3592 18c6 01       		.uleb128 0x1
 3593 18c7 50       		.byte	0x50
 3594 18c8 01       		.uleb128 0x1
 3595 18c9 31       		.byte	0x31
 3596 18ca 00       		.byte	0
 3597 18cb 2F       		.uleb128 0x2f
 3598 18cc 74000000 		.4byte	.LVL38
 3599 18d0 8F140000 		.4byte	0x148f
 3600 18d4 00       		.byte	0
 3601 18d5 06       		.uleb128 0x6
 3602 18d6 A80E0000 		.4byte	0xea8
 3603 18da 30       		.uleb128 0x30
 3604 18db 7D000000 		.4byte	.LASF391
 3605 18df 0A       		.byte	0xa
 3606 18e0 A7       		.byte	0xa7
 3607 18e1 E5180000 		.4byte	0x18e5
 3608 18e5 31       		.uleb128 0x31
 3609 18e6 04       		.byte	0x4
 3610 18e7 EB180000 		.4byte	0x18eb
 3611 18eb 06       		.uleb128 0x6
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 161


 3612 18ec 020E0000 		.4byte	0xe02
 3613 18f0 32       		.uleb128 0x32
 3614 18f1 DC0C0000 		.4byte	.LASF375
 3615 18f5 DC0C0000 		.4byte	.LASF375
 3616 18f9 02       		.byte	0x2
 3617 18fa 1603     		.2byte	0x316
 3618 18fc 32       		.uleb128 0x32
 3619 18fd E6000000 		.4byte	.LASF376
 3620 1901 E6000000 		.4byte	.LASF376
 3621 1905 02       		.byte	0x2
 3622 1906 D802     		.2byte	0x2d8
 3623 1908 32       		.uleb128 0x32
 3624 1909 88040000 		.4byte	.LASF377
 3625 190d 88040000 		.4byte	.LASF377
 3626 1911 02       		.byte	0x2
 3627 1912 1803     		.2byte	0x318
 3628 1914 33       		.uleb128 0x33
 3629 1915 CB120000 		.4byte	.LASF378
 3630 1919 CB120000 		.4byte	.LASF378
 3631 191d 0D       		.byte	0xd
 3632 191e 90       		.byte	0x90
 3633 191f 32       		.uleb128 0x32
 3634 1920 F4140000 		.4byte	.LASF379
 3635 1924 F4140000 		.4byte	.LASF379
 3636 1928 0B       		.byte	0xb
 3637 1929 A003     		.2byte	0x3a0
 3638 192b 32       		.uleb128 0x32
 3639 192c 6E050000 		.4byte	.LASF380
 3640 1930 6E050000 		.4byte	.LASF380
 3641 1934 0C       		.byte	0xc
 3642 1935 1702     		.2byte	0x217
 3643 1937 32       		.uleb128 0x32
 3644 1938 B30B0000 		.4byte	.LASF381
 3645 193c B30B0000 		.4byte	.LASF381
 3646 1940 0B       		.byte	0xb
 3647 1941 9603     		.2byte	0x396
 3648 1943 32       		.uleb128 0x32
 3649 1944 C00C0000 		.4byte	.LASF382
 3650 1948 C00C0000 		.4byte	.LASF382
 3651 194c 0B       		.byte	0xb
 3652 194d 9503     		.2byte	0x395
 3653 194f 32       		.uleb128 0x32
 3654 1950 8C0B0000 		.4byte	.LASF383
 3655 1954 8C0B0000 		.4byte	.LASF383
 3656 1958 03       		.byte	0x3
 3657 1959 6606     		.2byte	0x666
 3658 195b 00       		.byte	0
 3659              		.section	.debug_abbrev,"",%progbits
 3660              	.Ldebug_abbrev0:
 3661 0000 01       		.uleb128 0x1
 3662 0001 11       		.uleb128 0x11
 3663 0002 01       		.byte	0x1
 3664 0003 25       		.uleb128 0x25
 3665 0004 0E       		.uleb128 0xe
 3666 0005 13       		.uleb128 0x13
 3667 0006 0B       		.uleb128 0xb
 3668 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 162


 3669 0008 0E       		.uleb128 0xe
 3670 0009 1B       		.uleb128 0x1b
 3671 000a 0E       		.uleb128 0xe
 3672 000b 55       		.uleb128 0x55
 3673 000c 17       		.uleb128 0x17
 3674 000d 11       		.uleb128 0x11
 3675 000e 01       		.uleb128 0x1
 3676 000f 10       		.uleb128 0x10
 3677 0010 17       		.uleb128 0x17
 3678 0011 00       		.byte	0
 3679 0012 00       		.byte	0
 3680 0013 02       		.uleb128 0x2
 3681 0014 24       		.uleb128 0x24
 3682 0015 00       		.byte	0
 3683 0016 0B       		.uleb128 0xb
 3684 0017 0B       		.uleb128 0xb
 3685 0018 3E       		.uleb128 0x3e
 3686 0019 0B       		.uleb128 0xb
 3687 001a 03       		.uleb128 0x3
 3688 001b 08       		.uleb128 0x8
 3689 001c 00       		.byte	0
 3690 001d 00       		.byte	0
 3691 001e 03       		.uleb128 0x3
 3692 001f 24       		.uleb128 0x24
 3693 0020 00       		.byte	0
 3694 0021 0B       		.uleb128 0xb
 3695 0022 0B       		.uleb128 0xb
 3696 0023 3E       		.uleb128 0x3e
 3697 0024 0B       		.uleb128 0xb
 3698 0025 03       		.uleb128 0x3
 3699 0026 0E       		.uleb128 0xe
 3700 0027 00       		.byte	0
 3701 0028 00       		.byte	0
 3702 0029 04       		.uleb128 0x4
 3703 002a 16       		.uleb128 0x16
 3704 002b 00       		.byte	0
 3705 002c 03       		.uleb128 0x3
 3706 002d 0E       		.uleb128 0xe
 3707 002e 3A       		.uleb128 0x3a
 3708 002f 0B       		.uleb128 0xb
 3709 0030 3B       		.uleb128 0x3b
 3710 0031 0B       		.uleb128 0xb
 3711 0032 49       		.uleb128 0x49
 3712 0033 13       		.uleb128 0x13
 3713 0034 00       		.byte	0
 3714 0035 00       		.byte	0
 3715 0036 05       		.uleb128 0x5
 3716 0037 35       		.uleb128 0x35
 3717 0038 00       		.byte	0
 3718 0039 49       		.uleb128 0x49
 3719 003a 13       		.uleb128 0x13
 3720 003b 00       		.byte	0
 3721 003c 00       		.byte	0
 3722 003d 06       		.uleb128 0x6
 3723 003e 26       		.uleb128 0x26
 3724 003f 00       		.byte	0
 3725 0040 49       		.uleb128 0x49
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 163


 3726 0041 13       		.uleb128 0x13
 3727 0042 00       		.byte	0
 3728 0043 00       		.byte	0
 3729 0044 07       		.uleb128 0x7
 3730 0045 01       		.uleb128 0x1
 3731 0046 01       		.byte	0x1
 3732 0047 49       		.uleb128 0x49
 3733 0048 13       		.uleb128 0x13
 3734 0049 01       		.uleb128 0x1
 3735 004a 13       		.uleb128 0x13
 3736 004b 00       		.byte	0
 3737 004c 00       		.byte	0
 3738 004d 08       		.uleb128 0x8
 3739 004e 21       		.uleb128 0x21
 3740 004f 00       		.byte	0
 3741 0050 49       		.uleb128 0x49
 3742 0051 13       		.uleb128 0x13
 3743 0052 2F       		.uleb128 0x2f
 3744 0053 0B       		.uleb128 0xb
 3745 0054 00       		.byte	0
 3746 0055 00       		.byte	0
 3747 0056 09       		.uleb128 0x9
 3748 0057 13       		.uleb128 0x13
 3749 0058 01       		.byte	0x1
 3750 0059 0B       		.uleb128 0xb
 3751 005a 0B       		.uleb128 0xb
 3752 005b 3A       		.uleb128 0x3a
 3753 005c 0B       		.uleb128 0xb
 3754 005d 3B       		.uleb128 0x3b
 3755 005e 0B       		.uleb128 0xb
 3756 005f 01       		.uleb128 0x1
 3757 0060 13       		.uleb128 0x13
 3758 0061 00       		.byte	0
 3759 0062 00       		.byte	0
 3760 0063 0A       		.uleb128 0xa
 3761 0064 0D       		.uleb128 0xd
 3762 0065 00       		.byte	0
 3763 0066 03       		.uleb128 0x3
 3764 0067 0E       		.uleb128 0xe
 3765 0068 3A       		.uleb128 0x3a
 3766 0069 0B       		.uleb128 0xb
 3767 006a 3B       		.uleb128 0x3b
 3768 006b 0B       		.uleb128 0xb
 3769 006c 49       		.uleb128 0x49
 3770 006d 13       		.uleb128 0x13
 3771 006e 38       		.uleb128 0x38
 3772 006f 0B       		.uleb128 0xb
 3773 0070 00       		.byte	0
 3774 0071 00       		.byte	0
 3775 0072 0B       		.uleb128 0xb
 3776 0073 13       		.uleb128 0x13
 3777 0074 01       		.byte	0x1
 3778 0075 0B       		.uleb128 0xb
 3779 0076 05       		.uleb128 0x5
 3780 0077 3A       		.uleb128 0x3a
 3781 0078 0B       		.uleb128 0xb
 3782 0079 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 164


 3783 007a 0B       		.uleb128 0xb
 3784 007b 01       		.uleb128 0x1
 3785 007c 13       		.uleb128 0x13
 3786 007d 00       		.byte	0
 3787 007e 00       		.byte	0
 3788 007f 0C       		.uleb128 0xc
 3789 0080 0D       		.uleb128 0xd
 3790 0081 00       		.byte	0
 3791 0082 03       		.uleb128 0x3
 3792 0083 0E       		.uleb128 0xe
 3793 0084 3A       		.uleb128 0x3a
 3794 0085 0B       		.uleb128 0xb
 3795 0086 3B       		.uleb128 0x3b
 3796 0087 0B       		.uleb128 0xb
 3797 0088 49       		.uleb128 0x49
 3798 0089 13       		.uleb128 0x13
 3799 008a 38       		.uleb128 0x38
 3800 008b 05       		.uleb128 0x5
 3801 008c 00       		.byte	0
 3802 008d 00       		.byte	0
 3803 008e 0D       		.uleb128 0xd
 3804 008f 21       		.uleb128 0x21
 3805 0090 00       		.byte	0
 3806 0091 49       		.uleb128 0x49
 3807 0092 13       		.uleb128 0x13
 3808 0093 2F       		.uleb128 0x2f
 3809 0094 05       		.uleb128 0x5
 3810 0095 00       		.byte	0
 3811 0096 00       		.byte	0
 3812 0097 0E       		.uleb128 0xe
 3813 0098 0D       		.uleb128 0xd
 3814 0099 00       		.byte	0
 3815 009a 03       		.uleb128 0x3
 3816 009b 08       		.uleb128 0x8
 3817 009c 3A       		.uleb128 0x3a
 3818 009d 0B       		.uleb128 0xb
 3819 009e 3B       		.uleb128 0x3b
 3820 009f 0B       		.uleb128 0xb
 3821 00a0 49       		.uleb128 0x49
 3822 00a1 13       		.uleb128 0x13
 3823 00a2 38       		.uleb128 0x38
 3824 00a3 0B       		.uleb128 0xb
 3825 00a4 00       		.byte	0
 3826 00a5 00       		.byte	0
 3827 00a6 0F       		.uleb128 0xf
 3828 00a7 16       		.uleb128 0x16
 3829 00a8 00       		.byte	0
 3830 00a9 03       		.uleb128 0x3
 3831 00aa 0E       		.uleb128 0xe
 3832 00ab 3A       		.uleb128 0x3a
 3833 00ac 0B       		.uleb128 0xb
 3834 00ad 3B       		.uleb128 0x3b
 3835 00ae 05       		.uleb128 0x5
 3836 00af 49       		.uleb128 0x49
 3837 00b0 13       		.uleb128 0x13
 3838 00b1 00       		.byte	0
 3839 00b2 00       		.byte	0
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 165


 3840 00b3 10       		.uleb128 0x10
 3841 00b4 04       		.uleb128 0x4
 3842 00b5 01       		.byte	0x1
 3843 00b6 0B       		.uleb128 0xb
 3844 00b7 0B       		.uleb128 0xb
 3845 00b8 49       		.uleb128 0x49
 3846 00b9 13       		.uleb128 0x13
 3847 00ba 3A       		.uleb128 0x3a
 3848 00bb 0B       		.uleb128 0xb
 3849 00bc 3B       		.uleb128 0x3b
 3850 00bd 05       		.uleb128 0x5
 3851 00be 01       		.uleb128 0x1
 3852 00bf 13       		.uleb128 0x13
 3853 00c0 00       		.byte	0
 3854 00c1 00       		.byte	0
 3855 00c2 11       		.uleb128 0x11
 3856 00c3 28       		.uleb128 0x28
 3857 00c4 00       		.byte	0
 3858 00c5 03       		.uleb128 0x3
 3859 00c6 0E       		.uleb128 0xe
 3860 00c7 1C       		.uleb128 0x1c
 3861 00c8 0B       		.uleb128 0xb
 3862 00c9 00       		.byte	0
 3863 00ca 00       		.byte	0
 3864 00cb 12       		.uleb128 0x12
 3865 00cc 28       		.uleb128 0x28
 3866 00cd 00       		.byte	0
 3867 00ce 03       		.uleb128 0x3
 3868 00cf 0E       		.uleb128 0xe
 3869 00d0 1C       		.uleb128 0x1c
 3870 00d1 06       		.uleb128 0x6
 3871 00d2 00       		.byte	0
 3872 00d3 00       		.byte	0
 3873 00d4 13       		.uleb128 0x13
 3874 00d5 28       		.uleb128 0x28
 3875 00d6 00       		.byte	0
 3876 00d7 03       		.uleb128 0x3
 3877 00d8 0E       		.uleb128 0xe
 3878 00d9 1C       		.uleb128 0x1c
 3879 00da 05       		.uleb128 0x5
 3880 00db 00       		.byte	0
 3881 00dc 00       		.byte	0
 3882 00dd 14       		.uleb128 0x14
 3883 00de 13       		.uleb128 0x13
 3884 00df 01       		.byte	0x1
 3885 00e0 0B       		.uleb128 0xb
 3886 00e1 0B       		.uleb128 0xb
 3887 00e2 3A       		.uleb128 0x3a
 3888 00e3 0B       		.uleb128 0xb
 3889 00e4 3B       		.uleb128 0x3b
 3890 00e5 05       		.uleb128 0x5
 3891 00e6 01       		.uleb128 0x1
 3892 00e7 13       		.uleb128 0x13
 3893 00e8 00       		.byte	0
 3894 00e9 00       		.byte	0
 3895 00ea 15       		.uleb128 0x15
 3896 00eb 0D       		.uleb128 0xd
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 166


 3897 00ec 00       		.byte	0
 3898 00ed 03       		.uleb128 0x3
 3899 00ee 0E       		.uleb128 0xe
 3900 00ef 3A       		.uleb128 0x3a
 3901 00f0 0B       		.uleb128 0xb
 3902 00f1 3B       		.uleb128 0x3b
 3903 00f2 05       		.uleb128 0x5
 3904 00f3 49       		.uleb128 0x49
 3905 00f4 13       		.uleb128 0x13
 3906 00f5 38       		.uleb128 0x38
 3907 00f6 0B       		.uleb128 0xb
 3908 00f7 00       		.byte	0
 3909 00f8 00       		.byte	0
 3910 00f9 16       		.uleb128 0x16
 3911 00fa 04       		.uleb128 0x4
 3912 00fb 01       		.byte	0x1
 3913 00fc 0B       		.uleb128 0xb
 3914 00fd 0B       		.uleb128 0xb
 3915 00fe 49       		.uleb128 0x49
 3916 00ff 13       		.uleb128 0x13
 3917 0100 3A       		.uleb128 0x3a
 3918 0101 0B       		.uleb128 0xb
 3919 0102 3B       		.uleb128 0x3b
 3920 0103 0B       		.uleb128 0xb
 3921 0104 01       		.uleb128 0x1
 3922 0105 13       		.uleb128 0x13
 3923 0106 00       		.byte	0
 3924 0107 00       		.byte	0
 3925 0108 17       		.uleb128 0x17
 3926 0109 2E       		.uleb128 0x2e
 3927 010a 01       		.byte	0x1
 3928 010b 03       		.uleb128 0x3
 3929 010c 0E       		.uleb128 0xe
 3930 010d 3A       		.uleb128 0x3a
 3931 010e 0B       		.uleb128 0xb
 3932 010f 3B       		.uleb128 0x3b
 3933 0110 05       		.uleb128 0x5
 3934 0111 27       		.uleb128 0x27
 3935 0112 19       		.uleb128 0x19
 3936 0113 49       		.uleb128 0x49
 3937 0114 13       		.uleb128 0x13
 3938 0115 20       		.uleb128 0x20
 3939 0116 0B       		.uleb128 0xb
 3940 0117 01       		.uleb128 0x1
 3941 0118 13       		.uleb128 0x13
 3942 0119 00       		.byte	0
 3943 011a 00       		.byte	0
 3944 011b 18       		.uleb128 0x18
 3945 011c 05       		.uleb128 0x5
 3946 011d 00       		.byte	0
 3947 011e 03       		.uleb128 0x3
 3948 011f 0E       		.uleb128 0xe
 3949 0120 3A       		.uleb128 0x3a
 3950 0121 0B       		.uleb128 0xb
 3951 0122 3B       		.uleb128 0x3b
 3952 0123 05       		.uleb128 0x5
 3953 0124 49       		.uleb128 0x49
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 167


 3954 0125 13       		.uleb128 0x13
 3955 0126 00       		.byte	0
 3956 0127 00       		.byte	0
 3957 0128 19       		.uleb128 0x19
 3958 0129 34       		.uleb128 0x34
 3959 012a 00       		.byte	0
 3960 012b 03       		.uleb128 0x3
 3961 012c 0E       		.uleb128 0xe
 3962 012d 3A       		.uleb128 0x3a
 3963 012e 0B       		.uleb128 0xb
 3964 012f 3B       		.uleb128 0x3b
 3965 0130 05       		.uleb128 0x5
 3966 0131 49       		.uleb128 0x49
 3967 0132 13       		.uleb128 0x13
 3968 0133 00       		.byte	0
 3969 0134 00       		.byte	0
 3970 0135 1A       		.uleb128 0x1a
 3971 0136 2E       		.uleb128 0x2e
 3972 0137 01       		.byte	0x1
 3973 0138 03       		.uleb128 0x3
 3974 0139 0E       		.uleb128 0xe
 3975 013a 3A       		.uleb128 0x3a
 3976 013b 0B       		.uleb128 0xb
 3977 013c 3B       		.uleb128 0x3b
 3978 013d 05       		.uleb128 0x5
 3979 013e 27       		.uleb128 0x27
 3980 013f 19       		.uleb128 0x19
 3981 0140 20       		.uleb128 0x20
 3982 0141 0B       		.uleb128 0xb
 3983 0142 01       		.uleb128 0x1
 3984 0143 13       		.uleb128 0x13
 3985 0144 00       		.byte	0
 3986 0145 00       		.byte	0
 3987 0146 1B       		.uleb128 0x1b
 3988 0147 05       		.uleb128 0x5
 3989 0148 00       		.byte	0
 3990 0149 03       		.uleb128 0x3
 3991 014a 08       		.uleb128 0x8
 3992 014b 3A       		.uleb128 0x3a
 3993 014c 0B       		.uleb128 0xb
 3994 014d 3B       		.uleb128 0x3b
 3995 014e 05       		.uleb128 0x5
 3996 014f 49       		.uleb128 0x49
 3997 0150 13       		.uleb128 0x13
 3998 0151 00       		.byte	0
 3999 0152 00       		.byte	0
 4000 0153 1C       		.uleb128 0x1c
 4001 0154 2E       		.uleb128 0x2e
 4002 0155 00       		.byte	0
 4003 0156 03       		.uleb128 0x3
 4004 0157 0E       		.uleb128 0xe
 4005 0158 3A       		.uleb128 0x3a
 4006 0159 0B       		.uleb128 0xb
 4007 015a 3B       		.uleb128 0x3b
 4008 015b 05       		.uleb128 0x5
 4009 015c 27       		.uleb128 0x27
 4010 015d 19       		.uleb128 0x19
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 168


 4011 015e 20       		.uleb128 0x20
 4012 015f 0B       		.uleb128 0xb
 4013 0160 00       		.byte	0
 4014 0161 00       		.byte	0
 4015 0162 1D       		.uleb128 0x1d
 4016 0163 2E       		.uleb128 0x2e
 4017 0164 01       		.byte	0x1
 4018 0165 03       		.uleb128 0x3
 4019 0166 0E       		.uleb128 0xe
 4020 0167 3A       		.uleb128 0x3a
 4021 0168 0B       		.uleb128 0xb
 4022 0169 3B       		.uleb128 0x3b
 4023 016a 0B       		.uleb128 0xb
 4024 016b 27       		.uleb128 0x27
 4025 016c 19       		.uleb128 0x19
 4026 016d 8701     		.uleb128 0x87
 4027 016f 19       		.uleb128 0x19
 4028 0170 11       		.uleb128 0x11
 4029 0171 01       		.uleb128 0x1
 4030 0172 12       		.uleb128 0x12
 4031 0173 06       		.uleb128 0x6
 4032 0174 40       		.uleb128 0x40
 4033 0175 18       		.uleb128 0x18
 4034 0176 9742     		.uleb128 0x2117
 4035 0178 19       		.uleb128 0x19
 4036 0179 01       		.uleb128 0x1
 4037 017a 13       		.uleb128 0x13
 4038 017b 00       		.byte	0
 4039 017c 00       		.byte	0
 4040 017d 1E       		.uleb128 0x1e
 4041 017e 05       		.uleb128 0x5
 4042 017f 00       		.byte	0
 4043 0180 03       		.uleb128 0x3
 4044 0181 0E       		.uleb128 0xe
 4045 0182 3A       		.uleb128 0x3a
 4046 0183 0B       		.uleb128 0xb
 4047 0184 3B       		.uleb128 0x3b
 4048 0185 0B       		.uleb128 0xb
 4049 0186 49       		.uleb128 0x49
 4050 0187 13       		.uleb128 0x13
 4051 0188 02       		.uleb128 0x2
 4052 0189 18       		.uleb128 0x18
 4053 018a 00       		.byte	0
 4054 018b 00       		.byte	0
 4055 018c 1F       		.uleb128 0x1f
 4056 018d 2E       		.uleb128 0x2e
 4057 018e 01       		.byte	0x1
 4058 018f 03       		.uleb128 0x3
 4059 0190 0E       		.uleb128 0xe
 4060 0191 3A       		.uleb128 0x3a
 4061 0192 0B       		.uleb128 0xb
 4062 0193 3B       		.uleb128 0x3b
 4063 0194 0B       		.uleb128 0xb
 4064 0195 27       		.uleb128 0x27
 4065 0196 19       		.uleb128 0x19
 4066 0197 11       		.uleb128 0x11
 4067 0198 01       		.uleb128 0x1
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 169


 4068 0199 12       		.uleb128 0x12
 4069 019a 06       		.uleb128 0x6
 4070 019b 40       		.uleb128 0x40
 4071 019c 18       		.uleb128 0x18
 4072 019d 9742     		.uleb128 0x2117
 4073 019f 19       		.uleb128 0x19
 4074 01a0 01       		.uleb128 0x1
 4075 01a1 13       		.uleb128 0x13
 4076 01a2 00       		.byte	0
 4077 01a3 00       		.byte	0
 4078 01a4 20       		.uleb128 0x20
 4079 01a5 34       		.uleb128 0x34
 4080 01a6 00       		.byte	0
 4081 01a7 03       		.uleb128 0x3
 4082 01a8 0E       		.uleb128 0xe
 4083 01a9 3A       		.uleb128 0x3a
 4084 01aa 0B       		.uleb128 0xb
 4085 01ab 3B       		.uleb128 0x3b
 4086 01ac 0B       		.uleb128 0xb
 4087 01ad 49       		.uleb128 0x49
 4088 01ae 13       		.uleb128 0x13
 4089 01af 02       		.uleb128 0x2
 4090 01b0 17       		.uleb128 0x17
 4091 01b1 00       		.byte	0
 4092 01b2 00       		.byte	0
 4093 01b3 21       		.uleb128 0x21
 4094 01b4 1D       		.uleb128 0x1d
 4095 01b5 01       		.byte	0x1
 4096 01b6 31       		.uleb128 0x31
 4097 01b7 13       		.uleb128 0x13
 4098 01b8 11       		.uleb128 0x11
 4099 01b9 01       		.uleb128 0x1
 4100 01ba 12       		.uleb128 0x12
 4101 01bb 06       		.uleb128 0x6
 4102 01bc 58       		.uleb128 0x58
 4103 01bd 0B       		.uleb128 0xb
 4104 01be 59       		.uleb128 0x59
 4105 01bf 0B       		.uleb128 0xb
 4106 01c0 01       		.uleb128 0x1
 4107 01c1 13       		.uleb128 0x13
 4108 01c2 00       		.byte	0
 4109 01c3 00       		.byte	0
 4110 01c4 22       		.uleb128 0x22
 4111 01c5 05       		.uleb128 0x5
 4112 01c6 00       		.byte	0
 4113 01c7 31       		.uleb128 0x31
 4114 01c8 13       		.uleb128 0x13
 4115 01c9 02       		.uleb128 0x2
 4116 01ca 17       		.uleb128 0x17
 4117 01cb 00       		.byte	0
 4118 01cc 00       		.byte	0
 4119 01cd 23       		.uleb128 0x23
 4120 01ce 0B       		.uleb128 0xb
 4121 01cf 01       		.byte	0x1
 4122 01d0 11       		.uleb128 0x11
 4123 01d1 01       		.uleb128 0x1
 4124 01d2 12       		.uleb128 0x12
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 170


 4125 01d3 06       		.uleb128 0x6
 4126 01d4 00       		.byte	0
 4127 01d5 00       		.byte	0
 4128 01d6 24       		.uleb128 0x24
 4129 01d7 34       		.uleb128 0x34
 4130 01d8 00       		.byte	0
 4131 01d9 31       		.uleb128 0x31
 4132 01da 13       		.uleb128 0x13
 4133 01db 02       		.uleb128 0x2
 4134 01dc 17       		.uleb128 0x17
 4135 01dd 00       		.byte	0
 4136 01de 00       		.byte	0
 4137 01df 25       		.uleb128 0x25
 4138 01e0 0B       		.uleb128 0xb
 4139 01e1 01       		.byte	0x1
 4140 01e2 11       		.uleb128 0x11
 4141 01e3 01       		.uleb128 0x1
 4142 01e4 12       		.uleb128 0x12
 4143 01e5 06       		.uleb128 0x6
 4144 01e6 01       		.uleb128 0x1
 4145 01e7 13       		.uleb128 0x13
 4146 01e8 00       		.byte	0
 4147 01e9 00       		.byte	0
 4148 01ea 26       		.uleb128 0x26
 4149 01eb 34       		.uleb128 0x34
 4150 01ec 00       		.byte	0
 4151 01ed 03       		.uleb128 0x3
 4152 01ee 0E       		.uleb128 0xe
 4153 01ef 3A       		.uleb128 0x3a
 4154 01f0 0B       		.uleb128 0xb
 4155 01f1 3B       		.uleb128 0x3b
 4156 01f2 0B       		.uleb128 0xb
 4157 01f3 49       		.uleb128 0x49
 4158 01f4 13       		.uleb128 0x13
 4159 01f5 02       		.uleb128 0x2
 4160 01f6 18       		.uleb128 0x18
 4161 01f7 00       		.byte	0
 4162 01f8 00       		.byte	0
 4163 01f9 27       		.uleb128 0x27
 4164 01fa 898201   		.uleb128 0x4109
 4165 01fd 01       		.byte	0x1
 4166 01fe 11       		.uleb128 0x11
 4167 01ff 01       		.uleb128 0x1
 4168 0200 31       		.uleb128 0x31
 4169 0201 13       		.uleb128 0x13
 4170 0202 01       		.uleb128 0x1
 4171 0203 13       		.uleb128 0x13
 4172 0204 00       		.byte	0
 4173 0205 00       		.byte	0
 4174 0206 28       		.uleb128 0x28
 4175 0207 8A8201   		.uleb128 0x410a
 4176 020a 00       		.byte	0
 4177 020b 02       		.uleb128 0x2
 4178 020c 18       		.uleb128 0x18
 4179 020d 9142     		.uleb128 0x2111
 4180 020f 18       		.uleb128 0x18
 4181 0210 00       		.byte	0
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 171


 4182 0211 00       		.byte	0
 4183 0212 29       		.uleb128 0x29
 4184 0213 898201   		.uleb128 0x4109
 4185 0216 01       		.byte	0x1
 4186 0217 11       		.uleb128 0x11
 4187 0218 01       		.uleb128 0x1
 4188 0219 31       		.uleb128 0x31
 4189 021a 13       		.uleb128 0x13
 4190 021b 00       		.byte	0
 4191 021c 00       		.byte	0
 4192 021d 2A       		.uleb128 0x2a
 4193 021e 1D       		.uleb128 0x1d
 4194 021f 00       		.byte	0
 4195 0220 31       		.uleb128 0x31
 4196 0221 13       		.uleb128 0x13
 4197 0222 11       		.uleb128 0x11
 4198 0223 01       		.uleb128 0x1
 4199 0224 12       		.uleb128 0x12
 4200 0225 06       		.uleb128 0x6
 4201 0226 58       		.uleb128 0x58
 4202 0227 0B       		.uleb128 0xb
 4203 0228 59       		.uleb128 0x59
 4204 0229 0B       		.uleb128 0xb
 4205 022a 00       		.byte	0
 4206 022b 00       		.byte	0
 4207 022c 2B       		.uleb128 0x2b
 4208 022d 2E       		.uleb128 0x2e
 4209 022e 01       		.byte	0x1
 4210 022f 3F       		.uleb128 0x3f
 4211 0230 19       		.uleb128 0x19
 4212 0231 03       		.uleb128 0x3
 4213 0232 0E       		.uleb128 0xe
 4214 0233 3A       		.uleb128 0x3a
 4215 0234 0B       		.uleb128 0xb
 4216 0235 3B       		.uleb128 0x3b
 4217 0236 05       		.uleb128 0x5
 4218 0237 27       		.uleb128 0x27
 4219 0238 19       		.uleb128 0x19
 4220 0239 11       		.uleb128 0x11
 4221 023a 01       		.uleb128 0x1
 4222 023b 12       		.uleb128 0x12
 4223 023c 06       		.uleb128 0x6
 4224 023d 40       		.uleb128 0x40
 4225 023e 18       		.uleb128 0x18
 4226 023f 9742     		.uleb128 0x2117
 4227 0241 19       		.uleb128 0x19
 4228 0242 01       		.uleb128 0x1
 4229 0243 13       		.uleb128 0x13
 4230 0244 00       		.byte	0
 4231 0245 00       		.byte	0
 4232 0246 2C       		.uleb128 0x2c
 4233 0247 1D       		.uleb128 0x1d
 4234 0248 01       		.byte	0x1
 4235 0249 31       		.uleb128 0x31
 4236 024a 13       		.uleb128 0x13
 4237 024b 11       		.uleb128 0x11
 4238 024c 01       		.uleb128 0x1
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 172


 4239 024d 12       		.uleb128 0x12
 4240 024e 06       		.uleb128 0x6
 4241 024f 58       		.uleb128 0x58
 4242 0250 0B       		.uleb128 0xb
 4243 0251 59       		.uleb128 0x59
 4244 0252 05       		.uleb128 0x5
 4245 0253 01       		.uleb128 0x1
 4246 0254 13       		.uleb128 0x13
 4247 0255 00       		.byte	0
 4248 0256 00       		.byte	0
 4249 0257 2D       		.uleb128 0x2d
 4250 0258 1D       		.uleb128 0x1d
 4251 0259 00       		.byte	0
 4252 025a 31       		.uleb128 0x31
 4253 025b 13       		.uleb128 0x13
 4254 025c 11       		.uleb128 0x11
 4255 025d 01       		.uleb128 0x1
 4256 025e 12       		.uleb128 0x12
 4257 025f 06       		.uleb128 0x6
 4258 0260 58       		.uleb128 0x58
 4259 0261 0B       		.uleb128 0xb
 4260 0262 59       		.uleb128 0x59
 4261 0263 05       		.uleb128 0x5
 4262 0264 00       		.byte	0
 4263 0265 00       		.byte	0
 4264 0266 2E       		.uleb128 0x2e
 4265 0267 34       		.uleb128 0x34
 4266 0268 00       		.byte	0
 4267 0269 03       		.uleb128 0x3
 4268 026a 0E       		.uleb128 0xe
 4269 026b 3A       		.uleb128 0x3a
 4270 026c 0B       		.uleb128 0xb
 4271 026d 3B       		.uleb128 0x3b
 4272 026e 05       		.uleb128 0x5
 4273 026f 49       		.uleb128 0x49
 4274 0270 13       		.uleb128 0x13
 4275 0271 02       		.uleb128 0x2
 4276 0272 18       		.uleb128 0x18
 4277 0273 00       		.byte	0
 4278 0274 00       		.byte	0
 4279 0275 2F       		.uleb128 0x2f
 4280 0276 898201   		.uleb128 0x4109
 4281 0279 00       		.byte	0
 4282 027a 11       		.uleb128 0x11
 4283 027b 01       		.uleb128 0x1
 4284 027c 31       		.uleb128 0x31
 4285 027d 13       		.uleb128 0x13
 4286 027e 00       		.byte	0
 4287 027f 00       		.byte	0
 4288 0280 30       		.uleb128 0x30
 4289 0281 34       		.uleb128 0x34
 4290 0282 00       		.byte	0
 4291 0283 03       		.uleb128 0x3
 4292 0284 0E       		.uleb128 0xe
 4293 0285 3A       		.uleb128 0x3a
 4294 0286 0B       		.uleb128 0xb
 4295 0287 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 173


 4296 0288 0B       		.uleb128 0xb
 4297 0289 49       		.uleb128 0x49
 4298 028a 13       		.uleb128 0x13
 4299 028b 3F       		.uleb128 0x3f
 4300 028c 19       		.uleb128 0x19
 4301 028d 3C       		.uleb128 0x3c
 4302 028e 19       		.uleb128 0x19
 4303 028f 00       		.byte	0
 4304 0290 00       		.byte	0
 4305 0291 31       		.uleb128 0x31
 4306 0292 0F       		.uleb128 0xf
 4307 0293 00       		.byte	0
 4308 0294 0B       		.uleb128 0xb
 4309 0295 0B       		.uleb128 0xb
 4310 0296 49       		.uleb128 0x49
 4311 0297 13       		.uleb128 0x13
 4312 0298 00       		.byte	0
 4313 0299 00       		.byte	0
 4314 029a 32       		.uleb128 0x32
 4315 029b 2E       		.uleb128 0x2e
 4316 029c 00       		.byte	0
 4317 029d 3F       		.uleb128 0x3f
 4318 029e 19       		.uleb128 0x19
 4319 029f 3C       		.uleb128 0x3c
 4320 02a0 19       		.uleb128 0x19
 4321 02a1 6E       		.uleb128 0x6e
 4322 02a2 0E       		.uleb128 0xe
 4323 02a3 03       		.uleb128 0x3
 4324 02a4 0E       		.uleb128 0xe
 4325 02a5 3A       		.uleb128 0x3a
 4326 02a6 0B       		.uleb128 0xb
 4327 02a7 3B       		.uleb128 0x3b
 4328 02a8 05       		.uleb128 0x5
 4329 02a9 00       		.byte	0
 4330 02aa 00       		.byte	0
 4331 02ab 33       		.uleb128 0x33
 4332 02ac 2E       		.uleb128 0x2e
 4333 02ad 00       		.byte	0
 4334 02ae 3F       		.uleb128 0x3f
 4335 02af 19       		.uleb128 0x19
 4336 02b0 3C       		.uleb128 0x3c
 4337 02b1 19       		.uleb128 0x19
 4338 02b2 6E       		.uleb128 0x6e
 4339 02b3 0E       		.uleb128 0xe
 4340 02b4 03       		.uleb128 0x3
 4341 02b5 0E       		.uleb128 0xe
 4342 02b6 3A       		.uleb128 0x3a
 4343 02b7 0B       		.uleb128 0xb
 4344 02b8 3B       		.uleb128 0x3b
 4345 02b9 0B       		.uleb128 0xb
 4346 02ba 00       		.byte	0
 4347 02bb 00       		.byte	0
 4348 02bc 00       		.byte	0
 4349              		.section	.debug_loc,"",%progbits
 4350              	.Ldebug_loc0:
 4351              	.LLST0:
 4352 0000 CE000000 		.4byte	.LVL14
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 174


 4353 0004 D4000000 		.4byte	.LVL15
 4354 0008 0100     		.2byte	0x1
 4355 000a 50       		.byte	0x50
 4356 000b D8000000 		.4byte	.LVL16
 4357 000f E0000000 		.4byte	.LVL17
 4358 0013 0100     		.2byte	0x1
 4359 0015 50       		.byte	0x50
 4360 0016 EC000000 		.4byte	.LVL18
 4361 001a F2000000 		.4byte	.LVL19
 4362 001e 0100     		.2byte	0x1
 4363 0020 50       		.byte	0x50
 4364 0021 F6000000 		.4byte	.LVL20
 4365 0025 48010000 		.4byte	.LVL28
 4366 0029 0100     		.2byte	0x1
 4367 002b 50       		.byte	0x50
 4368 002c 00000000 		.4byte	0
 4369 0030 00000000 		.4byte	0
 4370              	.LLST1:
 4371 0034 04000000 		.4byte	.LVL1
 4372 0038 12000000 		.4byte	.LVL2
 4373 003c 0200     		.2byte	0x2
 4374 003e 30       		.byte	0x30
 4375 003f 9F       		.byte	0x9f
 4376 0040 00000000 		.4byte	0
 4377 0044 00000000 		.4byte	0
 4378              	.LLST2:
 4379 0048 12000000 		.4byte	.LVL2
 4380 004c 26000000 		.4byte	.LVL3
 4381 0050 0200     		.2byte	0x2
 4382 0052 30       		.byte	0x30
 4383 0053 9F       		.byte	0x9f
 4384 0054 00000000 		.4byte	0
 4385 0058 00000000 		.4byte	0
 4386              	.LLST3:
 4387 005c 26000000 		.4byte	.LVL3
 4388 0060 3E000000 		.4byte	.LVL4
 4389 0064 0200     		.2byte	0x2
 4390 0066 31       		.byte	0x31
 4391 0067 9F       		.byte	0x9f
 4392 0068 00000000 		.4byte	0
 4393 006c 00000000 		.4byte	0
 4394              	.LLST4:
 4395 0070 3E000000 		.4byte	.LVL4
 4396 0074 4C000000 		.4byte	.LVL5
 4397 0078 0200     		.2byte	0x2
 4398 007a 30       		.byte	0x30
 4399 007b 9F       		.byte	0x9f
 4400 007c 00000000 		.4byte	0
 4401 0080 00000000 		.4byte	0
 4402              	.LLST5:
 4403 0084 4C000000 		.4byte	.LVL5
 4404 0088 64000000 		.4byte	.LVL6
 4405 008c 0200     		.2byte	0x2
 4406 008e 30       		.byte	0x30
 4407 008f 9F       		.byte	0x9f
 4408 0090 00000000 		.4byte	0
 4409 0094 00000000 		.4byte	0
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 175


 4410              	.LLST7:
 4411 0098 4C000000 		.4byte	.LVL5
 4412 009c 64000000 		.4byte	.LVL6
 4413 00a0 0600     		.2byte	0x6
 4414 00a2 0C       		.byte	0xc
 4415 00a3 01004A00 		.4byte	0x4a0001
 4416 00a7 9F       		.byte	0x9f
 4417 00a8 00000000 		.4byte	0
 4418 00ac 00000000 		.4byte	0
 4419              	.LLST8:
 4420 00b0 64000000 		.4byte	.LVL6
 4421 00b4 7A000000 		.4byte	.LVL7
 4422 00b8 0200     		.2byte	0x2
 4423 00ba 30       		.byte	0x30
 4424 00bb 9F       		.byte	0x9f
 4425 00bc 00000000 		.4byte	0
 4426 00c0 00000000 		.4byte	0
 4427              	.LLST10:
 4428 00c4 64000000 		.4byte	.LVL6
 4429 00c8 7A000000 		.4byte	.LVL7
 4430 00cc 0600     		.2byte	0x6
 4431 00ce 0C       		.byte	0xc
 4432 00cf 01004A00 		.4byte	0x4a0001
 4433 00d3 9F       		.byte	0x9f
 4434 00d4 00000000 		.4byte	0
 4435 00d8 00000000 		.4byte	0
 4436              	.LLST11:
 4437 00dc 7A000000 		.4byte	.LVL7
 4438 00e0 92000000 		.4byte	.LVL8
 4439 00e4 0200     		.2byte	0x2
 4440 00e6 30       		.byte	0x30
 4441 00e7 9F       		.byte	0x9f
 4442 00e8 00000000 		.4byte	0
 4443 00ec 00000000 		.4byte	0
 4444              	.LLST12:
 4445 00f0 7A000000 		.4byte	.LVL7
 4446 00f4 92000000 		.4byte	.LVL8
 4447 00f8 0600     		.2byte	0x6
 4448 00fa 0C       		.byte	0xc
 4449 00fb 01004A00 		.4byte	0x4a0001
 4450 00ff 9F       		.byte	0x9f
 4451 0100 00000000 		.4byte	0
 4452 0104 00000000 		.4byte	0
 4453              	.LLST13:
 4454 0108 F6000000 		.4byte	.LVL20
 4455 010c 02010000 		.4byte	.LVL21
 4456 0110 0200     		.2byte	0x2
 4457 0112 30       		.byte	0x30
 4458 0113 9F       		.byte	0x9f
 4459 0114 00000000 		.4byte	0
 4460 0118 00000000 		.4byte	0
 4461              	.LLST14:
 4462 011c 02010000 		.4byte	.LVL21
 4463 0120 0A010000 		.4byte	.LVL22
 4464 0124 0200     		.2byte	0x2
 4465 0126 30       		.byte	0x30
 4466 0127 9F       		.byte	0x9f
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 176


 4467 0128 00000000 		.4byte	0
 4468 012c 00000000 		.4byte	0
 4469              	.LLST15:
 4470 0130 14010000 		.4byte	.LVL23
 4471 0134 1E010000 		.4byte	.LVL24
 4472 0138 0200     		.2byte	0x2
 4473 013a 30       		.byte	0x30
 4474 013b 9F       		.byte	0x9f
 4475 013c 00000000 		.4byte	0
 4476 0140 00000000 		.4byte	0
 4477              	.LLST16:
 4478 0144 1E010000 		.4byte	.LVL24
 4479 0148 2C010000 		.4byte	.LVL25
 4480 014c 0200     		.2byte	0x2
 4481 014e 32       		.byte	0x32
 4482 014f 9F       		.byte	0x9f
 4483 0150 00000000 		.4byte	0
 4484 0154 00000000 		.4byte	0
 4485              	.LLST17:
 4486 0158 36010000 		.4byte	.LVL26
 4487 015c 46010000 		.4byte	.LVL27
 4488 0160 0200     		.2byte	0x2
 4489 0162 31       		.byte	0x31
 4490 0163 9F       		.byte	0x9f
 4491 0164 00000000 		.4byte	0
 4492 0168 00000000 		.4byte	0
 4493              	.LLST18:
 4494 016c 54010000 		.4byte	.LVL30
 4495 0170 5E010000 		.4byte	.LVL31
 4496 0174 0200     		.2byte	0x2
 4497 0176 31       		.byte	0x31
 4498 0177 9F       		.byte	0x9f
 4499 0178 00000000 		.4byte	0
 4500 017c 00000000 		.4byte	0
 4501              	.LLST19:
 4502 0180 18000000 		.4byte	.LVL35
 4503 0184 30000000 		.4byte	.LVL36
 4504 0188 0600     		.2byte	0x6
 4505 018a 0C       		.byte	0xc
 4506 018b 03004A00 		.4byte	0x4a0003
 4507 018f 9F       		.byte	0x9f
 4508 0190 00000000 		.4byte	0
 4509 0194 00000000 		.4byte	0
 4510              		.section	.debug_aranges,"",%progbits
 4511 0000 2C000000 		.4byte	0x2c
 4512 0004 0200     		.2byte	0x2
 4513 0006 00000000 		.4byte	.Ldebug_info0
 4514 000a 04       		.byte	0x4
 4515 000b 00       		.byte	0
 4516 000c 0000     		.2byte	0
 4517 000e 0000     		.2byte	0
 4518 0010 00000000 		.4byte	.LFB187
 4519 0014 02000000 		.4byte	.LFE187-.LFB187
 4520 0018 00000000 		.4byte	.LFB188
 4521 001c A4010000 		.4byte	.LFE188-.LFB188
 4522 0020 00000000 		.4byte	.LFB190
 4523 0024 D0000000 		.4byte	.LFE190-.LFB190
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 177


 4524 0028 00000000 		.4byte	0
 4525 002c 00000000 		.4byte	0
 4526              		.section	.debug_ranges,"",%progbits
 4527              	.Ldebug_ranges0:
 4528 0000 00000000 		.4byte	.LFB187
 4529 0004 02000000 		.4byte	.LFE187
 4530 0008 00000000 		.4byte	.LFB188
 4531 000c A4010000 		.4byte	.LFE188
 4532 0010 00000000 		.4byte	.LFB190
 4533 0014 D0000000 		.4byte	.LFE190
 4534 0018 00000000 		.4byte	0
 4535 001c 00000000 		.4byte	0
 4536              		.section	.debug_line,"",%progbits
 4537              	.Ldebug_line0:
 4538 0000 3D040000 		.section	.debug_str,"MS",%progbits,1
 4538      02007603 
 4538      00000201 
 4538      FB0E0D00 
 4538      01010101 
 4539              	.LASF245:
 4540 0000 43595F53 		.ascii	"CY_SYSPM_LDO_VOLTAGE_1_1V\000"
 4540      5953504D 
 4540      5F4C444F 
 4540      5F564F4C 
 4540      54414745 
 4541              	.LASF140:
 4542 001a 4241434B 		.ascii	"BACKUP_Type\000"
 4542      55505F54 
 4542      79706500 
 4543              	.LASF10:
 4544 0026 6C6F6E67 		.ascii	"long int\000"
 4544      20696E74 
 4544      00
 4545              	.LASF20:
 4546 002f 52455345 		.ascii	"RESERVED\000"
 4546      52564544 
 4546      00
 4547              	.LASF133:
 4548 0038 5644445F 		.ascii	"VDD_ACTIVE\000"
 4548      41435449 
 4548      564500
 4549              	.LASF129:
 4550 0043 494E5452 		.ascii	"INTR_CAUSE0\000"
 4550      5F434155 
 4550      53453000 
 4551              	.LASF130:
 4552 004f 494E5452 		.ascii	"INTR_CAUSE1\000"
 4552      5F434155 
 4552      53453100 
 4553              	.LASF131:
 4554 005b 494E5452 		.ascii	"INTR_CAUSE2\000"
 4554      5F434155 
 4554      53453200 
 4555              	.LASF132:
 4556 0067 494E5452 		.ascii	"INTR_CAUSE3\000"
 4556      5F434155 
 4556      53453300 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 178


 4557              	.LASF139:
 4558 0073 53525353 		.ascii	"SRSS_Type\000"
 4558      5F547970 
 4558      6500
 4559              	.LASF391:
 4560 007d 63795F64 		.ascii	"cy_device\000"
 4560      65766963 
 4560      6500
 4561              	.LASF350:
 4562 0087 636C6B48 		.ascii	"clkHf\000"
 4562      6600
 4563              	.LASF340:
 4564 008d 43595F53 		.ascii	"CY_SYSCLK_BAK_IN_WCO\000"
 4564      5953434C 
 4564      4B5F4241 
 4564      4B5F494E 
 4564      5F57434F 
 4565              	.LASF213:
 4566 00a2 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 4566      73436D30 
 4566      436C6F63 
 4566      6B43746C 
 4566      4F666673 
 4567              	.LASF172:
 4568 00b9 70657269 		.ascii	"periClockNr\000"
 4568      436C6F63 
 4568      6B4E7200 
 4569              	.LASF242:
 4570 00c5 43595F53 		.ascii	"CY_SYSPM_LDO_VOLTAGE_ULP\000"
 4570      5953504D 
 4570      5F4C444F 
 4570      5F564F4C 
 4570      54414745 
 4571              	.LASF146:
 4572 00de 75646242 		.ascii	"udbBase\000"
 4572      61736500 
 4573              	.LASF376:
 4574 00e6 43795F53 		.ascii	"Cy_SysClk_ClkPathSetSource\000"
 4574      7973436C 
 4574      6B5F436C 
 4574      6B506174 
 4574      68536574 
 4575              	.LASF236:
 4576 0101 63666749 		.ascii	"cfgIn\000"
 4576      6E00
 4577              	.LASF145:
 4578 0107 70657269 		.ascii	"periBase\000"
 4578      42617365 
 4578      00
 4579              	.LASF32:
 4580 0110 4D435744 		.ascii	"MCWDT_STRUCT_V1_Type\000"
 4580      545F5354 
 4580      52554354 
 4580      5F56315F 
 4580      54797065 
 4581              	.LASF221:
 4582 0125 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 179


 4582      73436D30 
 4582      4E6D6943 
 4582      746C4F66 
 4582      66736574 
 4583              	.LASF191:
 4584 013a 64774368 		.ascii	"dwChSize\000"
 4584      53697A65 
 4584      00
 4585              	.LASF367:
 4586 0143 43795F53 		.ascii	"Cy_SysClk_ClkTimerSetSource\000"
 4586      7973436C 
 4586      6B5F436C 
 4586      6B54696D 
 4586      65725365 
 4587              	.LASF248:
 4588 015f 43595F53 		.ascii	"CY_SYSCLK_TIMEOUT\000"
 4588      5953434C 
 4588      4B5F5449 
 4588      4D454F55 
 4588      5400
 4589              	.LASF333:
 4590 0171 63795F65 		.ascii	"cy_en_clkpump_in_sources_t\000"
 4590      6E5F636C 
 4590      6B70756D 
 4590      705F696E 
 4590      5F736F75 
 4591              	.LASF307:
 4592 018c 43595F53 		.ascii	"CY_SYSCLK_CLKLF_IN_WCO\000"
 4592      5953434C 
 4592      4B5F434C 
 4592      4B4C465F 
 4592      494E5F57 
 4593              	.LASF243:
 4594 01a3 43595F53 		.ascii	"CY_SYSPM_LDO_VOLTAGE_LP\000"
 4594      5953504D 
 4594      5F4C444F 
 4594      5F564F4C 
 4594      54414745 
 4595              	.LASF281:
 4596 01bb 63636F5F 		.ascii	"cco_Freq\000"
 4596      46726571 
 4596      00
 4597              	.LASF38:
 4598 01c4 5057525F 		.ascii	"PWR_LVD_STATUS\000"
 4598      4C56445F 
 4598      53544154 
 4598      555300
 4599              	.LASF82:
 4600 01d3 5245535F 		.ascii	"RES_CAUSE2\000"
 4600      43415553 
 4600      453200
 4601              	.LASF362:
 4602 01de 43795F53 		.ascii	"Cy_SysClk_ClkPumpEnable\000"
 4602      7973436C 
 4602      6B5F436C 
 4602      6B50756D 
 4602      70456E61 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 180


 4603              	.LASF173:
 4604 01f6 736D6966 		.ascii	"smifDeviceNr\000"
 4604      44657669 
 4604      63654E72 
 4604      00
 4605              	.LASF203:
 4606 0203 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 4606      44697643 
 4606      6D645061 
 4606      54797065 
 4606      53656C50 
 4607              	.LASF387:
 4608 021a 4379436C 		.ascii	"CyClockStartupError\000"
 4608      6F636B53 
 4608      74617274 
 4608      75704572 
 4608      726F7200 
 4609              	.LASF77:
 4610 022e 53525353 		.ascii	"SRSS_INTR_MASK\000"
 4610      5F494E54 
 4610      525F4D41 
 4610      534B00
 4611              	.LASF126:
 4612 023d 4346475F 		.ascii	"CFG_SIO\000"
 4612      53494F00 
 4613              	.LASF69:
 4614 0245 434C4B5F 		.ascii	"CLK_FLL_STATUS\000"
 4614      464C4C5F 
 4614      53544154 
 4614      555300
 4615              	.LASF238:
 4616 0254 63666753 		.ascii	"cfgSIO\000"
 4616      494F00
 4617              	.LASF365:
 4618 025b 43795F53 		.ascii	"Cy_SysClk_ClkTimerEnable\000"
 4618      7973436C 
 4618      6B5F436C 
 4618      6B54696D 
 4618      6572456E 
 4619              	.LASF53:
 4620 0274 434C4B5F 		.ascii	"CLK_ILO_CONFIG\000"
 4620      494C4F5F 
 4620      434F4E46 
 4620      494700
 4621              	.LASF143:
 4622 0283 63707573 		.ascii	"cpussBase\000"
 4622      73426173 
 4622      6500
 4623              	.LASF54:
 4624 028d 434C4B5F 		.ascii	"CLK_IMO_CONFIG\000"
 4624      494D4F5F 
 4624      434F4E46 
 4624      494700
 4625              	.LASF276:
 4626 029c 6C6F636B 		.ascii	"lockTolerance\000"
 4626      546F6C65 
 4626      72616E63 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 181


 4626      6500
 4627              	.LASF273:
 4628 02aa 72656644 		.ascii	"refDiv\000"
 4628      697600
 4629              	.LASF344:
 4630 02b1 43595F53 		.ascii	"CY_SYSTICK_CLOCK_SOURCE_CLK_IMO\000"
 4630      59535449 
 4630      434B5F43 
 4630      4C4F434B 
 4630      5F534F55 
 4631              	.LASF317:
 4632 02d1 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH0\000"
 4632      5953434C 
 4632      4B5F5055 
 4632      4D505F49 
 4632      4E5F434C 
 4633              	.LASF318:
 4634 02ec 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH1\000"
 4634      5953434C 
 4634      4B5F5055 
 4634      4D505F49 
 4634      4E5F434C 
 4635              	.LASF319:
 4636 0307 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH2\000"
 4636      5953434C 
 4636      4B5F5055 
 4636      4D505F49 
 4636      4E5F434C 
 4637              	.LASF320:
 4638 0322 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH3\000"
 4638      5953434C 
 4638      4B5F5055 
 4638      4D505F49 
 4638      4E5F434C 
 4639              	.LASF321:
 4640 033d 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH4\000"
 4640      5953434C 
 4640      4B5F5055 
 4640      4D505F49 
 4640      4E5F434C 
 4641              	.LASF322:
 4642 0358 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH5\000"
 4642      5953434C 
 4642      4B5F5055 
 4642      4D505F49 
 4642      4E5F434C 
 4643              	.LASF323:
 4644 0373 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH6\000"
 4644      5953434C 
 4644      4B5F5055 
 4644      4D505F49 
 4644      4E5F434C 
 4645              	.LASF324:
 4646 038e 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH7\000"
 4646      5953434C 
 4646      4B5F5055 
 4646      4D505F49 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 182


 4646      4E5F434C 
 4647              	.LASF56:
 4648 03a9 434C4B5F 		.ascii	"CLK_OUTPUT_SLOW\000"
 4648      4F555450 
 4648      55545F53 
 4648      4C4F5700 
 4649              	.LASF326:
 4650 03b9 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH9\000"
 4650      5953434C 
 4650      4B5F5055 
 4650      4D505F49 
 4650      4E5F434C 
 4651              	.LASF168:
 4652 03d4 63707573 		.ascii	"cpussNotConnectedIrq\000"
 4652      734E6F74 
 4652      436F6E6E 
 4652      65637465 
 4652      64497271 
 4653              	.LASF280:
 4654 03e9 6F757470 		.ascii	"outputMode\000"
 4654      75744D6F 
 4654      646500
 4655              	.LASF7:
 4656 03f4 73686F72 		.ascii	"short int\000"
 4656      7420696E 
 4656      7400
 4657              	.LASF50:
 4658 03fe 434C4B5F 		.ascii	"CLK_SELECT\000"
 4658      53454C45 
 4658      435400
 4659              	.LASF167:
 4660 0409 63707573 		.ascii	"cpussFmIrq\000"
 4660      73466D49 
 4660      727100
 4661              	.LASF103:
 4662 0414 5254435F 		.ascii	"RTC_TIME\000"
 4662      54494D45 
 4662      00
 4663              	.LASF372:
 4664 041d 666C6C43 		.ascii	"fllConfig\000"
 4664      6F6E6669 
 4664      6700
 4665              	.LASF202:
 4666 0427 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 4666      44697643 
 4666      6D645061 
 4666      44697653 
 4666      656C506F 
 4667              	.LASF370:
 4668 043d 43795F53 		.ascii	"Cy_SysPm_PmicUnlock\000"
 4668      7973506D 
 4668      5F506D69 
 4668      63556E6C 
 4668      6F636B00 
 4669              	.LASF110:
 4670 0451 494E5452 		.ascii	"INTR_SET\000"
 4670      5F534554 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 183


 4670      00
 4671              	.LASF179:
 4672 045a 63727970 		.ascii	"cryptoMemSize\000"
 4672      746F4D65 
 4672      6D53697A 
 4672      6500
 4673              	.LASF225:
 4674 0468 63707573 		.ascii	"cpussRam1Ctl0\000"
 4674      7352616D 
 4674      3143746C 
 4674      3000
 4675              	.LASF246:
 4676 0476 43595F53 		.ascii	"CY_SYSCLK_SUCCESS\000"
 4676      5953434C 
 4676      4B5F5355 
 4676      43434553 
 4676      5300
 4677              	.LASF377:
 4678 0488 43795F53 		.ascii	"Cy_SysClk_FllEnable\000"
 4678      7973436C 
 4678      6B5F466C 
 4678      6C456E61 
 4678      626C6500 
 4679              	.LASF227:
 4680 049c 69706353 		.ascii	"ipcStructSize\000"
 4680      74727563 
 4680      7453697A 
 4680      6500
 4681              	.LASF85:
 4682 04aa 5057525F 		.ascii	"PWR_TRIM_BODOVP_CTL\000"
 4682      5452494D 
 4682      5F424F44 
 4682      4F56505F 
 4682      43544C00 
 4683              	.LASF199:
 4684 04be 70657269 		.ascii	"periTrGrSize\000"
 4684      54724772 
 4684      53697A65 
 4684      00
 4685              	.LASF272:
 4686 04cb 666C6C4D 		.ascii	"fllMult\000"
 4686      756C7400 
 4687              	.LASF161:
 4688 04d3 70726F74 		.ascii	"protVersion\000"
 4688      56657273 
 4688      696F6E00 
 4689              	.LASF79:
 4690 04df 53525353 		.ascii	"SRSS_INTR_CFG\000"
 4690      5F494E54 
 4690      525F4346 
 4690      4700
 4691              	.LASF305:
 4692 04ed 63795F65 		.ascii	"cy_en_clkhf_dividers_t\000"
 4692      6E5F636C 
 4692      6B68665F 
 4692      64697669 
 4692      64657273 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 184


 4693              	.LASF363:
 4694 0504 43795F53 		.ascii	"Cy_SysClk_ClkPumpSetDivider\000"
 4694      7973436C 
 4694      6B5F436C 
 4694      6B50756D 
 4694      70536574 
 4695              	.LASF201:
 4696 0520 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 4696      44697643 
 4696      6D645479 
 4696      70655365 
 4696      6C506F73 
 4697              	.LASF355:
 4698 0535 43795F53 		.ascii	"Cy_SysClk_ClkSlowSetDivider\000"
 4698      7973436C 
 4698      6B5F436C 
 4698      6B536C6F 
 4698      77536574 
 4699              	.LASF218:
 4700 0551 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 4700      73547269 
 4700      6D52616D 
 4700      43746C4F 
 4700      66667365 
 4701              	.LASF124:
 4702 0567 4346475F 		.ascii	"CFG_IN\000"
 4702      494E00
 4703              	.LASF380:
 4704 056e 43795F47 		.ascii	"Cy_GPIO_Port_Init\000"
 4704      50494F5F 
 4704      506F7274 
 4704      5F496E69 
 4704      7400
 4705              	.LASF33:
 4706 0580 5057525F 		.ascii	"PWR_CTL\000"
 4706      43544C00 
 4707              	.LASF89:
 4708 0588 5057525F 		.ascii	"PWR_TRIM_WAKE_CTL\000"
 4708      5452494D 
 4708      5F57414B 
 4708      455F4354 
 4708      4C00
 4709              	.LASF39:
 4710 059a 5057525F 		.ascii	"PWR_HIB_DATA\000"
 4710      4849425F 
 4710      44415441 
 4710      00
 4711              	.LASF343:
 4712 05a7 43595F53 		.ascii	"CY_SYSTICK_CLOCK_SOURCE_CLK_LF\000"
 4712      59535449 
 4712      434B5F43 
 4712      4C4F434B 
 4712      5F534F55 
 4713              	.LASF22:
 4714 05c6 4D435744 		.ascii	"MCWDT_CNTHIGH\000"
 4714      545F434E 
 4714      54484947 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 185


 4714      4800
 4715              	.LASF345:
 4716 05d4 43595F53 		.ascii	"CY_SYSTICK_CLOCK_SOURCE_CLK_ECO\000"
 4716      59535449 
 4716      434B5F43 
 4716      4C4F434B 
 4716      5F534F55 
 4717              	.LASF19:
 4718 05f4 75696E74 		.ascii	"uint32_t\000"
 4718      33325F74 
 4718      00
 4719              	.LASF339:
 4720 05fd 63795F65 		.ascii	"cy_en_clkpump_divide_t\000"
 4720      6E5F636C 
 4720      6B70756D 
 4720      705F6469 
 4720      76696465 
 4721              	.LASF366:
 4722 0614 43795F53 		.ascii	"Cy_SysClk_ClkTimerSetDivider\000"
 4722      7973436C 
 4722      6B5F436C 
 4722      6B54696D 
 4722      65725365 
 4723              	.LASF294:
 4724 0631 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH10\000"
 4724      5953434C 
 4724      4B5F434C 
 4724      4B48465F 
 4724      494E5F43 
 4725              	.LASF256:
 4726 064e 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_DSI\000"
 4726      5953434C 
 4726      4B5F434C 
 4726      4B504154 
 4726      485F494E 
 4727              	.LASF138:
 4728 0667 4750494F 		.ascii	"GPIO_V1_Type\000"
 4728      5F56315F 
 4728      54797065 
 4728      00
 4729              	.LASF211:
 4730 0674 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 4730      50727443 
 4730      66674F75 
 4730      744F6666 
 4730      73657400 
 4731              	.LASF298:
 4732 0688 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH14\000"
 4732      5953434C 
 4732      4B5F434C 
 4732      4B48465F 
 4732      494E5F43 
 4733              	.LASF109:
 4734 06a5 494E5452 		.ascii	"INTR\000"
 4734      00
 4735              	.LASF93:
 4736 06aa 434C4B5F 		.ascii	"CLK_TRIM_ILO_CTL\000"
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 186


 4736      5452494D 
 4736      5F494C4F 
 4736      5F43544C 
 4736      00
 4737              	.LASF29:
 4738 06bb 4D435744 		.ascii	"MCWDT_INTR_MASKED\000"
 4738      545F494E 
 4738      54525F4D 
 4738      41534B45 
 4738      4400
 4739              	.LASF231:
 4740 06cd 666C6F61 		.ascii	"float\000"
 4740      7400
 4741              	.LASF364:
 4742 06d3 43795F53 		.ascii	"Cy_SysClk_ClkPumpSetSource\000"
 4742      7973436C 
 4742      6B5F436C 
 4742      6B50756D 
 4742      70536574 
 4743              	.LASF154:
 4744 06ee 63727970 		.ascii	"cryptoVersion\000"
 4744      746F5665 
 4744      7273696F 
 4744      6E00
 4745              	.LASF183:
 4746 06fc 666C6173 		.ascii	"flashProgramDelay\000"
 4746      6850726F 
 4746      6772616D 
 4746      44656C61 
 4746      7900
 4747              	.LASF120:
 4748 070e 4F55545F 		.ascii	"OUT_CLR\000"
 4748      434C5200 
 4749              	.LASF31:
 4750 0716 52455345 		.ascii	"RESERVED1\000"
 4750      52564544 
 4750      3100
 4751              	.LASF17:
 4752 0720 696E7431 		.ascii	"int16_t\000"
 4752      365F7400 
 4753              	.LASF210:
 4754 0728 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 4754      50727443 
 4754      6667496E 
 4754      4F666673 
 4754      657400
 4755              	.LASF95:
 4756 073b 434C4B5F 		.ascii	"CLK_TRIM_ECO_CTL\000"
 4756      5452494D 
 4756      5F45434F 
 4756      5F43544C 
 4756      00
 4757              	.LASF279:
 4758 074c 73657474 		.ascii	"settlingCount\000"
 4758      6C696E67 
 4758      436F756E 
 4758      7400
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 187


 4759              	.LASF91:
 4760 075a 5057525F 		.ascii	"PWR_TRIM_LVD_CTL\000"
 4760      5452494D 
 4760      5F4C5644 
 4760      5F43544C 
 4760      00
 4761              	.LASF13:
 4762 076b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4762      206C6F6E 
 4762      6720756E 
 4762      7369676E 
 4762      65642069 
 4763              	.LASF207:
 4764 0782 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 4764      44697632 
 4764      345F3543 
 4764      746C4F66 
 4764      66736574 
 4765              	.LASF115:
 4766 0797 504D4943 		.ascii	"PMIC_CTL\000"
 4766      5F43544C 
 4766      00
 4767              	.LASF240:
 4768 07a0 73656C31 		.ascii	"sel1Active\000"
 4768      41637469 
 4768      766500
 4769              	.LASF166:
 4770 07ab 63707573 		.ascii	"cpussIpc0Irq\000"
 4770      73497063 
 4770      30497271 
 4770      00
 4771              	.LASF277:
 4772 07b8 69676169 		.ascii	"igain\000"
 4772      6E00
 4773              	.LASF386:
 4774 07be 433A5C55 		.ascii	"C:\\Users\\Mathieu\\OneDrive\\Desktop\\Laboratoire4"
 4774      73657273 
 4774      5C4D6174 
 4774      68696575 
 4774      5C4F6E65 
 4775 07ec 5C4C6162 		.ascii	"\\Laboratoire4.cydsn\000"
 4775      6F726174 
 4775      6F697265 
 4775      342E6379 
 4775      64736E00 
 4776              	.LASF284:
 4777 0800 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH0\000"
 4777      5953434C 
 4777      4B5F434C 
 4777      4B48465F 
 4777      494E5F43 
 4778              	.LASF285:
 4779 081c 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH1\000"
 4779      5953434C 
 4779      4B5F434C 
 4779      4B48465F 
 4779      494E5F43 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 188


 4780              	.LASF286:
 4781 0838 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH2\000"
 4781      5953434C 
 4781      4B5F434C 
 4781      4B48465F 
 4781      494E5F43 
 4782              	.LASF287:
 4783 0854 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH3\000"
 4783      5953434C 
 4783      4B5F434C 
 4783      4B48465F 
 4783      494E5F43 
 4784              	.LASF288:
 4785 0870 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH4\000"
 4785      5953434C 
 4785      4B5F434C 
 4785      4B48465F 
 4785      494E5F43 
 4786              	.LASF289:
 4787 088c 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH5\000"
 4787      5953434C 
 4787      4B5F434C 
 4787      4B48465F 
 4787      494E5F43 
 4788              	.LASF290:
 4789 08a8 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH6\000"
 4789      5953434C 
 4789      4B5F434C 
 4789      4B48465F 
 4789      494E5F43 
 4790              	.LASF291:
 4791 08c4 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH7\000"
 4791      5953434C 
 4791      4B5F434C 
 4791      4B48465F 
 4791      494E5F43 
 4792              	.LASF292:
 4793 08e0 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH8\000"
 4793      5953434C 
 4793      4B5F434C 
 4793      4B48465F 
 4793      494E5F43 
 4794              	.LASF293:
 4795 08fc 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH9\000"
 4795      5953434C 
 4795      4B5F434C 
 4795      4B48465F 
 4795      494E5F43 
 4796              	.LASF8:
 4797 0918 5F5F7569 		.ascii	"__uint16_t\000"
 4797      6E743136 
 4797      5F7400
 4798              	.LASF37:
 4799 0923 5057525F 		.ascii	"PWR_BUCK_CTL2\000"
 4799      4255434B 
 4799      5F43544C 
 4799      3200
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 189


 4800              	.LASF356:
 4801 0931 43795F53 		.ascii	"Cy_SysClk_ClkPeriSetDivider\000"
 4801      7973436C 
 4801      6B5F436C 
 4801      6B506572 
 4801      69536574 
 4802              	.LASF316:
 4803 094d 63795F65 		.ascii	"cy_en_clktimer_in_sources_t\000"
 4803      6E5F636C 
 4803      6B74696D 
 4803      65725F69 
 4803      6E5F736F 
 4804              	.LASF313:
 4805 0969 43595F53 		.ascii	"CY_SYSCLK_CLKTIMER_IN_HF0_DIV2\000"
 4805      5953434C 
 4805      4B5F434C 
 4805      4B54494D 
 4805      45525F49 
 4806              	.LASF314:
 4807 0988 43595F53 		.ascii	"CY_SYSCLK_CLKTIMER_IN_HF0_DIV4\000"
 4807      5953434C 
 4807      4B5F434C 
 4807      4B54494D 
 4807      45525F49 
 4808              	.LASF65:
 4809 09a7 434C4B5F 		.ascii	"CLK_FLL_CONFIG\000"
 4809      464C4C5F 
 4809      434F4E46 
 4809      494700
 4810              	.LASF125:
 4811 09b6 4346475F 		.ascii	"CFG_OUT\000"
 4811      4F555400 
 4812              	.LASF105:
 4813 09be 414C4D31 		.ascii	"ALM1_TIME\000"
 4813      5F54494D 
 4813      4500
 4814              	.LASF315:
 4815 09c8 43595F53 		.ascii	"CY_SYSCLK_CLKTIMER_IN_HF0_DIV8\000"
 4815      5953434C 
 4815      4B5F434C 
 4815      4B54494D 
 4815      45525F49 
 4816              	.LASF61:
 4817 09e7 434C4B5F 		.ascii	"CLK_ECO_STATUS\000"
 4817      45434F5F 
 4817      53544154 
 4817      555300
 4818              	.LASF188:
 4819 09f6 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 4819      6843746C 
 4819      4D61696E 
 4819      57733346 
 4819      72657100 
 4820              	.LASF264:
 4821 0a0a 43595F53 		.ascii	"CY_SYSCLK_FLLPLL_OUTPUT_OUTPUT\000"
 4821      5953434C 
 4821      4B5F464C 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 190


 4821      4C504C4C 
 4821      5F4F5554 
 4822              	.LASF302:
 4823 0a29 43595F53 		.ascii	"CY_SYSCLK_CLKHF_DIVIDE_BY_2\000"
 4823      5953434C 
 4823      4B5F434C 
 4823      4B48465F 
 4823      44495649 
 4824              	.LASF170:
 4825 0a45 73727373 		.ascii	"srssNumPll\000"
 4825      4E756D50 
 4825      6C6C00
 4826              	.LASF303:
 4827 0a50 43595F53 		.ascii	"CY_SYSCLK_CLKHF_DIVIDE_BY_4\000"
 4827      5953434C 
 4827      4B5F434C 
 4827      4B48465F 
 4827      44495649 
 4828              	.LASF260:
 4829 0a6c 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_PILO\000"
 4829      5953434C 
 4829      4B5F434C 
 4829      4B504154 
 4829      485F494E 
 4830              	.LASF304:
 4831 0a86 43595F53 		.ascii	"CY_SYSCLK_CLKHF_DIVIDE_BY_8\000"
 4831      5953434C 
 4831      4B5F434C 
 4831      4B48465F 
 4831      44495649 
 4832              	.LASF121:
 4833 0aa2 4F55545F 		.ascii	"OUT_SET\000"
 4833      53455400 
 4834              	.LASF250:
 4835 0aaa 63795F65 		.ascii	"cy_en_sysclk_status_t\000"
 4835      6E5F7379 
 4835      73636C6B 
 4835      5F737461 
 4835      7475735F 
 4836              	.LASF66:
 4837 0ac0 434C4B5F 		.ascii	"CLK_FLL_CONFIG2\000"
 4837      464C4C5F 
 4837      434F4E46 
 4837      49473200 
 4838              	.LASF67:
 4839 0ad0 434C4B5F 		.ascii	"CLK_FLL_CONFIG3\000"
 4839      464C4C5F 
 4839      434F4E46 
 4839      49473300 
 4840              	.LASF68:
 4841 0ae0 434C4B5F 		.ascii	"CLK_FLL_CONFIG4\000"
 4841      464C4C5F 
 4841      434F4E46 
 4841      49473400 
 4842              	.LASF60:
 4843 0af0 434C4B5F 		.ascii	"CLK_ECO_CONFIG\000"
 4843      45434F5F 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 191


 4843      434F4E46 
 4843      494700
 4844              	.LASF57:
 4845 0aff 434C4B5F 		.ascii	"CLK_CAL_CNT1\000"
 4845      43414C5F 
 4845      434E5431 
 4845      00
 4846              	.LASF58:
 4847 0b0c 434C4B5F 		.ascii	"CLK_CAL_CNT2\000"
 4847      43414C5F 
 4847      434E5432 
 4847      00
 4848              	.LASF181:
 4849 0b19 666C6173 		.ascii	"flashPipeRequired\000"
 4849      68506970 
 4849      65526571 
 4849      75697265 
 4849      6400
 4850              	.LASF196:
 4851 0b2b 70657269 		.ascii	"periTrCmdOffset\000"
 4851      5472436D 
 4851      644F6666 
 4851      73657400 
 4852              	.LASF300:
 4853 0b3b 63795F65 		.ascii	"cy_en_clkhf_in_sources_t\000"
 4853      6E5F636C 
 4853      6B68665F 
 4853      696E5F73 
 4853      6F757263 
 4854              	.LASF235:
 4855 0b54 696E7472 		.ascii	"intrCfg\000"
 4855      43666700 
 4856              	.LASF282:
 4857 0b5c 5F426F6F 		.ascii	"_Bool\000"
 4857      6C00
 4858              	.LASF374:
 4859 0b62 706F7274 		.ascii	"port6_cfg\000"
 4859      365F6366 
 4859      6700
 4860              	.LASF312:
 4861 0b6c 43595F53 		.ascii	"CY_SYSCLK_CLKTIMER_IN_HF0_NODIV\000"
 4861      5953434C 
 4861      4B5F434C 
 4861      4B54494D 
 4861      45525F49 
 4862              	.LASF383:
 4863 0b8c 43795F53 		.ascii	"Cy_SysPm_LdoSetVoltage\000"
 4863      7973506D 
 4863      5F4C646F 
 4863      53657456 
 4863      6F6C7461 
 4864              	.LASF28:
 4865 0ba3 4D435744 		.ascii	"MCWDT_INTR_MASK\000"
 4865      545F494E 
 4865      54525F4D 
 4865      41534B00 
 4866              	.LASF381:
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 192


 4867 0bb3 43795F53 		.ascii	"Cy_SysLib_GetResetReason\000"
 4867      79734C69 
 4867      625F4765 
 4867      74526573 
 4867      65745265 
 4868              	.LASF258:
 4869 0bcc 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_WCO\000"
 4869      5953434C 
 4869      4B5F434C 
 4869      4B504154 
 4869      485F494E 
 4870              	.LASF106:
 4871 0be5 414C4D31 		.ascii	"ALM1_DATE\000"
 4871      5F444154 
 4871      4500
 4872              	.LASF134:
 4873 0bef 5644445F 		.ascii	"VDD_INTR\000"
 4873      494E5452 
 4873      00
 4874              	.LASF149:
 4875 0bf8 6770696F 		.ascii	"gpioBase\000"
 4875      42617365 
 4875      00
 4876              	.LASF73:
 4877 0c01 434C4B5F 		.ascii	"CLK_PLL_STATUS\000"
 4877      504C4C5F 
 4877      53544154 
 4877      555300
 4878              	.LASF265:
 4879 0c10 63795F65 		.ascii	"cy_en_fll_pll_output_mode_t\000"
 4879      6E5F666C 
 4879      6C5F706C 
 4879      6C5F6F75 
 4879      74707574 
 4880              	.LASF114:
 4881 0c2c 5449434B 		.ascii	"TICKS\000"
 4881      5300
 4882              	.LASF271:
 4883 0c32 63795F65 		.ascii	"cy_en_fll_cco_ranges_t\000"
 4883      6E5F666C 
 4883      6C5F6363 
 4883      6F5F7261 
 4883      6E676573 
 4884              	.LASF220:
 4885 0c49 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 4885      73537973 
 4885      5469636B 
 4885      43746C4F 
 4885      66667365 
 4886              	.LASF185:
 4887 0c5f 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 4887      6843746C 
 4887      4D61696E 
 4887      57733046 
 4887      72657100 
 4888              	.LASF97:
 4889 0c73 434C4B5F 		.ascii	"CLK_TRIM_PILO_CTL2\000"
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 193


 4889      5452494D 
 4889      5F50494C 
 4889      4F5F4354 
 4889      4C3200
 4890              	.LASF98:
 4891 0c86 434C4B5F 		.ascii	"CLK_TRIM_PILO_CTL3\000"
 4891      5452494D 
 4891      5F50494C 
 4891      4F5F4354 
 4891      4C3300
 4892              	.LASF348:
 4893 0c99 43795F53 		.ascii	"Cy_SysClk_ClkHfEnable\000"
 4893      7973436C 
 4893      6B5F436C 
 4893      6B486645 
 4893      6E61626C 
 4894              	.LASF194:
 4895 0caf 64775374 		.ascii	"dwStatusChIdxPos\000"
 4895      61747573 
 4895      43684964 
 4895      78506F73 
 4895      00
 4896              	.LASF382:
 4897 0cc0 43795F53 		.ascii	"Cy_SysLib_ResetBackupDomain\000"
 4897      79734C69 
 4897      625F5265 
 4897      73657442 
 4897      61636B75 
 4898              	.LASF375:
 4899 0cdc 43795F53 		.ascii	"Cy_SysClk_FllManualConfigure\000"
 4899      7973436C 
 4899      6B5F466C 
 4899      6C4D616E 
 4899      75616C43 
 4900              	.LASF373:
 4901 0cf9 706F7274 		.ascii	"port1_cfg\000"
 4901      315F6366 
 4901      6700
 4902              	.LASF390:
 4903 0d03 43795F53 		.ascii	"Cy_SystemInit\000"
 4903      79737465 
 4903      6D496E69 
 4903      7400
 4904              	.LASF266:
 4905 0d11 43595F53 		.ascii	"CY_SYSCLK_FLL_CCO_RANGE0\000"
 4905      5953434C 
 4905      4B5F464C 
 4905      4C5F4343 
 4905      4F5F5241 
 4906              	.LASF267:
 4907 0d2a 43595F53 		.ascii	"CY_SYSCLK_FLL_CCO_RANGE1\000"
 4907      5953434C 
 4907      4B5F464C 
 4907      4C5F4343 
 4907      4F5F5241 
 4908              	.LASF268:
 4909 0d43 43595F53 		.ascii	"CY_SYSCLK_FLL_CCO_RANGE2\000"
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 194


 4909      5953434C 
 4909      4B5F464C 
 4909      4C5F4343 
 4909      4F5F5241 
 4910              	.LASF269:
 4911 0d5c 43595F53 		.ascii	"CY_SYSCLK_FLL_CCO_RANGE3\000"
 4911      5953434C 
 4911      4B5F464C 
 4911      4C5F4343 
 4911      4F5F5241 
 4912              	.LASF270:
 4913 0d75 43595F53 		.ascii	"CY_SYSCLK_FLL_CCO_RANGE4\000"
 4913      5953434C 
 4913      4B5F464C 
 4913      4C5F4343 
 4913      4F5F5241 
 4914              	.LASF119:
 4915 0d8e 4241434B 		.ascii	"BACKUP_V1_Type\000"
 4915      55505F56 
 4915      315F5479 
 4915      706500
 4916              	.LASF144:
 4917 0d9d 666C6173 		.ascii	"flashcBase\000"
 4917      68634261 
 4917      736500
 4918              	.LASF15:
 4919 0da8 63686172 		.ascii	"char\000"
 4919      00
 4920              	.LASF118:
 4921 0dad 5452494D 		.ascii	"TRIM\000"
 4921      00
 4922              	.LASF176:
 4923 0db2 75646250 		.ascii	"udbPresent\000"
 4923      72657365 
 4923      6E7400
 4924              	.LASF177:
 4925 0dbd 73797350 		.ascii	"sysPmSimoPresent\000"
 4925      6D53696D 
 4925      6F507265 
 4925      73656E74 
 4925      00
 4926              	.LASF35:
 4927 0dce 5057525F 		.ascii	"PWR_LVD_CTL\000"
 4927      4C56445F 
 4927      43544C00 
 4928              	.LASF237:
 4929 0dda 6366674F 		.ascii	"cfgOut\000"
 4929      757400
 4930              	.LASF275:
 4931 0de1 656E6162 		.ascii	"enableOutputDiv\000"
 4931      6C654F75 
 4931      74707574 
 4931      44697600 
 4932              	.LASF42:
 4933 0df1 5744545F 		.ascii	"WDT_CNT\000"
 4933      434E5400 
 4934              	.LASF0:
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 195


 4935 0df9 756E7369 		.ascii	"unsigned int\000"
 4935      676E6564 
 4935      20696E74 
 4935      00
 4936              	.LASF195:
 4937 0e06 64775374 		.ascii	"dwStatusChIdxMsk\000"
 4937      61747573 
 4937      43684964 
 4937      784D736B 
 4937      00
 4938              	.LASF76:
 4939 0e17 53525353 		.ascii	"SRSS_INTR_SET\000"
 4939      5F494E54 
 4939      525F5345 
 4939      5400
 4940              	.LASF16:
 4941 0e25 75696E74 		.ascii	"uint8_t\000"
 4941      385F7400 
 4942              	.LASF51:
 4943 0e2d 434C4B5F 		.ascii	"CLK_TIMER_CTL\000"
 4943      54494D45 
 4943      525F4354 
 4943      4C00
 4944              	.LASF371:
 4945 0e3b 73746174 		.ascii	"status\000"
 4945      757300
 4946              	.LASF349:
 4947 0e42 43795F53 		.ascii	"Cy_SysClk_ClkHfSetDivider\000"
 4947      7973436C 
 4947      6B5F436C 
 4947      6B486653 
 4947      65744469 
 4948              	.LASF385:
 4949 0e5c 47656E65 		.ascii	"Generated_Source\\PSoC6\\cyfitter_cfg.c\000"
 4949      72617465 
 4949      645F536F 
 4949      75726365 
 4949      5C50536F 
 4950              	.LASF253:
 4951 0e82 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_ECO\000"
 4951      5953434C 
 4951      4B5F434C 
 4951      4B504154 
 4951      485F494E 
 4952              	.LASF200:
 4953 0e9b 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 4953      44697643 
 4953      6D644469 
 4953      7653656C 
 4953      4D736B00 
 4954              	.LASF117:
 4955 0eaf 42524547 		.ascii	"BREG\000"
 4955      00
 4956              	.LASF43:
 4957 0eb4 5744545F 		.ascii	"WDT_MATCH\000"
 4957      4D415443 
 4957      4800
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 196


 4958              	.LASF206:
 4959 0ebe 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 4959      44697631 
 4959      365F3543 
 4959      746C4F66 
 4959      66736574 
 4960              	.LASF21:
 4961 0ed3 4D435744 		.ascii	"MCWDT_CNTLOW\000"
 4961      545F434E 
 4961      544C4F57 
 4961      00
 4962              	.LASF224:
 4963 0ee0 63707573 		.ascii	"cpussRam0Ctl0\000"
 4963      7352616D 
 4963      3043746C 
 4963      3000
 4964              	.LASF342:
 4965 0eee 63795F65 		.ascii	"cy_en_clkbak_in_sources_t\000"
 4965      6E5F636C 
 4965      6B62616B 
 4965      5F696E5F 
 4965      736F7572 
 4966              	.LASF1:
 4967 0f08 6C6F6E67 		.ascii	"long long int\000"
 4967      206C6F6E 
 4967      6720696E 
 4967      7400
 4968              	.LASF151:
 4969 0f16 69706342 		.ascii	"ipcBase\000"
 4969      61736500 
 4970              	.LASF192:
 4971 0f1e 64774368 		.ascii	"dwChCtlPrioPos\000"
 4971      43746C50 
 4971      72696F50 
 4971      6F7300
 4972              	.LASF152:
 4973 0f2d 63727970 		.ascii	"cryptoBase\000"
 4973      746F4261 
 4973      736500
 4974              	.LASF360:
 4975 0f38 43795F53 		.ascii	"Cy_SysClk_ClkBakSetSource\000"
 4975      7973436C 
 4975      6B5F436C 
 4975      6B42616B 
 4975      53657453 
 4976              	.LASF99:
 4977 0f52 53525353 		.ascii	"SRSS_V1_Type\000"
 4977      5F56315F 
 4977      54797065 
 4977      00
 4978              	.LASF182:
 4979 0f5f 666C6173 		.ascii	"flashWriteDelay\000"
 4979      68577269 
 4979      74654465 
 4979      6C617900 
 4980              	.LASF55:
 4981 0f6f 434C4B5F 		.ascii	"CLK_OUTPUT_FAST\000"
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 197


 4981      4F555450 
 4981      55545F46 
 4981      41535400 
 4982              	.LASF384:
 4983 0f7f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4983      43313120 
 4983      352E342E 
 4983      31203230 
 4983      31363036 
 4984 0fb2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4984      20726576 
 4984      6973696F 
 4984      6E203233 
 4984      37373135 
 4985 0fe5 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4985      67202D66 
 4985      66756E63 
 4985      74696F6E 
 4985      2D736563 
 4986              	.LASF6:
 4987 1011 5F5F696E 		.ascii	"__int16_t\000"
 4987      7431365F 
 4987      7400
 4988              	.LASF328:
 4989 101b 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH11\000"
 4989      5953434C 
 4989      4B5F5055 
 4989      4D505F49 
 4989      4E5F434C 
 4990              	.LASF295:
 4991 1037 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH11\000"
 4991      5953434C 
 4991      4B5F434C 
 4991      4B48465F 
 4991      494E5F43 
 4992              	.LASF296:
 4993 1054 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH12\000"
 4993      5953434C 
 4993      4B5F434C 
 4993      4B48465F 
 4993      494E5F43 
 4994              	.LASF297:
 4995 1071 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH13\000"
 4995      5953434C 
 4995      4B5F434C 
 4995      4B48465F 
 4995      494E5F43 
 4996              	.LASF148:
 4997 108e 6873696F 		.ascii	"hsiomBase\000"
 4997      6D426173 
 4997      6500
 4998              	.LASF299:
 4999 1098 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH15\000"
 4999      5953434C 
 4999      4B5F434C 
 4999      4B48465F 
 4999      494E5F43 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 198


 5000              	.LASF198:
 5001 10b5 70657269 		.ascii	"periTrGrOffset\000"
 5001      54724772 
 5001      4F666673 
 5001      657400
 5002              	.LASF164:
 5003 10c4 63707573 		.ascii	"cpussDwChNr\000"
 5003      73447743 
 5003      684E7200 
 5004              	.LASF353:
 5005 10d0 43795F53 		.ascii	"Cy_SysClk_ClkHfSetSource\000"
 5005      7973436C 
 5005      6B5F436C 
 5005      6B486653 
 5005      6574536F 
 5006              	.LASF71:
 5007 10e9 434C4B5F 		.ascii	"CLK_PLL_CONFIG\000"
 5007      504C4C5F 
 5007      434F4E46 
 5007      494700
 5008              	.LASF162:
 5009 10f8 63707573 		.ascii	"cpussIpcNr\000"
 5009      73497063 
 5009      4E7200
 5010              	.LASF215:
 5011 1103 63707573 		.ascii	"cpussCm4StatusOffset\000"
 5011      73436D34 
 5011      53746174 
 5011      75734F66 
 5011      66736574 
 5012              	.LASF174:
 5013 1118 70617373 		.ascii	"passSarChannels\000"
 5013      53617243 
 5013      68616E6E 
 5013      656C7300 
 5014              	.LASF34:
 5015 1128 5057525F 		.ascii	"PWR_HIBERNATE\000"
 5015      48494245 
 5015      524E4154 
 5015      4500
 5016              	.LASF226:
 5017 1136 63707573 		.ascii	"cpussRam2Ctl0\000"
 5017      7352616D 
 5017      3243746C 
 5017      3000
 5018              	.LASF63:
 5019 1144 434C4B5F 		.ascii	"CLK_PILO_CONFIG\000"
 5019      50494C4F 
 5019      5F434F4E 
 5019      46494700 
 5020              	.LASF334:
 5021 1154 43595F53 		.ascii	"CY_SYSCLK_PUMP_NO_DIV\000"
 5021      5953434C 
 5021      4B5F5055 
 5021      4D505F4E 
 5021      4F5F4449 
 5022              	.LASF84:
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 199


 5023 116a 5057525F 		.ascii	"PWR_TRIM_REF_CTL\000"
 5023      5452494D 
 5023      5F524546 
 5023      5F43544C 
 5023      00
 5024              	.LASF100:
 5025 117b 5254435F 		.ascii	"RTC_RW\000"
 5025      525700
 5026              	.LASF136:
 5027 1182 5644445F 		.ascii	"VDD_INTR_MASKED\000"
 5027      494E5452 
 5027      5F4D4153 
 5027      4B454400 
 5028              	.LASF205:
 5029 1192 70657269 		.ascii	"periDiv16CtlOffset\000"
 5029      44697631 
 5029      3643746C 
 5029      4F666673 
 5029      657400
 5030              	.LASF26:
 5031 11a5 4D435744 		.ascii	"MCWDT_INTR\000"
 5031      545F494E 
 5031      545200
 5032              	.LASF30:
 5033 11b0 4D435744 		.ascii	"MCWDT_LOCK\000"
 5033      545F4C4F 
 5033      434B00
 5034              	.LASF9:
 5035 11bb 73686F72 		.ascii	"short unsigned int\000"
 5035      7420756E 
 5035      7369676E 
 5035      65642069 
 5035      6E7400
 5036              	.LASF2:
 5037 11ce 6C6F6E67 		.ascii	"long double\000"
 5037      20646F75 
 5037      626C6500 
 5038              	.LASF18:
 5039 11da 75696E74 		.ascii	"uint16_t\000"
 5039      31365F74 
 5039      00
 5040              	.LASF147:
 5041 11e3 70726F74 		.ascii	"protBase\000"
 5041      42617365 
 5041      00
 5042              	.LASF137:
 5043 11ec 5644445F 		.ascii	"VDD_INTR_SET\000"
 5043      494E5452 
 5043      5F534554 
 5043      00
 5044              	.LASF197:
 5045 11f9 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 5045      5472436D 
 5045      64477253 
 5045      656C4D73 
 5045      6B00
 5046              	.LASF249:
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 200


 5047 120b 43595F53 		.ascii	"CY_SYSCLK_INVALID_STATE\000"
 5047      5953434C 
 5047      4B5F494E 
 5047      56414C49 
 5047      445F5354 
 5048              	.LASF338:
 5049 1223 43595F53 		.ascii	"CY_SYSCLK_PUMP_DIV_16\000"
 5049      5953434C 
 5049      4B5F5055 
 5049      4D505F44 
 5049      49565F31 
 5050              	.LASF171:
 5051 1239 73727373 		.ascii	"srssNumHfroot\000"
 5051      4E756D48 
 5051      66726F6F 
 5051      7400
 5052              	.LASF257:
 5053 1247 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_ILO\000"
 5053      5953434C 
 5053      4B5F434C 
 5053      4B504154 
 5053      485F494E 
 5054              	.LASF48:
 5055 1260 434C4B5F 		.ascii	"CLK_ROOT_SELECT\000"
 5055      524F4F54 
 5055      5F53454C 
 5055      45435400 
 5056              	.LASF159:
 5057 1270 69706356 		.ascii	"ipcVersion\000"
 5057      65727369 
 5057      6F6E00
 5058              	.LASF155:
 5059 127b 64775665 		.ascii	"dwVersion\000"
 5059      7273696F 
 5059      6E00
 5060              	.LASF187:
 5061 1285 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 5061      6843746C 
 5061      4D61696E 
 5061      57733246 
 5061      72657100 
 5062              	.LASF14:
 5063 1299 73697A65 		.ascii	"sizetype\000"
 5063      74797065 
 5063      00
 5064              	.LASF247:
 5065 12a2 43595F53 		.ascii	"CY_SYSCLK_BAD_PARAM\000"
 5065      5953434C 
 5065      4B5F4241 
 5065      445F5041 
 5065      52414D00 
 5066              	.LASF222:
 5067 12b6 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 5067      73436D34 
 5067      4E6D6943 
 5067      746C4F66 
 5067      66736574 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 201


 5068              	.LASF378:
 5069 12cb 43795F53 		.ascii	"Cy_SysTick_SetClockSource\000"
 5069      79735469 
 5069      636B5F53 
 5069      6574436C 
 5069      6F636B53 
 5070              	.LASF204:
 5071 12e5 70657269 		.ascii	"periDiv8CtlOffset\000"
 5071      44697638 
 5071      43746C4F 
 5071      66667365 
 5071      7400
 5072              	.LASF40:
 5073 12f7 52455345 		.ascii	"RESERVED2\000"
 5073      52564544 
 5073      3200
 5074              	.LASF44:
 5075 1301 52455345 		.ascii	"RESERVED3\000"
 5075      52564544 
 5075      3300
 5076              	.LASF49:
 5077 130b 52455345 		.ascii	"RESERVED4\000"
 5077      52564544 
 5077      3400
 5078              	.LASF52:
 5079 1315 52455345 		.ascii	"RESERVED5\000"
 5079      52564544 
 5079      3500
 5080              	.LASF59:
 5081 131f 52455345 		.ascii	"RESERVED6\000"
 5081      52564544 
 5081      3600
 5082              	.LASF62:
 5083 1329 52455345 		.ascii	"RESERVED7\000"
 5083      52564544 
 5083      3700
 5084              	.LASF64:
 5085 1333 52455345 		.ascii	"RESERVED8\000"
 5085      52564544 
 5085      3800
 5086              	.LASF70:
 5087 133d 52455345 		.ascii	"RESERVED9\000"
 5087      52564544 
 5087      3900
 5088              	.LASF351:
 5089 1347 64697669 		.ascii	"divider\000"
 5089      64657200 
 5090              	.LASF47:
 5091 134f 434C4B5F 		.ascii	"CLK_PATH_SELECT\000"
 5091      50415448 
 5091      5F53454C 
 5091      45435400 
 5092              	.LASF239:
 5093 135f 73656C30 		.ascii	"sel0Active\000"
 5093      41637469 
 5093      766500
 5094              	.LASF153:
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 202


 5095 136a 63707573 		.ascii	"cpussVersion\000"
 5095      73566572 
 5095      73696F6E 
 5095      00
 5096              	.LASF212:
 5097 1377 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 5097      50727443 
 5097      66675369 
 5097      6F4F6666 
 5097      73657400 
 5098              	.LASF157:
 5099 138b 6770696F 		.ascii	"gpioVersion\000"
 5099      56657273 
 5099      696F6E00 
 5100              	.LASF96:
 5101 1397 434C4B5F 		.ascii	"CLK_TRIM_PILO_CTL\000"
 5101      5452494D 
 5101      5F50494C 
 5101      4F5F4354 
 5101      4C00
 5102              	.LASF78:
 5103 13a9 53525353 		.ascii	"SRSS_INTR_MASKED\000"
 5103      5F494E54 
 5103      525F4D41 
 5103      534B4544 
 5103      00
 5104              	.LASF36:
 5105 13ba 5057525F 		.ascii	"PWR_BUCK_CTL\000"
 5105      4255434B 
 5105      5F43544C 
 5105      00
 5106              	.LASF156:
 5107 13c7 666C6173 		.ascii	"flashcVersion\000"
 5107      68635665 
 5107      7273696F 
 5107      6E00
 5108              	.LASF178:
 5109 13d5 70726F74 		.ascii	"protBusMasterMask\000"
 5109      4275734D 
 5109      61737465 
 5109      724D6173 
 5109      6B00
 5110              	.LASF361:
 5111 13e7 43795F53 		.ascii	"Cy_SysClk_IloEnable\000"
 5111      7973436C 
 5111      6B5F496C 
 5111      6F456E61 
 5111      626C6500 
 5112              	.LASF128:
 5113 13fb 4750494F 		.ascii	"GPIO_PRT_V1_Type\000"
 5113      5F505254 
 5113      5F56315F 
 5113      54797065 
 5113      00
 5114              	.LASF341:
 5115 140c 43595F53 		.ascii	"CY_SYSCLK_BAK_IN_CLKLF\000"
 5115      5953434C 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 203


 5115      4B5F4241 
 5115      4B5F494E 
 5115      5F434C4B 
 5116              	.LASF251:
 5117 1423 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_IMO\000"
 5117      5953434C 
 5117      4B5F434C 
 5117      4B504154 
 5117      485F494E 
 5118              	.LASF45:
 5119 143c 4D435744 		.ascii	"MCWDT_STRUCT\000"
 5119      545F5354 
 5119      52554354 
 5119      00
 5120              	.LASF230:
 5121 1449 63686172 		.ascii	"char_t\000"
 5121      5F7400
 5122              	.LASF116:
 5123 1450 52455345 		.ascii	"RESET\000"
 5123      5400
 5124              	.LASF274:
 5125 1456 63636F52 		.ascii	"ccoRange\000"
 5125      616E6765 
 5125      00
 5126              	.LASF86:
 5127 145f 434C4B5F 		.ascii	"CLK_TRIM_CCO_CTL\000"
 5127      5452494D 
 5127      5F43434F 
 5127      5F43544C 
 5127      00
 5128              	.LASF301:
 5129 1470 43595F53 		.ascii	"CY_SYSCLK_CLKHF_NO_DIVIDE\000"
 5129      5953434C 
 5129      4B5F434C 
 5129      4B48465F 
 5129      4E4F5F44 
 5130              	.LASF127:
 5131 148a 4346475F 		.ascii	"CFG_IN_GPIO5V\000"
 5131      494E5F47 
 5131      50494F35 
 5131      5600
 5132              	.LASF27:
 5133 1498 4D435744 		.ascii	"MCWDT_INTR_SET\000"
 5133      545F494E 
 5133      54525F53 
 5133      455400
 5134              	.LASF311:
 5135 14a7 43595F53 		.ascii	"CY_SYSCLK_CLKTIMER_IN_IMO\000"
 5135      5953434C 
 5135      4B5F434C 
 5135      4B54494D 
 5135      45525F49 
 5136              	.LASF184:
 5137 14c1 666C6173 		.ascii	"flashEraseDelay\000"
 5137      68457261 
 5137      73654465 
 5137      6C617900 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 204


 5138              	.LASF254:
 5139 14d1 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_ALTHF\000"
 5139      5953434C 
 5139      4B5F434C 
 5139      4B504154 
 5139      485F494E 
 5140              	.LASF101:
 5141 14ec 43414C5F 		.ascii	"CAL_CTL\000"
 5141      43544C00 
 5142              	.LASF379:
 5143 14f4 43795F53 		.ascii	"Cy_SysLib_SetWaitStates\000"
 5143      79734C69 
 5143      625F5365 
 5143      74576169 
 5143      74537461 
 5144              	.LASF122:
 5145 150c 4F55545F 		.ascii	"OUT_INV\000"
 5145      494E5600 
 5146              	.LASF217:
 5147 1514 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 5147      73436D34 
 5147      50777243 
 5147      746C4F66 
 5147      66736574 
 5148              	.LASF5:
 5149 1529 5F5F7569 		.ascii	"__uint8_t\000"
 5149      6E74385F 
 5149      7400
 5150              	.LASF354:
 5151 1533 736F7572 		.ascii	"source\000"
 5151      636500
 5152              	.LASF255:
 5153 153a 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_DSIMUX\000"
 5153      5953434C 
 5153      4B5F434C 
 5153      4B504154 
 5153      485F494E 
 5154              	.LASF208:
 5155 1556 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 5155      50727449 
 5155      6E747243 
 5155      66674F66 
 5155      66736574 
 5156              	.LASF262:
 5157 156b 43595F53 		.ascii	"CY_SYSCLK_FLLPLL_OUTPUT_AUTO1\000"
 5157      5953434C 
 5157      4B5F464C 
 5157      4C504C4C 
 5157      5F4F5554 
 5158              	.LASF214:
 5159 1589 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 5159      73436D34 
 5159      436C6F63 
 5159      6B43746C 
 5159      4F666673 
 5160              	.LASF112:
 5161 15a0 494E5452 		.ascii	"INTR_MASKED\000"
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 205


 5161      5F4D4153 
 5161      4B454400 
 5162              	.LASF369:
 5163 15ac 43795F53 		.ascii	"Cy_SysPm_PmicDisableOutput\000"
 5163      7973506D 
 5163      5F506D69 
 5163      63446973 
 5163      61626C65 
 5164              	.LASF219:
 5165 15c7 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 5165      73547269 
 5165      6D526F6D 
 5165      43746C4F 
 5165      66667365 
 5166              	.LASF283:
 5167 15dd 63795F73 		.ascii	"cy_stc_fll_manual_config_t\000"
 5167      74635F66 
 5167      6C6C5F6D 
 5167      616E7561 
 5167      6C5F636F 
 5168              	.LASF263:
 5169 15f8 43595F53 		.ascii	"CY_SYSCLK_FLLPLL_OUTPUT_INPUT\000"
 5169      5953434C 
 5169      4B5F464C 
 5169      4C504C4C 
 5169      5F4F5554 
 5170              	.LASF165:
 5171 1616 63707573 		.ascii	"cpussFlashPaSize\000"
 5171      73466C61 
 5171      73685061 
 5171      53697A65 
 5171      00
 5172              	.LASF388:
 5173 1627 6572726F 		.ascii	"errorCode\000"
 5173      72436F64 
 5173      6500
 5174              	.LASF158:
 5175 1631 6873696F 		.ascii	"hsiomVersion\000"
 5175      6D566572 
 5175      73696F6E 
 5175      00
 5176              	.LASF81:
 5177 163e 5245535F 		.ascii	"RES_CAUSE\000"
 5177      43415553 
 5177      4500
 5178              	.LASF12:
 5179 1648 6C6F6E67 		.ascii	"long unsigned int\000"
 5179      20756E73 
 5179      69676E65 
 5179      6420696E 
 5179      7400
 5180              	.LASF352:
 5181 165a 72657456 		.ascii	"retVal\000"
 5181      616C00
 5182              	.LASF261:
 5183 1661 43595F53 		.ascii	"CY_SYSCLK_FLLPLL_OUTPUT_AUTO\000"
 5183      5953434C 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 206


 5183      4B5F464C 
 5183      4C504C4C 
 5183      5F4F5554 
 5184              	.LASF223:
 5185 167e 63707573 		.ascii	"cpussRomCtl\000"
 5185      73526F6D 
 5185      43746C00 
 5186              	.LASF389:
 5187 168a 436C6F63 		.ascii	"ClockInit\000"
 5187      6B496E69 
 5187      7400
 5188              	.LASF113:
 5189 1694 4F534343 		.ascii	"OSCCNT\000"
 5189      4E5400
 5190              	.LASF310:
 5191 169b 63795F65 		.ascii	"cy_en_clklf_in_sources_t\000"
 5191      6E5F636C 
 5191      6B6C665F 
 5191      696E5F73 
 5191      6F757263 
 5192              	.LASF278:
 5193 16b4 70676169 		.ascii	"pgain\000"
 5193      6E00
 5194              	.LASF216:
 5195 16ba 63707573 		.ascii	"cpussCm0StatusOffset\000"
 5195      73436D30 
 5195      53746174 
 5195      75734F66 
 5195      66736574 
 5196              	.LASF41:
 5197 16cf 5744545F 		.ascii	"WDT_CTL\000"
 5197      43544C00 
 5198              	.LASF4:
 5199 16d7 756E7369 		.ascii	"unsigned char\000"
 5199      676E6564 
 5199      20636861 
 5199      7200
 5200              	.LASF11:
 5201 16e5 5F5F7569 		.ascii	"__uint32_t\000"
 5201      6E743332 
 5201      5F7400
 5202              	.LASF142:
 5203 16f0 4750494F 		.ascii	"GPIO_Type\000"
 5203      5F547970 
 5203      6500
 5204              	.LASF228:
 5205 16fa 6970634C 		.ascii	"ipcLockStatusOffset\000"
 5205      6F636B53 
 5205      74617475 
 5205      734F6666 
 5205      73657400 
 5206              	.LASF308:
 5207 170e 43595F53 		.ascii	"CY_SYSCLK_CLKLF_IN_ALTLF\000"
 5207      5953434C 
 5207      4B5F434C 
 5207      4B4C465F 
 5207      494E5F41 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 207


 5208              	.LASF241:
 5209 1727 63795F73 		.ascii	"cy_stc_gpio_prt_config_t\000"
 5209      74635F67 
 5209      70696F5F 
 5209      7072745F 
 5209      636F6E66 
 5210              	.LASF123:
 5211 1740 494E5452 		.ascii	"INTR_CFG\000"
 5211      5F434647 
 5211      00
 5212              	.LASF252:
 5213 1749 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_EXT\000"
 5213      5953434C 
 5213      4B5F434C 
 5213      4B504154 
 5213      485F494E 
 5214              	.LASF72:
 5215 1762 52455345 		.ascii	"RESERVED10\000"
 5215      52564544 
 5215      313000
 5216              	.LASF74:
 5217 176d 52455345 		.ascii	"RESERVED11\000"
 5217      52564544 
 5217      313100
 5218              	.LASF80:
 5219 1778 52455345 		.ascii	"RESERVED12\000"
 5219      52564544 
 5219      313200
 5220              	.LASF83:
 5221 1783 52455345 		.ascii	"RESERVED13\000"
 5221      52564544 
 5221      313300
 5222              	.LASF88:
 5223 178e 52455345 		.ascii	"RESERVED14\000"
 5223      52564544 
 5223      313400
 5224              	.LASF90:
 5225 1799 52455345 		.ascii	"RESERVED15\000"
 5225      52564544 
 5225      313500
 5226              	.LASF92:
 5227 17a4 52455345 		.ascii	"RESERVED16\000"
 5227      52564544 
 5227      313600
 5228              	.LASF327:
 5229 17af 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH10\000"
 5229      5953434C 
 5229      4B5F5055 
 5229      4D505F49 
 5229      4E5F434C 
 5230              	.LASF190:
 5231 17cb 64774368 		.ascii	"dwChOffset\000"
 5231      4F666673 
 5231      657400
 5232              	.LASF329:
 5233 17d6 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH12\000"
 5233      5953434C 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 208


 5233      4B5F5055 
 5233      4D505F49 
 5233      4E5F434C 
 5234              	.LASF330:
 5235 17f2 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH13\000"
 5235      5953434C 
 5235      4B5F5055 
 5235      4D505F49 
 5235      4E5F434C 
 5236              	.LASF331:
 5237 180e 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH14\000"
 5237      5953434C 
 5237      4B5F5055 
 5237      4D505F49 
 5237      4E5F434C 
 5238              	.LASF332:
 5239 182a 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH15\000"
 5239      5953434C 
 5239      4B5F5055 
 5239      4D505F49 
 5239      4E5F434C 
 5240              	.LASF104:
 5241 1846 5254435F 		.ascii	"RTC_DATE\000"
 5241      44415445 
 5241      00
 5242              	.LASF25:
 5243 184f 4D435744 		.ascii	"MCWDT_CTL\000"
 5243      545F4354 
 5243      4C00
 5244              	.LASF357:
 5245 1859 43795F53 		.ascii	"Cy_SysClk_ClkFastSetDivider\000"
 5245      7973436C 
 5245      6B5F436C 
 5245      6B466173 
 5245      74536574 
 5246              	.LASF358:
 5247 1875 43795F53 		.ascii	"Cy_SysClk_ClkLfSetSource\000"
 5247      7973436C 
 5247      6B5F436C 
 5247      6B4C6653 
 5247      6574536F 
 5248              	.LASF111:
 5249 188e 494E5452 		.ascii	"INTR_MASK\000"
 5249      5F4D4153 
 5249      4B00
 5250              	.LASF24:
 5251 1898 4D435744 		.ascii	"MCWDT_CONFIG\000"
 5251      545F434F 
 5251      4E464947 
 5251      00
 5252              	.LASF180:
 5253 18a5 666C6173 		.ascii	"flashRwwRequired\000"
 5253      68527777 
 5253      52657175 
 5253      69726564 
 5253      00
 5254              	.LASF94:
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 209


 5255 18b6 5057525F 		.ascii	"PWR_TRIM_PWRSYS_CTL\000"
 5255      5452494D 
 5255      5F505752 
 5255      5359535F 
 5255      43544C00 
 5256              	.LASF209:
 5257 18ca 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 5257      50727443 
 5257      66674F66 
 5257      66736574 
 5257      00
 5258              	.LASF309:
 5259 18db 43595F53 		.ascii	"CY_SYSCLK_CLKLF_IN_PILO\000"
 5259      5953434C 
 5259      4B5F434C 
 5259      4B4C465F 
 5259      494E5F50 
 5260              	.LASF175:
 5261 18f3 65704D6F 		.ascii	"epMonitorNr\000"
 5261      6E69746F 
 5261      724E7200 
 5262              	.LASF186:
 5263 18ff 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 5263      6843746C 
 5263      4D61696E 
 5263      57733146 
 5263      72657100 
 5264              	.LASF141:
 5265 1913 4750494F 		.ascii	"GPIO_PRT_Type\000"
 5265      5F505254 
 5265      5F547970 
 5265      6500
 5266              	.LASF135:
 5267 1921 5644445F 		.ascii	"VDD_INTR_MASK\000"
 5267      494E5452 
 5267      5F4D4153 
 5267      4B00
 5268              	.LASF3:
 5269 192f 7369676E 		.ascii	"signed char\000"
 5269      65642063 
 5269      68617200 
 5270              	.LASF87:
 5271 193b 434C4B5F 		.ascii	"CLK_TRIM_CCO_CTL2\000"
 5271      5452494D 
 5271      5F43434F 
 5271      5F43544C 
 5271      3200
 5272              	.LASF163:
 5273 194d 63707573 		.ascii	"cpussIpcIrqNr\000"
 5273      73497063 
 5273      4972714E 
 5273      7200
 5274              	.LASF193:
 5275 195b 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 5275      43746C50 
 5275      7265656D 
 5275      70746162 
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 210


 5275      6C65506F 
 5276              	.LASF229:
 5277 1971 63795F73 		.ascii	"cy_stc_device_t\000"
 5277      74635F64 
 5277      65766963 
 5277      655F7400 
 5278              	.LASF347:
 5279 1981 43595F53 		.ascii	"CY_SYSTICK_CLOCK_SOURCE_CLK_CPU\000"
 5279      59535449 
 5279      434B5F43 
 5279      4C4F434B 
 5279      5F534F55 
 5280              	.LASF346:
 5281 19a1 43595F53 		.ascii	"CY_SYSTICK_CLOCK_SOURCE_CLK_TIMER\000"
 5281      59535449 
 5281      434B5F43 
 5281      4C4F434B 
 5281      5F534F55 
 5282              	.LASF75:
 5283 19c3 53525353 		.ascii	"SRSS_INTR\000"
 5283      5F494E54 
 5283      5200
 5284              	.LASF107:
 5285 19cd 414C4D32 		.ascii	"ALM2_TIME\000"
 5285      5F54494D 
 5285      4500
 5286              	.LASF160:
 5287 19d7 70657269 		.ascii	"periVersion\000"
 5287      56657273 
 5287      696F6E00 
 5288              	.LASF233:
 5289 19e3 75696E74 		.ascii	"uint8\000"
 5289      3800
 5290              	.LASF232:
 5291 19e9 646F7562 		.ascii	"double\000"
 5291      6C6500
 5292              	.LASF150:
 5293 19f0 70617373 		.ascii	"passBase\000"
 5293      42617365 
 5293      00
 5294              	.LASF46:
 5295 19f9 434C4B5F 		.ascii	"CLK_DSI_SELECT\000"
 5295      4453495F 
 5295      53454C45 
 5295      435400
 5296              	.LASF244:
 5297 1a08 43595F53 		.ascii	"CY_SYSPM_LDO_VOLTAGE_0_9V\000"
 5297      5953504D 
 5297      5F4C444F 
 5297      5F564F4C 
 5297      54414745 
 5298              	.LASF23:
 5299 1a22 4D435744 		.ascii	"MCWDT_MATCH\000"
 5299      545F4D41 
 5299      54434800 
 5300              	.LASF169:
 5301 1a2e 73727373 		.ascii	"srssNumClkpath\000"
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 211


 5301      4E756D43 
 5301      6C6B7061 
 5301      746800
 5302              	.LASF102:
 5303 1a3d 53544154 		.ascii	"STATUS\000"
 5303      555300
 5304              	.LASF189:
 5305 1a44 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 5305      6843746C 
 5305      4D61696E 
 5305      57733446 
 5305      72657100 
 5306              	.LASF359:
 5307 1a58 43795F53 		.ascii	"Cy_SysClk_IloHibernateOn\000"
 5307      7973436C 
 5307      6B5F496C 
 5307      6F486962 
 5307      65726E61 
 5308              	.LASF335:
 5309 1a71 43595F53 		.ascii	"CY_SYSCLK_PUMP_DIV_2\000"
 5309      5953434C 
 5309      4B5F5055 
 5309      4D505F44 
 5309      49565F32 
 5310              	.LASF336:
 5311 1a86 43595F53 		.ascii	"CY_SYSCLK_PUMP_DIV_4\000"
 5311      5953434C 
 5311      4B5F5055 
 5311      4D505F44 
 5311      49565F34 
 5312              	.LASF337:
 5313 1a9b 43595F53 		.ascii	"CY_SYSCLK_PUMP_DIV_8\000"
 5313      5953434C 
 5313      4B5F5055 
 5313      4D505F44 
 5313      49565F38 
 5314              	.LASF368:
 5315 1ab0 43795F53 		.ascii	"Cy_SysClk_IloDisable\000"
 5315      7973436C 
 5315      6B5F496C 
 5315      6F446973 
 5315      61626C65 
 5316              	.LASF325:
 5317 1ac5 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH8\000"
 5317      5953434C 
 5317      4B5F5055 
 5317      4D505F49 
 5317      4E5F434C 
 5318              	.LASF234:
 5319 1ae0 696E7472 		.ascii	"intrMask\000"
 5319      4D61736B 
 5319      00
 5320              	.LASF108:
 5321 1ae9 414C4D32 		.ascii	"ALM2_DATE\000"
 5321      5F444154 
 5321      4500
 5322              	.LASF306:
ARM GAS  C:\Users\Mathieu\AppData\Local\Temp\ccQtCip4.s 			page 212


 5323 1af3 43595F53 		.ascii	"CY_SYSCLK_CLKLF_IN_ILO\000"
 5323      5953434C 
 5323      4B5F434C 
 5323      4B4C465F 
 5323      494E5F49 
 5324              	.LASF259:
 5325 1b0a 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_ALTLF\000"
 5325      5953434C 
 5325      4B5F434C 
 5325      4B504154 
 5325      485F494E 
 5326              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
